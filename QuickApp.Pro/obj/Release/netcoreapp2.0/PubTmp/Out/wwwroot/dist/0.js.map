{"version":3,"sources":["..\\..\\./ClientApp/app/singlepages/singlepages.module.ts","..\\..\\./node_modules/primeng/components/common/shared.js","..\\..\\./node_modules/primeng/components/utils/objectutils.js","..\\..\\./node_modules/primeng/components/button/button.js","..\\..\\./node_modules/primeng/components/inputtext/inputtext.js","..\\..\\./node_modules/primeng/components/paginator/paginator.js","..\\..\\./node_modules/primeng/table.js","..\\..\\./node_modules/primeng/components/table/table.js","..\\..\\./node_modules/primeng/components/dropdown/dropdown.js","..\\..\\./node_modules/primeng/button.js","..\\..\\./node_modules/primeng/selectbutton.js","..\\..\\./node_modules/primeng/components/selectbutton/selectbutton.js","..\\..\\./node_modules/primeng/inputtext.js","..\\..\\./node_modules/primeng/multiselect.js","..\\..\\./node_modules/primeng/components/multiselect/multiselect.js","..\\..\\./node_modules/primeng/inputswitch.js","..\\..\\./node_modules/primeng/components/inputswitch/inputswitch.js","..\\..\\./node_modules/primeng/autocomplete.js","..\\..\\./node_modules/primeng/components/autocomplete/autocomplete.js","..\\..\\./node_modules/primeng/breadcrumb.js","..\\..\\./node_modules/primeng/components/breadcrumb/breadcrumb.js","..\\..\\./node_modules/primeng/checkbox.js","..\\..\\./node_modules/primeng/components/checkbox/checkbox.js","..\\..\\./node_modules/primeng/dialog.js","..\\..\\./node_modules/primeng/components/dialog/dialog.js","..\\..\\./node_modules/primeng/treetable.js","..\\..\\./node_modules/primeng/components/treetable/treetable.js","..\\..\\./node_modules/primeng/tree.js","..\\..\\./node_modules/primeng/components/tree/tree.js","..\\..\\./ClientApp/app/models/currency.model.ts","..\\..\\./ClientApp/app/models/vendorclassification.model.ts","..\\..\\./ClientApp/app/models/credit-terms.model.ts","..\\..\\./ClientApp/app/models/item-classification.model.ts","..\\..\\./ClientApp/app/models/item-group.model.ts","..\\..\\./ClientApp/app/models/priority.model.ts","..\\..\\./ClientApp/app/models/provision.model.ts","..\\..\\./ClientApp/app/models/unitofmeasure.model.ts","..\\..\\./ClientApp/app/components/vendor-classification/vendor-classification.component.ts","..\\..\\./ClientApp/app/models/customer-classification.model.ts","..\\..\\./ClientApp/app/models/employeeexpertise.model.ts","..\\..\\./ClientApp/app/models/jobtitle.model.ts","..\\..\\./ClientApp/app/models/taxrate.model.ts","..\\..\\./ClientApp/app/components/vendor-classification/vendor-classification.component.html","webpack:///./ClientApp/app/components/vendor-classification/vendor-classification.component.scss?e1e2","..\\..\\./ClientApp/app/components/vendor-classification/vendor-classification.component.scss","..\\..\\./ClientApp/app/models/certificationtype.model.ts","..\\..\\./ClientApp/app/singlepages/singlepages.component.ts","..\\..\\./ClientApp/app/components/actions/actions.component.ts","..\\..\\./ClientApp/app/components/action-attributes/action-attributes.component.ts","..\\..\\./ClientApp/app/components/ata-main/ata-main.component.ts","..\\..\\./ClientApp/app/components/credit-terms/credit-terms.component.ts","..\\..\\./ClientApp/app/components/currency/currency.component.ts","..\\..\\./ClientApp/app/components/customer-classification/customer-classification.component.ts","..\\..\\./ClientApp/app/components/documents/documents.component.ts","..\\..\\./ClientApp/app/components/employee-expertise/employee-expertise.component.ts","..\\..\\./ClientApp/app/components/expenditure/expenditure.component.ts","..\\..\\./ClientApp/app/components/findings/findings.component.ts","..\\..\\./ClientApp/app/components/gate-code/gate-code.component.ts","..\\..\\./ClientApp/app/components/integration/integration.component.ts","..\\..\\./ClientApp/app/components/item-classification/item-classification.component.ts","..\\..\\./ClientApp/app/components/item-group/item-group.component.ts","..\\..\\./ClientApp/app/components/job-title/job-title.component.ts","..\\..\\./ClientApp/app/components/priority/priority.component.ts","..\\..\\./ClientApp/app/components/provision/provision.component.ts","..\\..\\./ClientApp/app/components/publication/publication.component.ts","..\\..\\./ClientApp/app/components/reason/reason.component.ts","..\\..\\./ClientApp/app/components/tax-rate/tax-rate.component.ts","..\\..\\./ClientApp/app/components/unit-of-measure/unit-of-measure.component.ts","..\\..\\./ClientApp/app/components/work-performed/work-performed.component.ts","..\\..\\./ClientApp/app/components/work-scope/work-scope.component.ts","..\\..\\./ClientApp/app/components/action-attribute-mapping/action-attribute-mapping.component.ts","..\\..\\./ClientApp/app/components/ata-sub-chapter1/ata-sub-chapter1.component.ts","..\\..\\./ClientApp/app/components/ata-sub-chapter2/ata-sub-chapter2.component.ts","..\\..\\./ClientApp/app/components/location/location.component.ts","..\\..\\./ClientApp/app/components/shelf/shelf.component.ts","..\\..\\./ClientApp/app/components/bin/bin.component.ts","..\\..\\./ClientApp/app/components/capabilities/capabilities.component.ts","..\\..\\./ClientApp/app/components/financial-statement-mapping/financial-statement-mapping.component.ts","..\\..\\./ClientApp/app/components/gl-account-class/gl-account-class.component.ts","..\\..\\./ClientApp/app/components/gl-cash-flow-classification/gl-cash-flow-classification.component.ts","..\\..\\./ClientApp/app/components/gl-financial-statement/gl-financial-statement.component.ts","..\\..\\./ClientApp/app/components/journal-approvals/journal-approvals.component.ts","..\\..\\./ClientApp/app/components/rfq-engine/rfq-engine.component.ts","..\\..\\./ClientApp/app/components/actions/actions-editor.component.ts","..\\..\\./ClientApp/app/components/charges/charges.component.ts","..\\..\\./ClientApp/app/components/default-message/default-message.component.ts","..\\..\\./ClientApp/app/components/tax-type/tax-type.component.ts","..\\..\\./ClientApp/app/components/conditions/conditions.component.ts","..\\..\\./ClientApp/app/components/site/site.component.ts","..\\..\\./ClientApp/app/components/warehouse/warehouse.component.ts","..\\..\\./ClientApp/app/components/gl-account-categories/gl-account-categories.component.ts","..\\..\\./ClientApp/app/components/manufacturer/manufacturer.component.ts","..\\..\\./ClientApp/app/components/vendorcapabilities/vendorcapabilities.component.ts","..\\..\\./ClientApp/app/components/laber-and-overhead-cost-setup/laber-and-overhead-cost-setup.component.ts","..\\..\\./ClientApp/app/components/certification-type/certification-type.component.ts","..\\..\\./ClientApp/app/components/AssetStatus/asset-status.component.ts","..\\..\\./ClientApp/app/components/depriciation-method/depriciation-method.component.ts","..\\..\\./ClientApp/app/components/disposal-type/disposal-type.component.ts","..\\..\\./ClientApp/app/components/asset-dep-convention-type/asset-dep-convention-type.component.ts","..\\..\\./ClientApp/app/components/depreciation-intervals/depreciation-intervals.component.ts","..\\..\\./ClientApp/app/components/asset-intangible-type-single-screen/asset-intangible-type-single-screen.component.ts","..\\..\\./ClientApp/app/components/asset-type-single-screen/asset-type-single-screen.component.ts","..\\..\\./ClientApp/app/singlepages/singlepages-routing.module.ts","..\\..\\./ClientApp/app/singlepages/singlepages.component.html","..\\..\\./ClientApp/app/models/action.model.ts","..\\..\\./ClientApp/app/components/actions/actions.component.html","webpack:///./ClientApp/app/components/actions/actions.component.scss?fa4a","..\\..\\./ClientApp/app/components/actions/actions.component.scss","..\\..\\./ClientApp/app/models/actionattribute.model.ts","..\\..\\./ClientApp/app/components/action-attributes/action-attributes.component.html","webpack:///./ClientApp/app/components/action-attributes/action-attributes.component.scss?0717","..\\..\\./ClientApp/app/components/action-attributes/action-attributes.component.scss","..\\..\\./ClientApp/app/models/atachapter.model.ts","..\\..\\./ClientApp/app/components/ata-main/ata-main.component.html","webpack:///./ClientApp/app/components/ata-main/ata-main.component.scss?5ba7","..\\..\\./ClientApp/app/components/ata-main/ata-main.component.scss","..\\..\\./ClientApp/app/components/credit-terms/credit-terms.component.html","webpack:///./ClientApp/app/components/credit-terms/credit-terms.component.scss?f34a","..\\..\\./ClientApp/app/components/credit-terms/credit-terms.component.scss","..\\..\\./ClientApp/app/components/currency/currency.component.html","webpack:///./ClientApp/app/components/currency/currency.component.scss?0597","..\\..\\./ClientApp/app/components/currency/currency.component.scss","..\\..\\./ClientApp/app/components/customer-classification/customer-classification.component.html","webpack:///./ClientApp/app/components/customer-classification/customer-classification.component.scss?ada0","..\\..\\./ClientApp/app/components/customer-classification/customer-classification.component.scss","..\\..\\./ClientApp/app/models/document.model.ts","..\\..\\./ClientApp/app/components/documents/documents.component.html","webpack:///./ClientApp/app/components/documents/documents.component.scss?205f","..\\..\\./ClientApp/app/components/documents/documents.component.scss","..\\..\\./ClientApp/app/components/employee-expertise/employee-expertise.component.html","webpack:///./ClientApp/app/components/employee-expertise/employee-expertise.component.scss?7b63","..\\..\\./ClientApp/app/components/employee-expertise/employee-expertise.component.scss","..\\..\\./ClientApp/app/models/expenditurecategory.model.ts","..\\..\\./ClientApp/app/components/expenditure/expenditure.component.html","webpack:///./ClientApp/app/components/expenditure/expenditure.component.scss?3c47","..\\..\\./ClientApp/app/components/expenditure/expenditure.component.scss","..\\..\\./ClientApp/app/models/finding.model.ts","..\\..\\./ClientApp/app/components/findings/findings.component.html","webpack:///./ClientApp/app/components/findings/findings.component.scss?ade5","..\\..\\./ClientApp/app/components/findings/findings.component.scss","..\\..\\./ClientApp/app/models/gatecode.model.ts","..\\..\\./ClientApp/app/components/gate-code/gate-code.component.html","webpack:///./ClientApp/app/components/gate-code/gate-code.component.scss?d4b4","..\\..\\./ClientApp/app/components/gate-code/gate-code.component.scss","..\\..\\./ClientApp/app/components/integration/integration.component.html","webpack:///./ClientApp/app/components/integration/integration.component.scss?30ed","..\\..\\./ClientApp/app/components/integration/integration.component.scss","..\\..\\./ClientApp/app/components/item-classification/item-classification.component.html","webpack:///./ClientApp/app/components/item-classification/item-classification.component.scss?0e2c","..\\..\\./ClientApp/app/components/item-classification/item-classification.component.scss","..\\..\\./ClientApp/app/components/item-group/item-group.component.html","webpack:///./ClientApp/app/components/item-group/item-group.component.scss?f694","..\\..\\./ClientApp/app/components/item-group/item-group.component.scss","..\\..\\./ClientApp/app/components/job-title/job-title.component.html","webpack:///./ClientApp/app/components/job-title/job-title.component.scss?8837","..\\..\\./ClientApp/app/components/job-title/job-title.component.scss","..\\..\\./ClientApp/app/components/priority/priority.component.html","webpack:///./ClientApp/app/components/priority/priority.component.scss?c848","..\\..\\./ClientApp/app/components/priority/priority.component.scss","..\\..\\./ClientApp/app/components/provision/provision.component.html","webpack:///./ClientApp/app/components/provision/provision.component.scss?e7bf","..\\..\\./ClientApp/app/components/provision/provision.component.scss","..\\..\\./ClientApp/app/models/publication.model.ts","..\\..\\./ClientApp/app/components/publication/publication.component.html","webpack:///./ClientApp/app/components/publication/publication.component.scss?8032","..\\..\\./ClientApp/app/components/publication/publication.component.scss","..\\..\\./ClientApp/app/models/reason.model.ts","..\\..\\./ClientApp/app/components/reason/reason.component.html","webpack:///./ClientApp/app/components/reason/reason.component.scss?e85a","..\\..\\./ClientApp/app/components/reason/reason.component.scss","..\\..\\./ClientApp/app/components/tax-rate/tax-rate.component.html","webpack:///./ClientApp/app/components/tax-rate/tax-rate.component.scss?a40e","..\\..\\./ClientApp/app/components/tax-rate/tax-rate.component.scss","..\\..\\./ClientApp/app/components/unit-of-measure/unit-of-measure.component.html","webpack:///./ClientApp/app/components/unit-of-measure/unit-of-measure.component.scss?d049","..\\..\\./ClientApp/app/components/unit-of-measure/unit-of-measure.component.scss","..\\..\\./ClientApp/app/models/workperformed.model.ts","..\\..\\./ClientApp/app/components/work-performed/work-performed.component.html","webpack:///./ClientApp/app/components/work-performed/work-performed.component.scss?83b7","..\\..\\./ClientApp/app/components/work-performed/work-performed.component.scss","..\\..\\./ClientApp/app/models/workscope.model.ts","..\\..\\./ClientApp/app/components/work-scope/work-scope.component.html","webpack:///./ClientApp/app/components/work-scope/work-scope.component.scss?6c7f","..\\..\\./ClientApp/app/components/work-scope/work-scope.component.scss","..\\..\\./ClientApp/app/components/action-attribute-mapping/action-attribute-mapping.component.html","webpack:///./ClientApp/app/components/action-attribute-mapping/action-attribute-mapping.component.scss?262d","..\\..\\./ClientApp/app/components/action-attribute-mapping/action-attribute-mapping.component.scss","..\\..\\./ClientApp/app/models/atasubchapter.model.ts","..\\..\\./ClientApp/app/components/ata-sub-chapter1/ata-sub-chapter1.component.html","webpack:///./ClientApp/app/components/ata-sub-chapter1/ata-sub-chapter1.component.scss?4844","..\\..\\./ClientApp/app/components/ata-sub-chapter1/ata-sub-chapter1.component.scss","..\\..\\./ClientApp/app/models/atasubchapter2.model.ts","..\\..\\./ClientApp/app/components/ata-sub-chapter2/ata-sub-chapter2.component.html","webpack:///./ClientApp/app/components/ata-sub-chapter2/ata-sub-chapter2.component.scss?07e5","..\\..\\./ClientApp/app/components/ata-sub-chapter2/ata-sub-chapter2.component.scss","..\\..\\./ClientApp/app/models/location.model.ts","..\\..\\./ClientApp/app/components/location/location.component.html","webpack:///./ClientApp/app/components/location/location.component.scss?b989","..\\..\\./ClientApp/app/components/location/location.component.scss","..\\..\\./ClientApp/app/models/shelf.model.ts","..\\..\\./ClientApp/app/components/shelf/shelf.component.html","webpack:///./ClientApp/app/components/shelf/shelf.component.scss?b2a2","..\\..\\./ClientApp/app/components/shelf/shelf.component.scss","..\\..\\./ClientApp/app/models/bin.model.ts","..\\..\\./ClientApp/app/components/bin/bin.component.html","webpack:///./ClientApp/app/components/bin/bin.component.scss?9bdd","..\\..\\./ClientApp/app/components/bin/bin.component.scss","..\\..\\./ClientApp/app/components/capabilities/capabilities.component.html","webpack:///./ClientApp/app/components/capabilities/capabilities.component.scss?abd2","..\\..\\./ClientApp/app/components/capabilities/capabilities.component.scss","..\\..\\./ClientApp/app/components/financial-statement-mapping/financial-statement-mapping.component.html","webpack:///./ClientApp/app/components/financial-statement-mapping/financial-statement-mapping.component.scss?4369","..\\..\\./ClientApp/app/components/financial-statement-mapping/financial-statement-mapping.component.scss","..\\..\\./ClientApp/app/models/glaccountclass.model.ts","..\\..\\./ClientApp/app/components/gl-account-class/gl-account-class.component.html","webpack:///./ClientApp/app/components/gl-account-class/gl-account-class.component.scss?cec1","..\\..\\./ClientApp/app/components/gl-account-class/gl-account-class.component.scss","..\\..\\./ClientApp/app/models/glcashflowclassification.model.ts","..\\..\\./ClientApp/app/components/gl-cash-flow-classification/gl-cash-flow-classification.component.html","webpack:///./ClientApp/app/components/gl-cash-flow-classification/gl-cash-flow-classification.component.scss?16e8","..\\..\\./ClientApp/app/components/gl-cash-flow-classification/gl-cash-flow-classification.component.scss","..\\..\\./ClientApp/app/components/gl-financial-statement/gl-financial-statement.component.html","webpack:///./ClientApp/app/components/gl-financial-statement/gl-financial-statement.component.scss?8069","..\\..\\./ClientApp/app/components/gl-financial-statement/gl-financial-statement.component.scss","..\\..\\./ClientApp/app/components/journal-approvals/journal-approvals.component.html","webpack:///./ClientApp/app/components/journal-approvals/journal-approvals.component.scss?ffc2","..\\..\\./ClientApp/app/components/journal-approvals/journal-approvals.component.scss","..\\..\\./ClientApp/app/components/rfq-engine/rfq-engine.component.html","webpack:///./ClientApp/app/components/rfq-engine/rfq-engine.component.scss?22d6","..\\..\\./ClientApp/app/components/rfq-engine/rfq-engine.component.scss","..\\..\\./ClientApp/app/components/actions/actions-editor.component.html","..\\..\\./ClientApp/app/models/charge.model.ts","..\\..\\./ClientApp/app/components/charges/charges.component.html","webpack:///./ClientApp/app/components/charges/charges.component.scss?5867","..\\..\\./ClientApp/app/components/charges/charges.component.scss","..\\..\\./ClientApp/app/models/defaultmessage.model.ts","..\\..\\./ClientApp/app/components/default-message/default-message.component.html","webpack:///./ClientApp/app/components/default-message/default-message.component.scss?9660","..\\..\\./ClientApp/app/components/default-message/default-message.component.scss","..\\..\\./ClientApp/app/models/taxtype.model.ts","..\\..\\./ClientApp/app/components/tax-type/tax-type.component.html","webpack:///./ClientApp/app/components/tax-type/tax-type.component.scss?4c3a","..\\..\\./ClientApp/app/components/tax-type/tax-type.component.scss","..\\..\\./ClientApp/app/models/condition.model.ts","..\\..\\./ClientApp/app/components/conditions/conditions.component.html","webpack:///./ClientApp/app/components/conditions/conditions.component.scss?31f5","..\\..\\./ClientApp/app/components/conditions/conditions.component.scss","..\\..\\./ClientApp/app/models/site.model.ts","..\\..\\./ClientApp/app/components/site/site.component.html","webpack:///./ClientApp/app/components/site/site.component.scss?dd9f","..\\..\\./ClientApp/app/components/site/site.component.scss","..\\..\\./ClientApp/app/models/warehouse.model.ts","..\\..\\./ClientApp/app/components/warehouse/warehouse.component.html","webpack:///./ClientApp/app/components/warehouse/warehouse.component.scss?42c5","..\\..\\./ClientApp/app/components/warehouse/warehouse.component.scss","..\\..\\./ClientApp/app/components/gl-account-categories/gl-account-categories.component.html","webpack:///./ClientApp/app/components/gl-account-categories/gl-account-categories.component.scss?2d62","..\\..\\./ClientApp/app/components/gl-account-categories/gl-account-categories.component.scss","..\\..\\./ClientApp/app/models/manufacturer.model.ts","..\\..\\./ClientApp/app/components/manufacturer/manufacturer.component.html","webpack:///./ClientApp/app/components/manufacturer/manufacturer.component.scss?a2b7","..\\..\\./ClientApp/app/components/manufacturer/manufacturer.component.scss","..\\..\\./ClientApp/app/models/vendorcapabilities.model.ts","..\\..\\./ClientApp/app/components/vendorcapabilities/vendorcapabilities.component.html","webpack:///./ClientApp/app/components/vendorcapabilities/vendorcapabilities.component.scss?251d","..\\..\\./ClientApp/app/components/vendorcapabilities/vendorcapabilities.component.scss","..\\..\\./ClientApp/app/models/laborandoverheadcostsetup.model.ts","..\\..\\./ClientApp/app/components/laber-and-overhead-cost-setup/laber-and-overhead-cost-setup.component.html","webpack:///./ClientApp/app/components/laber-and-overhead-cost-setup/laber-and-overhead-cost-setup.component.scss?a852","..\\..\\./ClientApp/app/components/laber-and-overhead-cost-setup/laber-and-overhead-cost-setup.component.scss","..\\..\\./ClientApp/app/components/certification-type/certification-type.component.html","webpack:///./ClientApp/app/components/certification-type/certification-type.component.scss?5fdf","..\\..\\./ClientApp/app/components/certification-type/certification-type.component.scss","..\\..\\./ClientApp/app/models/asset-status.model.ts","..\\..\\./ClientApp/app/models/single-screen-audit-details.model.ts","..\\..\\./ClientApp/app/components/AssetStatus/asset-status.component.html","..\\..\\./ClientApp/app/models/depriciation-method.model.ts","..\\..\\./ClientApp/app/components/depriciation-method/depriciation-method.component.html","webpack:///./ClientApp/app/components/depriciation-method/depriciation-method.component.scss?823d","..\\..\\./ClientApp/app/components/depriciation-method/depriciation-method.component.scss","..\\..\\./ClientApp/app/models/disposal-type.model.ts","..\\..\\./ClientApp/app/components/disposal-type/disposal-type.component.html","webpack:///./ClientApp/app/components/disposal-type/disposal-type.component.scss?db47","..\\..\\./ClientApp/app/components/disposal-type/disposal-type.component.scss","..\\..\\./ClientApp/app/models/assetDepConventionType.model.ts","..\\..\\./ClientApp/app/components/asset-dep-convention-type/asset-dep-convention-type.component.html","webpack:///./ClientApp/app/components/asset-dep-convention-type/asset-dep-convention-type.component.scss?032a","..\\..\\./ClientApp/app/components/asset-dep-convention-type/asset-dep-convention-type.component.scss","..\\..\\./ClientApp/app/models/depriciationIntervals.model.ts","..\\..\\./ClientApp/app/components/depreciation-intervals/depreciation-intervals.component.html","webpack:///./ClientApp/app/components/depreciation-intervals/depreciation-intervals.component.scss?ce77","..\\..\\./ClientApp/app/components/depreciation-intervals/depreciation-intervals.component.scss","..\\..\\./ClientApp/app/models/assetIntangibleTypeSingleScreen.model.ts","..\\..\\./ClientApp/app/components/asset-intangible-type-single-screen/asset-intangible-type-single-screen.component.html","..\\..\\./ClientApp/app/models/assettypesinglescreen.model.ts","..\\..\\./ClientApp/app/components/asset-type-single-screen/asset-type-single-screen.component.html","webpack:///./ClientApp/app/components/asset-type-single-screen/asset-type-single-screen.component.scss?2f6c","..\\..\\./ClientApp/app/components/asset-type-single-screen/asset-type-single-screen.component.scss"],"names":[],"mappings":"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AQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;;ACzTA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,0CAA0C,4DAA4D;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,qBAAqB;AAClE;AACA,mDAAmD,sBAAsB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB;AAC5D;AACA,kCAAkC,yDAAyD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,uC;;;;;;;;ACzKA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yJAAyJ,ofAAof,qMAAqM,oKAAoK,+HAA+H,iBAAiB;AACtoC,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;;ACxMA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;ACrEA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+DAA+D,gBAAgB;AAC/E;AACA,gDAAgD,iCAAiC;AACjF;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrkCAAkC,gUAAgU,kCAAkC,oaAAoa,6CAA6C,KAAK,UAAU,4MAA4M,iCAAiC,6TAA6T,iCAAiC,ggBAAggB,WAAW,0BAA0B;AACnmF,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;ACtOA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oC;;;;;;;;ACNA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iDAAiD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mDAAmD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+BAA+B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,8BAA8B,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA,iDAAiD,iEAAiE;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wFAAwF;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iEAAiE;AACtH;AACA;AACA;AACA;AACA,mDAAmD,wFAAwF;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,8BAA8B,EAAE;AACvH;AACA,qDAAqD,iEAAiE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,wFAAwF;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,oDAAoD;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sCAAsC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,wDAAwD;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,4BAA4B,EAAE;AACzG;AACA;AACA;AACA;AACA,uCAAuC,wDAAwD;AAC/F;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gGAAgG;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gGAAgG;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,8BAA8B,EAAE;AACvG;AACA,qCAAqC,6FAA6F;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6FAA6F;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,uCAAuC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oCAAoC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4BAA4B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4BAA4B,cAAc;AAC1C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbsHAAsH,8SAA8S,0tCAA0tC,UAAU,mBAAmB,mJAAmJ,WAAW,mBAAmB,iLAAiL,UAAU,mBAAmB,weAAwe,mBAAmB;AACrhF;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kYAAkY,WAAW,gGAAgG,ibAAib,WAAW,qIAAqI,qKAAqK,WAAW,gGAAgG,+NAA+N,WAAW,mBAAmB;AAC3jD,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8bAA8b,UAAU,mBAAmB,4MAA4M,UAAU,mBAAmB,0UAA0U,WAAW,yDAAyD,mQAAmQ,mFAAmF,gMAAgM,UAAU,mBAAmB,uvBAAuvB,UAAU,mBAAmB,4MAA4M,UAAU,mBAAmB;AACloF,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gNAAgN,4FAA4F;AAC5S,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qCAAqC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,qCAAqC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qCAAqC;AACpF;AACA;AACA;AACA;AACA,6CAA6C,qCAAqC;AAClaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uVAAuV,+HAA+H,mFAAmF,0BAA0B;AACnkB,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qVAAqV,0HAA0H,8EAA8E,sBAAsB;AACnjB,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yWAAyW,+HAA+H,8EAA8E,sBAAsB;AAC5kB,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,iC;;;;;;;;AC99FA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iBAAiB,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,YAAY;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAA4C;AACjmIAAmI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kCAAkC;AAC5E,kFAAkF,2CAA2C;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uBAAuB;AACtD,mCAAmC,0FAA0F;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbwOAAwO,oaAAoa,aAAa,+SAA+S,cAAc,6QAA6Q,cAAc,wjBAAwjB,oHAAoH,4GAA4G,gBAAgB,wFAAwF,WAAW,0BAA0B,0EAA0E,gJAAgJ,4CAA4C,sBAAsB,66BAA66B,2BAA2B,0FAA0F,osCAAosC,yBAAyB,6FAA6F,WAAW,oBAAoB,uIAAuI,WAAW,0DAA0D,0OAA0O,WAAW,4DAA4D,gOAAgO,yGAAyG,oVAAoV,qEAAqE,uBAAuB,wFAAwF,WAAW,kBAAkB,mMAAmM,oBAAoB;AAC96M;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB,uFAAuF,sBAAsB;AAC7G,uFAAuF,sBAAsB;AAC7G;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;;AC13BA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oC;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oC;;;;;;;;ACNA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,qBAAqB,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,yBAAyB,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uPAAuP,oFAAoF,mBAAmB,iCAAiC,0PAA0P,qWAAqW,wBAAwB,2JAA2J,WAAW,kCAAkC;AAC9rC;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,wC;;;;;;;;AC7KA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oC;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oC;;;;;;;;ACNA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oBAAoB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4BAA4B,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAA4D;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0CAA0C;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,MAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbyJAAyJ,spBAAspB,gBAAgB,6FAA6F,WAAW,iBAAiB,gGAAgG,+DAA+D,kSAAkS,2BAA2B,0FAA0F,yRAAyR,qDAAqD,4bAA4b,iCAAiC,2HAA2H,6BAA6B,wgCAAwgC,wOAAwO,gJAAgJ,wsBAAwsB,iJAAiJ,kGAAkG,uCAAuC,qJAAqJ,cAAc,qFAAqF,WAAW,4BAA4B;AAChnK;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB,uFAAuF,sBAAsB;AAC7G,uFAAuF,sBAAsB;AAC7G;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,uC;;;;;;;;ACtlBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oC;;;;;;;;ACNA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oBAAoB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oIAAoI;AACvL;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,uC;;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oC;;;;;;;;ACNA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,qBAAqB,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,uBAAuB,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACboDAAoD,mGAAmG,8jCAA8jC,oDAAoD,yYAAyY,uDAAuD,oFAAoF,WAAW,eAAe,s2CAAs2C,2BAA2B,0FAA0F,+TAA+T,gCAAgC,8FAA8F,mMAAmM,8DAA8D,gFAAgF,WAAW,8BAA8B,+JAA+J,cAAc;AACtvI;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB,uFAAuF,sBAAsB;AAC7G,uFAAuF,sBAAsB;AAC7G;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,wC;;;;;;;;ACtsBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oC;;;;;;;;ACNA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kbAAkb,kCAAkC,qZAAqZ,YAAY,yGAAyG,kCAAkC,gnBAAgnB,kCAAkC,sQAAsQ,YAAY,oQAAoQ,YAAY,6GAA6G,kCAAkC,sQAAsQ,YAAY;AACrlF,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oC;;;;;;;;ACNA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,gDAAgD,iBAAiB,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,4BAA4B,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+XAA+X,yBAAyB,4QAA4Q,gFAAgF,8EAA8E,sBAAsB,6JAA6J,2GAA2G,6DAA6D,OAAO;AACpqC;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;;ACxKA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oC;;;;;;;;ACNA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0BAA0B,EAAE;AACpE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6EAA6E,EAAE;AACnmCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACniDAAiD,qBAAqB;AACtE;AACA;AACA;AACA,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,0HAA0H,iPAAiP,2BAA2B,qCAAqC,iYAAiY,QAAQ,iRAAiR,sEAAsE,wOAAwO,yEAAyE,mtBAAmtB;AAC7sE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB,8EAA8E,kBAAkB;AAChG;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;;AC7mBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oC;;;;;;;;ACNA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,qBAAqB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iDAAiD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mDAAmD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,gBAAgB;AACtF;AACA;AACA;AACA,aAAa;AACb;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,gBAAgB;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+BAA+B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,8BAA8B,EAAE;AACnH;AACA;AACA;AACA;AACA;AACA,8CAA8C,sEAAsE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6FAA6F;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,sEAAsE;AACxH;AACA;AACA;AACA;AACA,gDAAgD,6FAA6F;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,8BAA8B,EAAE;AACnH;AACA,kDAAkD,sEAAsE;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,6FAA6F;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iDAAiD;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iDAAiD;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mCAAmC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,uCAAuC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,qBAAqB,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,mBAAmB,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtotCAAotC,UAAU,mBAAmB,uJAAuJ,WAAW,mBAAmB,qLAAqL,UAAU,mBAAmB,igBAAigB,mBAAmB;AACnkF;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0RAA0R,WAAW,0GAA0G,8LAA8L,WAAW,mBAAmB;AAC3mB,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6YAA6Y,UAAU,mBAAmB,gNAAgN,UAAU,mBAAmB,iYAAiY,UAAU,mBAAmB,ooBAAooB,UAAU,mBAAmB,gNAAgN,UAAU,mBAAmB;AACn8D,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oRAAoR,4FAA4F;AAChX,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iVAAiV,0HAA0H,iFAAiF,6DAA6D;AACzlB,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wZAAwZ,uJAAuJ,8EAA8E,sBAAsB;AACnpB,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qCAAqC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,qCAAqC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qCAAqC;AACpF;AACA;AACA;AACA;AACA,6CAA6C,qCAAqC;AAClaAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;ACztEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oC;;;;;;;;ACNA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,wCAAwC;AAC7E;AACA;AACA;AACA,uCAAuC,wCAAwC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2JAA2J,gEAAgE,u1BAAu1B,2JAA2J,+PAA+P,8DAA8D,kXAAkX,wDAAwD,sPAAsP,kCAAkC,kFAAkF,YAAY,qLAAqL,WAAW,gBAAgB,uLAAuL,0LAA0L,qBAAqB,mBAAmB,iBAAiB,wUAAwU,gEAAgE,kmBAAkmB,yCAAyC,wJAAwJ,wCAAwC,mOAAmO,uCAAuC,iJAAiJ,8EAA8E,uOAAuO,kDAAkD,+YAA+Y,YAAY,yMAAyM,WAAW,gBAAgB,ifAAif,qBAAqB,mBAAmB;AACjhM;AACA,SAAS;AACT,gEAAgE,aAAa,EAAE;AAC/E;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,qBAAqB,EAAE;AACzG;AACA;AACA;AACA;AACA,8CAA8C,mCAAmC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,mCAAmC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,qBAAqB,EAAE;AAC7G;AACA;AACA,kDAAkD,mCAAmC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,mCAAmC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mCAAmC;AACzF;AACA;AACA;AACA,oDAAoD,mCAAmC;AACvF;AACA;AACA;AACA;AACA,sFAAsF,qBAAqB,EAAE;AAC7G,sDAAsD,mCAAmC;AACzF;AACA;AACA;AACA,oDAAoD,mCAAmC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,mCAAmC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,qBAAqB,EAAE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,mBAAmB,EAAE;AAC3F;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,yBAAyB;AACtF;AACA,iEAAiE,yBAAyB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"0.js","sourcesContent":["// ===============================\r\n// info@ebenmonney.com\r\n// www.ebenmonney.com/quickapp-pro\r\n// ===============================\r\n\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FlexLayoutModule } from '@angular/flex-layout'\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { TranslateModule } from \"@ngx-translate/core\";\r\nimport { QuickAppProMaterialModule } from \"../modules/material.module\";\r\nimport { CommonModule } from '@angular/common'; //<-- This one\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GroupByPipe } from '../pipes/group-by.pipe';\r\n\r\nimport { SinglePagesRoutingModule   } from \"./singlepages-routing.module\";\r\n\r\nimport { SingleComponent } from \"./singlepages.component\";\r\nimport { ActionsComponent } from '../components/actions/actions.component';\r\nimport { ActionAttributesComponent } from '../components/action-attributes/action-attributes.component';\r\nimport { AtaMainComponent } from '../components/ata-main/ata-main.component';\r\nimport { CreditTermsComponent } from '../components/credit-terms/credit-terms.component';\r\nimport { CurrencyComponent } from '../components/currency/currency.component';\r\nimport { CustomerClassificationComponent } from '../components/customer-classification/customer-classification.component';\r\nimport { DocumentsComponent } from '../components/documents/documents.component';\r\nimport { EmployeeExpertiseComponent } from '../components/employee-expertise/employee-expertise.component';\r\nimport { ExpenditureComponent } from '../components/expenditure/expenditure.component';\r\nimport { FindingsComponent } from '../components/findings/findings.component';\r\nimport { GateCodeComponent } from '../components/gate-code/gate-code.component';\r\nimport { IntegrationComponent } from '../components/integration/integration.component';\r\nimport { ItemClassificationComponent } from '../components/item-classification/item-classification.component';\r\nimport { ItemGroupComponent } from '../components/item-group/item-group.component';\r\nimport { JobTitleComponent } from '../components/job-title/job-title.component';\r\nimport { PriorityComponent } from '../components/priority/priority.component';\r\nimport { ProvisionComponent } from '../components/provision/provision.component';\r\nimport { PublicationComponent } from '../components/publication/publication.component';\r\nimport { ReasonComponent } from '../components/reason/reason.component';\r\nimport { TaxRateComponent } from '../components/tax-rate/tax-rate.component';\r\nimport { UnitOfMeasureComponent } from '../components/unit-of-measure/unit-of-measure.component';\r\nimport { VendorClassificationComponent } from '../components/vendor-classification/vendor-classification.component';\r\nimport { WorkPerformedComponent } from '../components/work-performed/work-performed.component';\r\nimport { WorkScopeComponent } from '../components/work-scope/work-scope.component';\r\n\r\n\r\nimport { ActionAttributeMappingComponent } from '../components/action-attribute-mapping/action-attribute-mapping.component';\r\nimport { AtaSubChapter1Component } from '../components/ata-sub-chapter1/ata-sub-chapter1.component';\r\nimport { AtaSubChapter2Component } from '../components/ata-sub-chapter2/ata-sub-chapter2.component';\r\nimport { SiteComponent } from '../components/site/site.component';\r\nimport { CapabilitiesComponent } from '../components/capabilities/capabilities.component';\r\nimport { FinancialStatementMappingComponent } from '../components/financial-statement-mapping/financial-statement-mapping.component';\r\nimport { GlAccountClassComponent } from '../components/gl-account-class/gl-account-class.component';\r\nimport { GlCashFlowClassificationComponent } from '../components/gl-cash-flow-classification/gl-cash-flow-classification.component';\r\nimport { GlFinancialStatementComponent } from '../components/gl-financial-statement/gl-financial-statement.component';\r\nimport { JournalApprovalsComponent } from '../components/journal-approvals/journal-approvals.component';\r\nimport { RfqEngineComponent } from '../components/rfq-engine/rfq-engine.component';\r\nimport { ActionsEditorComponent } from '../components/actions/actions-editor.component';\r\n\r\n\r\n\r\n\r\n//import { DefaultMessagesComponent } from '../components/default-messages/default-messages.component';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { ChargesComponent } from '../components/charges/charges.component';\r\n//import { TaxTypeComponent } from '../components/tax-type/tax-type.component';\r\nimport { DefaultMessageComponent } from '../components/default-message/default-message.component';\r\nimport { TaxTypeComponent } from \"../components/tax-type/tax-type.component\";\r\nimport { ConditionsComponent } from \"../components/conditions/conditions.component\";\r\n\r\n\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { BreadcrumbModule } from 'primeng/breadcrumb'; //bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../services/single-screens-breadcrumb.service\";\r\nimport { WarehouseComponent } from \"../components/warehouse/warehouse.component\";\r\nimport { GLAccountCategoryComponent } from \"../components/gl-account-categories/gl-account-categories.component\";\r\nimport { ManufacturerComponent } from \"../components/manufacturer/manufacturer.component\";\r\nimport { VendorcapabilitiesComponent } from \"../components/vendorcapabilities/vendorcapabilities.component\";\r\n//import { VendorcapabilitiesComponent } from \"../components/vendor-capabilities/vendor-capabilities.component\";\r\nimport { LocationComponent } from \"../components/location/location.component\";\r\nimport { LaberAndOverheadCostSetupComponent } from \"../components/laber-and-overhead-cost-setup/laber-and-overhead-cost-setup.component\";\r\nimport { ShelfComponent } from \"../components/shelf/shelf.component\";\r\nimport { BinComponent } from '../components/bin/bin.component';\r\nimport { TreeTableModule } from 'primeng/treetable'; //for site,warehouse,location,shelf,bin\r\nimport { CheckboxModule } from 'primeng/checkbox'; //for site,warehouse,location,shelf,bin\r\nimport { TreeModule } from 'primeng/tree';\r\nimport { DialogModule } from \"primeng/dialog\";\r\nimport { CertificationTypeComponent } from \"../components/certification-type/certification-type.component\";\r\nimport { AssetStatusComponent } from \"../components/AssetStatus/asset-status.component\";\r\nimport { AssetStatusService } from \"../services/asset-status/asset-status.service\";\r\nimport { AssetStatusEndpointService } from \"../services/asset-status/assetstatus-endpoint.service\";\r\nimport { DepriciationMethodComponent } from \"../components/depriciation-method/depriciation-method.component\";\r\nimport { DepriciationMethodService } from \"../services/depriciation-method/depriciation.service\";\r\nimport { DepriciationMethodEndpointService } from \"../services/depriciation-method/depriciationmethod-endpoint.service\";\r\nimport { DisposalTypeEndpointService } from \"../services/disposal-type/disposaltype-endpoint.service\";\r\nimport { DisposalTypeService } from \"../services/disposal-type/disposaltype.service\";\r\nimport { DisposalTypeComponent } from \"../components/disposal-type/disposal-type.component\";\r\nimport { AssetDepConventionTypeComponent } from \"../components/asset-dep-convention-type/asset-dep-convention-type.component\";\r\nimport { DepreciationIntervalsService } from \"../services/Depreciation -intervals/depreciation-intervals.service \";\r\nimport { DepreciationIntervalsEndpoint } from \"../services/Depreciation -intervals/depreciation-intervals-endpoint.service\";\r\nimport { AssetDepConventionTypeService } from \"../services/assetDepConventionType/assetDepConventionType.service\";\r\nimport { AssetDepConventionTypeEndpointService } from \"../services/assetDepConventionType/assetDepConventionType-endpoint.service\";\r\nimport { DepreciationIntervalsComponent } from \"../components/depreciation-intervals/depreciation-intervals.component\";\r\nimport { AssetIntangibleTypeSingleScreenEndpointService } from \"../services/AssetIntangibleTypeSingleScreen/assetIntangibleTypeSingleScreen-endpoint\";\r\nimport { AssetIntangibleTypeSingleScreenService } from \"../services/AssetIntangibleTypeSingleScreen/assetIntangibleTypeSingleScreen.service\";\r\nimport { AssetIntangibleTypeSingleScreenComponent } from \"../components/asset-intangible-type-single-screen/asset-intangible-type-single-screen.component\";\r\nimport { AssetTypeSingleScreenEndpointService } from \"../services/AssetTypeSingleScreen/assettypesinglescreen-endpoint.service\";\r\nimport { AssetTypeSingleScreenService } from \"../services/AssetTypeSingleScreen/assettypesinglescreen.service\";\r\nimport { AssetTypeSingleScreenComponent } from \"../components/asset-type-single-screen/asset-type-single-screen.component\";\r\nimport { CreateAssetComponent } from \"../components/Asset-Management/Asset-pages/create-asset/create-asset.component\";\r\n//import { SharedModule } from '../shared/shared.module';\r\n//import { CompanyComponent } from '../shared/company/company.component';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t//\tSharedModule,\r\n        FlexLayoutModule,\r\n        FormsModule, ReactiveFormsModule,\r\n        QuickAppProMaterialModule,\r\n        TranslateModule,\r\n        CommonModule,\r\n        SinglePagesRoutingModule,\r\n        TableModule,\r\n        ButtonModule,\r\n        SelectButtonModule,\r\n        InputTextModule,\r\n        MultiSelectModule,\r\n        AutoCompleteModule,\r\n        InputSwitchModule,\r\n\t\tCheckboxModule, BreadcrumbModule, TreeTableModule, CheckboxModule, TreeModule, DialogModule\r\n\t\t//CompanyComponent\r\n    ],\r\n    declarations: [\r\n        SingleComponent,\r\n        ActionsComponent,\r\n        ActionAttributesComponent,\r\n        AtaMainComponent,\r\n        CreditTermsComponent,\r\n        CurrencyComponent,\r\n        CustomerClassificationComponent,\r\n        DocumentsComponent,\r\n        EmployeeExpertiseComponent,\r\n        ExpenditureComponent,\r\n        FindingsComponent,\r\n        GateCodeComponent,\r\n        IntegrationComponent,\r\n        ItemClassificationComponent,\r\n        ItemGroupComponent,\r\n        JobTitleComponent,\r\n        PriorityComponent,\r\n        ProvisionComponent,\r\n        PublicationComponent,\r\n        ReasonComponent,\r\n        TaxRateComponent,\r\n        UnitOfMeasureComponent,\r\n        VendorClassificationComponent,\r\n        WorkPerformedComponent,\r\n        WorkScopeComponent,\r\n        ActionsEditorComponent,\r\n        DefaultMessageComponent,\r\n      \tChargesComponent,\r\n        TaxTypeComponent,\r\n\t\tConditionsComponent,\r\n\t\tActionAttributeMappingComponent,\r\n\t\tAtaSubChapter1Component,\r\n\t\tAtaSubChapter2Component,\r\n\t\tSiteComponent,\r\n\t\tBinComponent,\r\n\t\tCapabilitiesComponent,\r\n\t\tFinancialStatementMappingComponent,\r\n\t\tGlAccountClassComponent,\r\n\t\tGlCashFlowClassificationComponent,\r\n\t\tGlFinancialStatementComponent,\r\n\t\tJournalApprovalsComponent,\r\n\t\tRfqEngineComponent,\r\n\t\tWarehouseComponent,\r\n\t\tGLAccountCategoryComponent,\r\n\t\tManufacturerComponent,\r\n\t\tVendorcapabilitiesComponent,\r\n\t\tLocationComponent,\r\n\t\tLaberAndOverheadCostSetupComponent,\r\n\t\tShelfComponent,\r\n        CertificationTypeComponent,\r\n        AssetStatusComponent,\r\n        DisposalTypeComponent,\r\n        DepriciationMethodComponent,\r\n        AssetDepConventionTypeComponent,\r\n        DepreciationIntervalsComponent,\r\n        AssetIntangibleTypeSingleScreenComponent,\r\n        AssetTypeSingleScreenComponent,\r\n\r\n\t\t//DefaultMessageComponent\r\n\r\n\r\n    ],\r\n    providers: [\r\n        SingleScreenBreadcrumbService,\r\n        AssetStatusService,\r\n        AssetStatusEndpointService,\r\n        AssetStatusEndpointService,\r\n        DepriciationMethodService,\r\n        DepriciationMethodEndpointService,\r\n        DisposalTypeEndpointService,\r\n        DisposalTypeService,\r\n        DepreciationIntervalsService,\r\n        DepreciationIntervalsEndpoint,\r\n        AssetDepConventionTypeService,\r\n        AssetDepConventionTypeEndpointService,\r\n        AssetIntangibleTypeSingleScreenEndpointService,\r\n        AssetIntangibleTypeSingleScreenService,\r\n        AssetTypeSingleScreenEndpointService,\r\n        AssetTypeSingleScreenService\r\n    ],\r\n    exports: [\r\n        FlexLayoutModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        QuickAppProMaterialModule,\r\n        TranslateModule,\r\n        VendorClassificationComponent\r\n    ],\r\n    entryComponents: [\r\n    ],\r\n   \r\n})\r\nexport class SinglePgesModule {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/singlepages/singlepages.module.ts","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar core_2 = require(\"@angular/core\");\r\nvar Header = /** @class */ (function () {\r\n    function Header() {\r\n    }\r\n    Header = __decorate([\r\n        core_2.Component({\r\n            selector: 'p-header',\r\n            template: '<ng-content></ng-content>'\r\n        })\r\n    ], Header);\r\n    return Header;\r\n}());\r\nexports.Header = Header;\r\nvar Footer = /** @class */ (function () {\r\n    function Footer() {\r\n    }\r\n    Footer = __decorate([\r\n        core_2.Component({\r\n            selector: 'p-footer',\r\n            template: '<ng-content></ng-content>'\r\n        })\r\n    ], Footer);\r\n    return Footer;\r\n}());\r\nexports.Footer = Footer;\r\nvar PrimeTemplate = /** @class */ (function () {\r\n    function PrimeTemplate(template) {\r\n        this.template = template;\r\n    }\r\n    PrimeTemplate.prototype.getType = function () {\r\n        return this.name;\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], PrimeTemplate.prototype, \"type\", void 0);\r\n    __decorate([\r\n        core_1.Input('pTemplate'),\r\n        __metadata(\"design:type\", String)\r\n    ], PrimeTemplate.prototype, \"name\", void 0);\r\n    PrimeTemplate = __decorate([\r\n        core_1.Directive({\r\n            selector: '[pTemplate]',\r\n            host: {}\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.TemplateRef])\r\n    ], PrimeTemplate);\r\n    return PrimeTemplate;\r\n}());\r\nexports.PrimeTemplate = PrimeTemplate;\r\n/* Deprecated */\r\nvar Column = /** @class */ (function () {\r\n    function Column() {\r\n        this.filterType = 'text';\r\n        this.exportable = true;\r\n        this.resizable = true;\r\n        this.sortFunction = new core_1.EventEmitter();\r\n    }\r\n    Column.prototype.ngAfterContentInit = function () {\r\n        var _this = this;\r\n        this.templates.forEach(function (item) {\r\n            switch (item.getType()) {\r\n                case 'header':\r\n                    _this.headerTemplate = item.template;\r\n                    break;\r\n                case 'body':\r\n                    _this.bodyTemplate = item.template;\r\n                    break;\r\n                case 'footer':\r\n                    _this.footerTemplate = item.template;\r\n                    break;\r\n                case 'filter':\r\n                    _this.filterTemplate = item.template;\r\n                    break;\r\n                case 'editor':\r\n                    _this.editorTemplate = item.template;\r\n                    break;\r\n                default:\r\n                    _this.bodyTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"field\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"colId\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"sortField\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"filterField\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"header\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"footer\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Column.prototype, \"sortable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Column.prototype, \"editable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Column.prototype, \"filter\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"filterMatchMode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"filterType\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Column.prototype, \"excludeGlobalFilter\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Column.prototype, \"rowspan\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Column.prototype, \"colspan\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"scope\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Column.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Column.prototype, \"exportable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Column.prototype, \"headerStyle\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"headerStyleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Column.prototype, \"bodyStyle\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"bodyStyleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Column.prototype, \"footerStyle\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"footerStyleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Column.prototype, \"hidden\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Column.prototype, \"expander\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"selectionMode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Column.prototype, \"filterPlaceholder\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Column.prototype, \"filterMaxlength\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Column.prototype, \"frozen\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Column.prototype, \"resizable\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Column.prototype, \"sortFunction\", void 0);\r\n    __decorate([\r\n        core_1.ContentChildren(PrimeTemplate),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], Column.prototype, \"templates\", void 0);\r\n    __decorate([\r\n        core_1.ContentChild(core_1.TemplateRef),\r\n        __metadata(\"design:type\", core_1.TemplateRef)\r\n    ], Column.prototype, \"template\", void 0);\r\n    Column = __decorate([\r\n        core_2.Component({\r\n            selector: 'p-column',\r\n            template: ''\r\n        })\r\n    ], Column);\r\n    return Column;\r\n}());\r\nexports.Column = Column;\r\n/* Deprecated */\r\nvar Row = /** @class */ (function () {\r\n    function Row() {\r\n    }\r\n    __decorate([\r\n        core_1.ContentChildren(Column),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], Row.prototype, \"columns\", void 0);\r\n    Row = __decorate([\r\n        core_2.Component({\r\n            selector: 'p-row',\r\n            template: \"\"\r\n        })\r\n    ], Row);\r\n    return Row;\r\n}());\r\nexports.Row = Row;\r\n/* Deprecated */\r\nvar HeaderColumnGroup = /** @class */ (function () {\r\n    function HeaderColumnGroup() {\r\n    }\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], HeaderColumnGroup.prototype, \"frozen\", void 0);\r\n    __decorate([\r\n        core_1.ContentChildren(Row),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], HeaderColumnGroup.prototype, \"rows\", void 0);\r\n    HeaderColumnGroup = __decorate([\r\n        core_2.Component({\r\n            selector: 'p-headerColumnGroup',\r\n            template: \"\"\r\n        })\r\n    ], HeaderColumnGroup);\r\n    return HeaderColumnGroup;\r\n}());\r\nexports.HeaderColumnGroup = HeaderColumnGroup;\r\n/* Deprecated */\r\nvar FooterColumnGroup = /** @class */ (function () {\r\n    function FooterColumnGroup() {\r\n    }\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], FooterColumnGroup.prototype, \"frozen\", void 0);\r\n    __decorate([\r\n        core_1.ContentChildren(Row),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], FooterColumnGroup.prototype, \"rows\", void 0);\r\n    FooterColumnGroup = __decorate([\r\n        core_2.Component({\r\n            selector: 'p-footerColumnGroup',\r\n            template: \"\"\r\n        })\r\n    ], FooterColumnGroup);\r\n    return FooterColumnGroup;\r\n}());\r\nexports.FooterColumnGroup = FooterColumnGroup;\r\nvar SharedModule = /** @class */ (function () {\r\n    function SharedModule() {\r\n    }\r\n    SharedModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule],\r\n            exports: [Header, Footer, Column, PrimeTemplate, Row, HeaderColumnGroup, FooterColumnGroup],\r\n            declarations: [Header, Footer, Column, PrimeTemplate, Row, HeaderColumnGroup, FooterColumnGroup]\r\n        })\r\n    ], SharedModule);\r\n    return SharedModule;\r\n}());\r\nexports.SharedModule = SharedModule;\r\n//# sourceMappingURL=shared.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/common/shared.js\n// module id = 1429\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar ObjectUtils = /** @class */ (function () {\r\n    function ObjectUtils() {\r\n        this.isFunction = function (obj) { return !!(obj && obj.constructor && obj.call && obj.apply); };\r\n    }\r\n    ObjectUtils.prototype.equals = function (obj1, obj2, field) {\r\n        if (field)\r\n            return (this.resolveFieldData(obj1, field) === this.resolveFieldData(obj2, field));\r\n        else\r\n            return this.equalsByValue(obj1, obj2);\r\n    };\r\n    ObjectUtils.prototype.equalsByValue = function (obj1, obj2, visited) {\r\n        if (obj1 == null && obj2 == null) {\r\n            return true;\r\n        }\r\n        if (obj1 == null || obj2 == null) {\r\n            return false;\r\n        }\r\n        if (obj1 == obj2) {\r\n            return true;\r\n        }\r\n        if (obj1 instanceof Date && obj2 instanceof Date) {\r\n            return obj1.getTime() == obj2.getTime();\r\n        }\r\n        if (typeof obj1 == 'object' && typeof obj2 == 'object') {\r\n            if (visited) {\r\n                if (visited.indexOf(obj1) !== -1)\r\n                    return false;\r\n            }\r\n            else {\r\n                visited = [];\r\n            }\r\n            visited.push(obj1);\r\n            for (var p in obj1) {\r\n                if (obj1.hasOwnProperty(p) !== obj2.hasOwnProperty(p)) {\r\n                    return false;\r\n                }\r\n                switch (typeof (obj1[p])) {\r\n                    case 'object':\r\n                        if (!this.equalsByValue(obj1[p], obj2[p], visited))\r\n                            return false;\r\n                        break;\r\n                    case 'function':\r\n                        if (typeof (obj2[p]) == 'undefined' || (p != 'compare' && obj1[p].toString() != obj2[p].toString()))\r\n                            return false;\r\n                        break;\r\n                    default:\r\n                        if (obj1[p] != obj2[p])\r\n                            return false;\r\n                        break;\r\n                }\r\n            }\r\n            for (var p in obj2) {\r\n                if (typeof (obj1[p]) == 'undefined')\r\n                    return false;\r\n            }\r\n            delete obj1._$visited;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ObjectUtils.prototype.resolveFieldData = function (data, field) {\r\n        if (data && field) {\r\n            if (this.isFunction(field)) {\r\n                return field(data);\r\n            }\r\n            else if (field.indexOf('.') == -1) {\r\n                return data[field];\r\n            }\r\n            else {\r\n                var fields = field.split('.');\r\n                var value = data;\r\n                for (var i = 0, len = fields.length; i < len; ++i) {\r\n                    if (value == null) {\r\n                        return null;\r\n                    }\r\n                    value = value[fields[i]];\r\n                }\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ObjectUtils.prototype.filter = function (value, fields, filterValue) {\r\n        var filteredItems = [];\r\n        if (value) {\r\n            for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\r\n                var item = value_1[_i];\r\n                for (var _a = 0, fields_1 = fields; _a < fields_1.length; _a++) {\r\n                    var field = fields_1[_a];\r\n                    if (String(this.resolveFieldData(item, field)).toLowerCase().indexOf(filterValue.toLowerCase()) > -1) {\r\n                        filteredItems.push(item);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return filteredItems;\r\n    };\r\n    ObjectUtils.prototype.reorderArray = function (value, from, to) {\r\n        var target;\r\n        if (value && (from !== to)) {\r\n            if (to >= value.length) {\r\n                target = to - value.length;\r\n                while ((target--) + 1) {\r\n                    value.push(undefined);\r\n                }\r\n            }\r\n            value.splice(to, 0, value.splice(from, 1)[0]);\r\n        }\r\n    };\r\n    ObjectUtils.prototype.generateSelectItems = function (val, field) {\r\n        var selectItems;\r\n        if (val && val.length) {\r\n            selectItems = [];\r\n            for (var _i = 0, val_1 = val; _i < val_1.length; _i++) {\r\n                var item = val_1[_i];\r\n                selectItems.push({ label: this.resolveFieldData(item, field), value: item });\r\n            }\r\n        }\r\n        return selectItems;\r\n    };\r\n    ObjectUtils.prototype.insertIntoOrderedArray = function (item, index, arr, sourceArr) {\r\n        if (arr.length > 0) {\r\n            var injected = false;\r\n            for (var i = 0; i < arr.length; i++) {\r\n                var currentItemIndex = this.findIndexInList(arr[i], sourceArr);\r\n                if (currentItemIndex > index) {\r\n                    arr.splice(i, 0, item);\r\n                    injected = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!injected) {\r\n                arr.push(item);\r\n            }\r\n        }\r\n        else {\r\n            arr.push(item);\r\n        }\r\n    };\r\n    ObjectUtils.prototype.findIndexInList = function (item, list) {\r\n        var index = -1;\r\n        if (list) {\r\n            for (var i = 0; i < list.length; i++) {\r\n                if (list[i] == item) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    };\r\n    ObjectUtils = __decorate([\r\n        core_1.Injectable()\r\n    ], ObjectUtils);\r\n    return ObjectUtils;\r\n}());\r\nexports.ObjectUtils = ObjectUtils;\r\n//# sourceMappingURL=objectutils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/utils/objectutils.js\n// module id = 1430\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar domhandler_1 = require(\"../dom/domhandler\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar ButtonDirective = /** @class */ (function () {\r\n    function ButtonDirective(el, domHandler) {\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.iconPos = 'left';\r\n        this.cornerStyleClass = 'ui-corner-all';\r\n    }\r\n    ButtonDirective.prototype.ngAfterViewInit = function () {\r\n        this.domHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\r\n        if (this.icon) {\r\n            var iconElement = document.createElement(\"span\");\r\n            iconElement.setAttribute(\"aria-hidden\", \"true\");\r\n            var iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right' : 'ui-button-icon-left';\r\n            iconElement.className = iconPosClass + ' ui-clickable ' + this.icon;\r\n            this.el.nativeElement.appendChild(iconElement);\r\n        }\r\n        var labelElement = document.createElement(\"span\");\r\n        labelElement.className = 'ui-button-text ui-clickable';\r\n        labelElement.appendChild(document.createTextNode(this.label || 'ui-btn'));\r\n        this.el.nativeElement.appendChild(labelElement);\r\n        this.initialized = true;\r\n    };\r\n    ButtonDirective.prototype.getStyleClass = function () {\r\n        var styleClass = 'ui-button ui-widget ui-state-default ' + this.cornerStyleClass;\r\n        if (this.icon) {\r\n            if (this.label != null && this.label != undefined) {\r\n                if (this.iconPos == 'left')\r\n                    styleClass = styleClass + ' ui-button-text-icon-left';\r\n                else\r\n                    styleClass = styleClass + ' ui-button-text-icon-right';\r\n            }\r\n            else {\r\n                styleClass = styleClass + ' ui-button-icon-only';\r\n            }\r\n        }\r\n        else {\r\n            if (this.label) {\r\n                styleClass = styleClass + ' ui-button-text-only';\r\n            }\r\n            else {\r\n                styleClass = styleClass + ' ui-button-text-empty';\r\n            }\r\n        }\r\n        return styleClass;\r\n    };\r\n    Object.defineProperty(ButtonDirective.prototype, \"label\", {\r\n        get: function () {\r\n            return this._label;\r\n        },\r\n        set: function (val) {\r\n            this._label = val;\r\n            if (this.initialized) {\r\n                this.domHandler.findSingle(this.el.nativeElement, '.ui-button-text').textContent = this._label;\r\n                if (!this.icon) {\r\n                    if (this._label) {\r\n                        this.domHandler.removeClass(this.el.nativeElement, 'ui-button-text-empty');\r\n                        this.domHandler.addClass(this.el.nativeElement, 'ui-button-text-only');\r\n                    }\r\n                    else {\r\n                        this.domHandler.addClass(this.el.nativeElement, 'ui-button-text-empty');\r\n                        this.domHandler.removeClass(this.el.nativeElement, 'ui-button-text-only');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ButtonDirective.prototype, \"icon\", {\r\n        get: function () {\r\n            return this._icon;\r\n        },\r\n        set: function (val) {\r\n            this._icon = val;\r\n            if (this.initialized) {\r\n                var iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right' : 'ui-button-icon-left';\r\n                this.domHandler.findSingle(this.el.nativeElement, '.ui-clickable').className =\r\n                    iconPosClass + ' ui-clickable ' + this.icon;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ButtonDirective.prototype.ngOnDestroy = function () {\r\n        while (this.el.nativeElement.hasChildNodes()) {\r\n            this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);\r\n        }\r\n        this.initialized = false;\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], ButtonDirective.prototype, \"iconPos\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], ButtonDirective.prototype, \"cornerStyleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], ButtonDirective.prototype, \"label\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], ButtonDirective.prototype, \"icon\", null);\r\n    ButtonDirective = __decorate([\r\n        core_1.Directive({\r\n            selector: '[pButton]',\r\n            providers: [domhandler_1.DomHandler]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler])\r\n    ], ButtonDirective);\r\n    return ButtonDirective;\r\n}());\r\nexports.ButtonDirective = ButtonDirective;\r\nvar Button = /** @class */ (function () {\r\n    function Button() {\r\n        this.iconPos = 'left';\r\n        this.onClick = new core_1.EventEmitter();\r\n        this.onFocus = new core_1.EventEmitter();\r\n        this.onBlur = new core_1.EventEmitter();\r\n    }\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Button.prototype, \"type\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Button.prototype, \"iconPos\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Button.prototype, \"icon\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Button.prototype, \"label\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Button.prototype, \"disabled\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Button.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Button.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Button.prototype, \"onClick\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Button.prototype, \"onFocus\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Button.prototype, \"onBlur\", void 0);\r\n    Button = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-button',\r\n            template: \"\\n        <button [attr.type]=\\\"type\\\" [class]=\\\"styleClass\\\" [style]=\\\"style\\\" [disabled]=\\\"disabled\\\"\\n            [ngClass]=\\\"{'ui-button ui-widget ui-state-default ui-corner-all':true,\\n                        'ui-button-icon-only': (icon && !label),\\n                        'ui-button-text-icon-left': (icon && label && iconPos === 'left'),\\n                        'ui-button-text-icon-right': (icon && label && iconPos === 'right'),\\n                        'ui-button-text-only': (!icon && label),\\n                        'ui-button-text-empty': (!icon && !label),\\n                        'ui-state-disabled': disabled}\\\"\\n                        (click)=\\\"onClick.emit($event)\\\" (focus)=\\\"onFocus.emit($event)\\\" (blur)=\\\"onBlur.emit($event)\\\">\\n            <ng-content></ng-content>\\n            <span [ngClass]=\\\"{'ui-clickable': true,\\n                        'ui-button-icon-left': (iconPos === 'left'), \\n                        'ui-button-icon-right': (iconPos === 'right')}\\\"\\n                        [class]=\\\"icon\\\" *ngIf=\\\"icon\\\"></span>\\n            <span class=\\\"ui-button-text ui-clickable\\\">{{label||'ui-btn'}}</span>\\n        </button>\\n    \"\r\n        })\r\n    ], Button);\r\n    return Button;\r\n}());\r\nexports.Button = Button;\r\nvar ButtonModule = /** @class */ (function () {\r\n    function ButtonModule() {\r\n    }\r\n    ButtonModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule],\r\n            exports: [ButtonDirective, Button],\r\n            declarations: [ButtonDirective, Button]\r\n        })\r\n    ], ButtonModule);\r\n    return ButtonModule;\r\n}());\r\nexports.ButtonModule = ButtonModule;\r\n//# sourceMappingURL=button.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/button/button.js\n// module id = 1431\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar InputText = /** @class */ (function () {\r\n    function InputText(el, ngModel) {\r\n        this.el = el;\r\n        this.ngModel = ngModel;\r\n    }\r\n    InputText.prototype.ngDoCheck = function () {\r\n        this.updateFilledState();\r\n    };\r\n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\r\n    InputText.prototype.onInput = function (e) {\r\n        this.updateFilledState();\r\n    };\r\n    InputText.prototype.updateFilledState = function () {\r\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||\r\n            (this.ngModel && this.ngModel.model);\r\n    };\r\n    __decorate([\r\n        core_1.HostListener('input', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], InputText.prototype, \"onInput\", null);\r\n    InputText = __decorate([\r\n        core_1.Directive({\r\n            selector: '[pInputText]',\r\n            host: {\r\n                '[class.ui-inputtext]': 'true',\r\n                '[class.ui-corner-all]': 'true',\r\n                '[class.ui-state-default]': 'true',\r\n                '[class.ui-widget]': 'true',\r\n                '[class.ui-state-filled]': 'filled'\r\n            }\r\n        }),\r\n        __param(1, core_1.Optional()),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, forms_1.NgModel])\r\n    ], InputText);\r\n    return InputText;\r\n}());\r\nexports.InputText = InputText;\r\nvar InputTextModule = /** @class */ (function () {\r\n    function InputTextModule() {\r\n    }\r\n    InputTextModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule],\r\n            exports: [InputText],\r\n            declarations: [InputText]\r\n        })\r\n    ], InputTextModule);\r\n    return InputTextModule;\r\n}());\r\nexports.InputTextModule = InputTextModule;\r\n//# sourceMappingURL=inputtext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/inputtext/inputtext.js\n// module id = 1432\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar dropdown_1 = require(\"../dropdown/dropdown\");\r\nvar shared_1 = require(\"../common/shared\");\r\nvar Paginator = /** @class */ (function () {\r\n    function Paginator() {\r\n        this.pageLinkSize = 5;\r\n        this.onPageChange = new core_1.EventEmitter();\r\n        this.alwaysShow = true;\r\n        this._totalRecords = 0;\r\n        this._first = 0;\r\n        this._rows = 0;\r\n    }\r\n    Paginator.prototype.ngOnInit = function () {\r\n        this.updatePaginatorState();\r\n    };\r\n    Object.defineProperty(Paginator.prototype, \"totalRecords\", {\r\n        get: function () {\r\n            return this._totalRecords;\r\n        },\r\n        set: function (val) {\r\n            this._totalRecords = val;\r\n            this.updatePageLinks();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Paginator.prototype, \"first\", {\r\n        get: function () {\r\n            return this._first;\r\n        },\r\n        set: function (val) {\r\n            this._first = val;\r\n            this.updatePageLinks();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Paginator.prototype, \"rows\", {\r\n        get: function () {\r\n            return this._rows;\r\n        },\r\n        set: function (val) {\r\n            this._rows = val;\r\n            this.updatePageLinks();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Paginator.prototype, \"rowsPerPageOptions\", {\r\n        get: function () {\r\n            return this._rowsPerPageOptions;\r\n        },\r\n        set: function (val) {\r\n            this._rowsPerPageOptions = val;\r\n            if (this._rowsPerPageOptions) {\r\n                this.rowsPerPageItems = [];\r\n                for (var _i = 0, _a = this._rowsPerPageOptions; _i < _a.length; _i++) {\r\n                    var opt = _a[_i];\r\n                    this.rowsPerPageItems.push({ label: String(opt), value: opt });\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Paginator.prototype.isFirstPage = function () {\r\n        return this.getPage() === 0;\r\n    };\r\n    Paginator.prototype.isLastPage = function () {\r\n        return this.getPage() === this.getPageCount() - 1;\r\n    };\r\n    Paginator.prototype.getPageCount = function () {\r\n        return Math.ceil(this.totalRecords / this.rows) || 1;\r\n    };\r\n    Paginator.prototype.calculatePageLinkBoundaries = function () {\r\n        var numberOfPages = this.getPageCount(), visiblePages = Math.min(this.pageLinkSize, numberOfPages);\r\n        //calculate range, keep current in middle if necessary\r\n        var start = Math.max(0, Math.ceil(this.getPage() - ((visiblePages) / 2))), end = Math.min(numberOfPages - 1, start + visiblePages - 1);\r\n        //check when approaching to last page\r\n        var delta = this.pageLinkSize - (end - start + 1);\r\n        start = Math.max(0, start - delta);\r\n        return [start, end];\r\n    };\r\n    Paginator.prototype.updatePageLinks = function () {\r\n        this.pageLinks = [];\r\n        var boundaries = this.calculatePageLinkBoundaries(), start = boundaries[0], end = boundaries[1];\r\n        for (var i = start; i <= end; i++) {\r\n            this.pageLinks.push(i + 1);\r\n        }\r\n    };\r\n    Paginator.prototype.changePage = function (p) {\r\n        var pc = this.getPageCount();\r\n        if (p >= 0 && p < pc) {\r\n            this.first = this.rows * p;\r\n            var state = {\r\n                page: p,\r\n                first: this.first,\r\n                rows: this.rows,\r\n                pageCount: pc\r\n            };\r\n            this.updatePageLinks();\r\n            this.onPageChange.emit(state);\r\n            this.updatePaginatorState();\r\n        }\r\n    };\r\n    Paginator.prototype.getPage = function () {\r\n        return Math.floor(this.first / this.rows);\r\n    };\r\n    Paginator.prototype.changePageToFirst = function (event) {\r\n        if (!this.isFirstPage()) {\r\n            this.changePage(0);\r\n        }\r\n        event.preventDefault();\r\n    };\r\n    Paginator.prototype.changePageToPrev = function (event) {\r\n        this.changePage(this.getPage() - 1);\r\n        event.preventDefault();\r\n    };\r\n    Paginator.prototype.changePageToNext = function (event) {\r\n        this.changePage(this.getPage() + 1);\r\n        event.preventDefault();\r\n    };\r\n    Paginator.prototype.changePageToLast = function (event) {\r\n        if (!this.isLastPage()) {\r\n            this.changePage(this.getPageCount() - 1);\r\n        }\r\n        event.preventDefault();\r\n    };\r\n    Paginator.prototype.onPageLinkClick = function (event, page) {\r\n        this.changePage(page);\r\n        event.preventDefault();\r\n    };\r\n    Paginator.prototype.onRppChange = function (event) {\r\n        this.changePage(this.getPage());\r\n    };\r\n    Paginator.prototype.updatePaginatorState = function () {\r\n        this.paginatorState = {\r\n            page: this.getPage(),\r\n            rows: this.rows,\r\n            first: this.first,\r\n            totalRecords: this.totalRecords\r\n        };\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Paginator.prototype, \"pageLinkSize\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Paginator.prototype, \"onPageChange\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Paginator.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Paginator.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Paginator.prototype, \"alwaysShow\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", core_1.TemplateRef)\r\n    ], Paginator.prototype, \"templateLeft\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", core_1.TemplateRef)\r\n    ], Paginator.prototype, \"templateRight\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Paginator.prototype, \"dropdownAppendTo\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], Paginator.prototype, \"totalRecords\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], Paginator.prototype, \"first\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], Paginator.prototype, \"rows\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], Paginator.prototype, \"rowsPerPageOptions\", null);\r\n    Paginator = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-paginator',\r\n            template: \"\\n        <div [class]=\\\"styleClass\\\" [ngStyle]=\\\"style\\\" [ngClass]=\\\"'ui-paginator ui-widget ui-widget-header ui-unselectable-text ui-helper-clearfix'\\\"\\n            *ngIf=\\\"alwaysShow ? true : (pageLinks && pageLinks.length > 1)\\\">\\n            <div class=\\\"ui-paginator-left-content\\\" *ngIf=\\\"templateLeft\\\">\\n                <ng-container *ngTemplateOutlet=\\\"templateLeft; context: {$implicit: paginatorState}\\\"></ng-container>\\n            </div>\\n            <a href=\\\"#\\\" class=\\\"ui-paginator-first ui-paginator-element ui-state-default ui-corner-all\\\"\\n                    (click)=\\\"changePageToFirst($event)\\\" [ngClass]=\\\"{'ui-state-disabled':isFirstPage()}\\\" [tabindex]=\\\"isFirstPage() ? -1 : null\\\">\\n                <span class=\\\"ui-paginator-icon pi pi-step-backward\\\"></span>\\n            </a>\\n            <a href=\\\"#\\\" class=\\\"ui-paginator-prev ui-paginator-element ui-state-default ui-corner-all\\\"\\n                    (click)=\\\"changePageToPrev($event)\\\" [ngClass]=\\\"{'ui-state-disabled':isFirstPage()}\\\" [tabindex]=\\\"isFirstPage() ? -1 : null\\\">\\n                <span class=\\\"ui-paginator-icon pi pi-caret-left\\\"></span>\\n            </a>\\n            <span class=\\\"ui-paginator-pages\\\">\\n                <a href=\\\"#\\\" *ngFor=\\\"let pageLink of pageLinks\\\" class=\\\"ui-paginator-page ui-paginator-element ui-state-default ui-corner-all\\\"\\n                    (click)=\\\"onPageLinkClick($event, pageLink - 1)\\\" [ngClass]=\\\"{'ui-state-active': (pageLink-1 == getPage())}\\\">{{pageLink}}</a>\\n            </span>\\n            <a href=\\\"#\\\" class=\\\"ui-paginator-next ui-paginator-element ui-state-default ui-corner-all\\\"\\n                    (click)=\\\"changePageToNext($event)\\\" [ngClass]=\\\"{'ui-state-disabled':isLastPage()}\\\" [tabindex]=\\\"isLastPage() ? -1 : null\\\">\\n                <span class=\\\"ui-paginator-icon pi pi-caret-right\\\"></span>\\n            </a>\\n            <a href=\\\"#\\\" class=\\\"ui-paginator-last ui-paginator-element ui-state-default ui-corner-all\\\"\\n                    (click)=\\\"changePageToLast($event)\\\" [ngClass]=\\\"{'ui-state-disabled':isLastPage()}\\\" [tabindex]=\\\"isLastPage() ? -1 : null\\\">\\n                <span class=\\\"ui-paginator-icon pi pi-step-forward\\\"></span>\\n            </a>\\n            <p-dropdown [options]=\\\"rowsPerPageItems\\\" [(ngModel)]=\\\"rows\\\" *ngIf=\\\"rowsPerPageOptions\\\" \\n                (onChange)=\\\"onRppChange($event)\\\" [autoWidth]=\\\"false\\\" [appendTo]=\\\"dropdownAppendTo\\\"></p-dropdown>\\n            <div class=\\\"ui-paginator-right-content\\\" *ngIf=\\\"templateRight\\\">\\n                <ng-container *ngTemplateOutlet=\\\"templateRight; context: {$implicit: paginatorState}\\\"></ng-container>\\n            </div>\\n        </div>\\n    \"\r\n        })\r\n    ], Paginator);\r\n    return Paginator;\r\n}());\r\nexports.Paginator = Paginator;\r\nvar PaginatorModule = /** @class */ (function () {\r\n    function PaginatorModule() {\r\n    }\r\n    PaginatorModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule, dropdown_1.DropdownModule, forms_1.FormsModule, shared_1.SharedModule],\r\n            exports: [Paginator, dropdown_1.DropdownModule, forms_1.FormsModule, shared_1.SharedModule],\r\n            declarations: [Paginator]\r\n        })\r\n    ], PaginatorModule);\r\n    return PaginatorModule;\r\n}());\r\nexports.PaginatorModule = PaginatorModule;\r\n//# sourceMappingURL=paginator.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/paginator/paginator.js\n// module id = 1433\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","/* Shorthand */\r\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./components/table/table\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/table.js\n// module id = 1434\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar shared_1 = require(\"../common/shared\");\r\nvar paginator_1 = require(\"../paginator/paginator\");\r\nvar domhandler_1 = require(\"../dom/domhandler\");\r\nvar objectutils_1 = require(\"../utils/objectutils\");\r\nvar core_2 = require(\"@angular/core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar TableService = /** @class */ (function () {\r\n    function TableService() {\r\n        this.sortSource = new rxjs_1.Subject();\r\n        this.selectionSource = new rxjs_1.Subject();\r\n        this.contextMenuSource = new rxjs_1.Subject();\r\n        this.valueSource = new rxjs_1.Subject();\r\n        this.totalRecordsSource = new rxjs_1.Subject();\r\n        this.columnsSource = new rxjs_1.Subject();\r\n        this.sortSource$ = this.sortSource.asObservable();\r\n        this.selectionSource$ = this.selectionSource.asObservable();\r\n        this.contextMenuSource$ = this.contextMenuSource.asObservable();\r\n        this.valueSource$ = this.valueSource.asObservable();\r\n        this.totalRecordsSource$ = this.totalRecordsSource.asObservable();\r\n        this.columnsSource$ = this.columnsSource.asObservable();\r\n    }\r\n    TableService.prototype.onSort = function (sortMeta) {\r\n        this.sortSource.next(sortMeta);\r\n    };\r\n    TableService.prototype.onSelectionChange = function () {\r\n        this.selectionSource.next();\r\n    };\r\n    TableService.prototype.onContextMenu = function (data) {\r\n        this.contextMenuSource.next(data);\r\n    };\r\n    TableService.prototype.onValueChange = function (value) {\r\n        this.valueSource.next(value);\r\n    };\r\n    TableService.prototype.onTotalRecordsChange = function (value) {\r\n        this.totalRecordsSource.next(value);\r\n    };\r\n    TableService.prototype.onColumnsChange = function (columns) {\r\n        this.columnsSource.next(columns);\r\n    };\r\n    TableService = __decorate([\r\n        core_2.Injectable()\r\n    ], TableService);\r\n    return TableService;\r\n}());\r\nexports.TableService = TableService;\r\nvar Table = /** @class */ (function () {\r\n    function Table(el, domHandler, objectUtils, zone, tableService) {\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.objectUtils = objectUtils;\r\n        this.zone = zone;\r\n        this.tableService = tableService;\r\n        this.first = 0;\r\n        this.pageLinks = 5;\r\n        this.alwaysShowPaginator = true;\r\n        this.paginatorPosition = 'bottom';\r\n        this.defaultSortOrder = 1;\r\n        this.sortMode = 'single';\r\n        this.resetPageOnSort = true;\r\n        this.selectionChange = new core_1.EventEmitter();\r\n        this.contextMenuSelectionChange = new core_1.EventEmitter();\r\n        this.contextMenuSelectionMode = \"separate\";\r\n        this.rowTrackBy = function (index, item) { return item; };\r\n        this.lazy = false;\r\n        this.lazyLoadOnInit = true;\r\n        this.compareSelectionBy = 'deepEquals';\r\n        this.csvSeparator = ',';\r\n        this.exportFilename = 'download';\r\n        this.filters = {};\r\n        this.filterDelay = 300;\r\n        this.expandedRowKeys = {};\r\n        this.rowExpandMode = 'multiple';\r\n        this.virtualScrollDelay = 500;\r\n        this.virtualRowHeight = 28;\r\n        this.columnResizeMode = 'fit';\r\n        this.loadingIcon = 'pi pi-spinner';\r\n        this.onRowSelect = new core_1.EventEmitter();\r\n        this.onRowUnselect = new core_1.EventEmitter();\r\n        this.onPage = new core_1.EventEmitter();\r\n        this.onSort = new core_1.EventEmitter();\r\n        this.onFilter = new core_1.EventEmitter();\r\n        this.onLazyLoad = new core_1.EventEmitter();\r\n        this.onRowExpand = new core_1.EventEmitter();\r\n        this.onRowCollapse = new core_1.EventEmitter();\r\n        this.onContextMenuSelect = new core_1.EventEmitter();\r\n        this.onColResize = new core_1.EventEmitter();\r\n        this.onColReorder = new core_1.EventEmitter();\r\n        this.onRowReorder = new core_1.EventEmitter();\r\n        this.onEditInit = new core_1.EventEmitter();\r\n        this.onEditComplete = new core_1.EventEmitter();\r\n        this.onEditCancel = new core_1.EventEmitter();\r\n        this.onHeaderCheckboxToggle = new core_1.EventEmitter();\r\n        this.sortFunction = new core_1.EventEmitter();\r\n        this._value = [];\r\n        this._totalRecords = 0;\r\n        this.selectionKeys = {};\r\n        this._sortOrder = 1;\r\n        this.filterConstraints = {\r\n            startsWith: function (value, filter) {\r\n                if (filter === undefined || filter === null || filter.trim() === '') {\r\n                    return true;\r\n                }\r\n                if (value === undefined || value === null) {\r\n                    return false;\r\n                }\r\n                var filterValue = filter.toLowerCase();\r\n                return value.toString().toLowerCase().slice(0, filterValue.length) === filterValue;\r\n            },\r\n            contains: function (value, filter) {\r\n                if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n                    return true;\r\n                }\r\n                if (value === undefined || value === null) {\r\n                    return false;\r\n                }\r\n                return value.toString().toLowerCase().indexOf(filter.toLowerCase()) !== -1;\r\n            },\r\n            endsWith: function (value, filter) {\r\n                if (filter === undefined || filter === null || filter.trim() === '') {\r\n                    return true;\r\n                }\r\n                if (value === undefined || value === null) {\r\n                    return false;\r\n                }\r\n                var filterValue = filter.toString().toLowerCase();\r\n                return value.toString().toLowerCase().indexOf(filterValue, value.toString().length - filterValue.length) !== -1;\r\n            },\r\n            equals: function (value, filter) {\r\n                if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n                    return true;\r\n                }\r\n                if (value === undefined || value === null) {\r\n                    return false;\r\n                }\r\n                if (value.getTime && filter.getTime)\r\n                    return value.getTime() === filter.getTime();\r\n                else\r\n                    return value.toString().toLowerCase() == filter.toString().toLowerCase();\r\n            },\r\n            notEquals: function (value, filter) {\r\n                if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n                    return false;\r\n                }\r\n                if (value === undefined || value === null) {\r\n                    return true;\r\n                }\r\n                if (value.getTime && filter.getTime)\r\n                    return value.getTime() !== filter.getTime();\r\n                else\r\n                    return value.toString().toLowerCase() != filter.toString().toLowerCase();\r\n            },\r\n            in: function (value, filter) {\r\n                if (filter === undefined || filter === null || filter.length === 0) {\r\n                    return true;\r\n                }\r\n                if (value === undefined || value === null) {\r\n                    return false;\r\n                }\r\n                for (var i = 0; i < filter.length; i++) {\r\n                    if (filter[i] === value || (value.getTime && filter[i].getTime && value.getTime() === filter[i].getTime())) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            lt: function (value, filter) {\r\n                if (filter === undefined || filter === null) {\r\n                    return true;\r\n                }\r\n                if (value === undefined || value === null) {\r\n                    return false;\r\n                }\r\n                if (value.getTime && filter.getTime)\r\n                    return value.getTime() < filter.getTime();\r\n                else\r\n                    return value < filter;\r\n            },\r\n            lte: function (value, filter) {\r\n                if (filter === undefined || filter === null) {\r\n                    return true;\r\n                }\r\n                if (value === undefined || value === null) {\r\n                    return false;\r\n                }\r\n                if (value.getTime && filter.getTime)\r\n                    return value.getTime() <= filter.getTime();\r\n                else\r\n                    return value <= filter;\r\n            },\r\n            gt: function (value, filter) {\r\n                if (filter === undefined || filter === null) {\r\n                    return true;\r\n                }\r\n                if (value === undefined || value === null) {\r\n                    return false;\r\n                }\r\n                if (value.getTime && filter.getTime)\r\n                    return value.getTime() > filter.getTime();\r\n                else\r\n                    return value > filter;\r\n            },\r\n            gte: function (value, filter) {\r\n                if (filter === undefined || filter === null) {\r\n                    return true;\r\n                }\r\n                if (value === undefined || value === null) {\r\n                    return false;\r\n                }\r\n                if (value.getTime && filter.getTime)\r\n                    return value.getTime() >= filter.getTime();\r\n                else\r\n                    return value >= filter;\r\n            }\r\n        };\r\n    }\r\n    Table.prototype.ngOnInit = function () {\r\n        if (this.lazy && this.lazyLoadOnInit) {\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        }\r\n        this.initialized = true;\r\n    };\r\n    Table.prototype.ngAfterContentInit = function () {\r\n        var _this = this;\r\n        this.templates.forEach(function (item) {\r\n            switch (item.getType()) {\r\n                case 'caption':\r\n                    _this.captionTemplate = item.template;\r\n                    break;\r\n                case 'header':\r\n                    _this.headerTemplate = item.template;\r\n                    break;\r\n                case 'body':\r\n                    _this.bodyTemplate = item.template;\r\n                    break;\r\n                case 'footer':\r\n                    _this.footerTemplate = item.template;\r\n                    break;\r\n                case 'summary':\r\n                    _this.summaryTemplate = item.template;\r\n                    break;\r\n                case 'colgroup':\r\n                    _this.colGroupTemplate = item.template;\r\n                    break;\r\n                case 'rowexpansion':\r\n                    _this.expandedRowTemplate = item.template;\r\n                    break;\r\n                case 'frozenrows':\r\n                    _this.frozenRowsTemplate = item.template;\r\n                    break;\r\n                case 'frozenheader':\r\n                    _this.frozenHeaderTemplate = item.template;\r\n                    break;\r\n                case 'frozenbody':\r\n                    _this.frozenBodyTemplate = item.template;\r\n                    break;\r\n                case 'frozenfooter':\r\n                    _this.frozenFooterTemplate = item.template;\r\n                    break;\r\n                case 'frozencolgroup':\r\n                    _this.frozenColGroupTemplate = item.template;\r\n                    break;\r\n                case 'emptymessage':\r\n                    _this.emptyMessageTemplate = item.template;\r\n                    break;\r\n                case 'paginatorleft':\r\n                    _this.paginatorLeftTemplate = item.template;\r\n                    break;\r\n                case 'paginatorright':\r\n                    _this.paginatorRightTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(Table.prototype, \"value\", {\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        set: function (val) {\r\n            this._value = val;\r\n            if (!this.lazy) {\r\n                this.totalRecords = (this._value ? this._value.length : 0);\r\n                if (this.sortMode == 'single' && this.sortField)\r\n                    this.sortSingle();\r\n                else if (this.sortMode == 'multiple' && this.multiSortMeta)\r\n                    this.sortMultiple();\r\n                else if (this.hasFilter())\r\n                    this._filter();\r\n            }\r\n            if (this.virtualScroll && this.virtualScrollCallback) {\r\n                this.virtualScrollCallback();\r\n            }\r\n            this.tableService.onValueChange(val);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Table.prototype, \"columns\", {\r\n        get: function () {\r\n            return this._columns;\r\n        },\r\n        set: function (cols) {\r\n            this._columns = cols;\r\n            this.tableService.onColumnsChange(cols);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Table.prototype, \"totalRecords\", {\r\n        get: function () {\r\n            return this._totalRecords;\r\n        },\r\n        set: function (val) {\r\n            this._totalRecords = val;\r\n            this.tableService.onTotalRecordsChange(this._totalRecords);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Table.prototype, \"sortField\", {\r\n        get: function () {\r\n            return this._sortField;\r\n        },\r\n        set: function (val) {\r\n            this._sortField = val;\r\n            //avoid triggering lazy load prior to lazy initialization at onInit\r\n            if (!this.lazy || this.initialized) {\r\n                if (this.sortMode === 'single') {\r\n                    this.sortSingle();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Table.prototype, \"sortOrder\", {\r\n        get: function () {\r\n            return this._sortOrder;\r\n        },\r\n        set: function (val) {\r\n            this._sortOrder = val;\r\n            //avoid triggering lazy load prior to lazy initialization at onInit\r\n            if (!this.lazy || this.initialized) {\r\n                if (this.sortMode === 'single') {\r\n                    this.sortSingle();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Table.prototype, \"multiSortMeta\", {\r\n        get: function () {\r\n            return this._multiSortMeta;\r\n        },\r\n        set: function (val) {\r\n            this._multiSortMeta = val;\r\n            if (this.sortMode === 'multiple') {\r\n                this.sortMultiple();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Table.prototype, \"selection\", {\r\n        get: function () {\r\n            return this._selection;\r\n        },\r\n        set: function (val) {\r\n            this._selection = val;\r\n            if (!this.preventSelectionSetterPropagation) {\r\n                this.updateSelectionKeys();\r\n                this.tableService.onSelectionChange();\r\n            }\r\n            this.preventSelectionSetterPropagation = false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Table.prototype.updateSelectionKeys = function () {\r\n        if (this.dataKey && this._selection) {\r\n            this.selectionKeys = {};\r\n            if (Array.isArray(this._selection)) {\r\n                for (var _i = 0, _a = this._selection; _i < _a.length; _i++) {\r\n                    var data = _a[_i];\r\n                    this.selectionKeys[String(this.objectUtils.resolveFieldData(data, this.dataKey))] = 1;\r\n                }\r\n            }\r\n            else {\r\n                this.selectionKeys[String(this.objectUtils.resolveFieldData(this._selection, this.dataKey))] = 1;\r\n            }\r\n        }\r\n    };\r\n    Table.prototype.onPageChange = function (event) {\r\n        this.first = event.first;\r\n        this.rows = event.rows;\r\n        if (this.lazy) {\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        }\r\n        this.onPage.emit({\r\n            first: this.first,\r\n            rows: this.rows\r\n        });\r\n        this.tableService.onValueChange(this.value);\r\n    };\r\n    Table.prototype.sort = function (event) {\r\n        var originalEvent = event.originalEvent;\r\n        if (this.sortMode === 'single') {\r\n            this._sortOrder = (this.sortField === event.field) ? this.sortOrder * -1 : this.defaultSortOrder;\r\n            this._sortField = event.field;\r\n            this.sortSingle();\r\n        }\r\n        if (this.sortMode === 'multiple') {\r\n            var metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\r\n            var sortMeta = this.getSortMeta(event.field);\r\n            if (sortMeta) {\r\n                if (!metaKey) {\r\n                    this._multiSortMeta = [{ field: event.field, order: sortMeta.order * -1 }];\r\n                }\r\n                else {\r\n                    sortMeta.order = sortMeta.order * -1;\r\n                }\r\n            }\r\n            else {\r\n                if (!metaKey || !this.multiSortMeta) {\r\n                    this._multiSortMeta = [];\r\n                }\r\n                this.multiSortMeta.push({ field: event.field, order: this.defaultSortOrder });\r\n            }\r\n            this.sortMultiple();\r\n        }\r\n    };\r\n    Table.prototype.sortSingle = function () {\r\n        var _this = this;\r\n        if (this.sortField && this.sortOrder) {\r\n            if (this.resetPageOnSort) {\r\n                this.first = 0;\r\n            }\r\n            if (this.lazy) {\r\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n            }\r\n            else if (this.value) {\r\n                if (this.customSort) {\r\n                    this.sortFunction.emit({\r\n                        data: this.value,\r\n                        mode: this.sortMode,\r\n                        field: this.sortField,\r\n                        order: this.sortOrder\r\n                    });\r\n                }\r\n                else {\r\n                    this.value.sort(function (data1, data2) {\r\n                        var value1 = _this.objectUtils.resolveFieldData(data1, _this.sortField);\r\n                        var value2 = _this.objectUtils.resolveFieldData(data2, _this.sortField);\r\n                        var result = null;\r\n                        if (value1 == null && value2 != null)\r\n                            result = -1;\r\n                        else if (value1 != null && value2 == null)\r\n                            result = 1;\r\n                        else if (value1 == null && value2 == null)\r\n                            result = 0;\r\n                        else if (typeof value1 === 'string' && typeof value2 === 'string')\r\n                            result = value1.localeCompare(value2);\r\n                        else\r\n                            result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\r\n                        return (_this.sortOrder * result);\r\n                    });\r\n                }\r\n                if (this.hasFilter()) {\r\n                    this._filter();\r\n                }\r\n            }\r\n            var sortMeta = {\r\n                field: this.sortField,\r\n                order: this.sortOrder\r\n            };\r\n            this.onSort.emit(sortMeta);\r\n            this.tableService.onSort(sortMeta);\r\n        }\r\n    };\r\n    Table.prototype.sortMultiple = function () {\r\n        var _this = this;\r\n        if (this.multiSortMeta) {\r\n            if (this.lazy) {\r\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n            }\r\n            else if (this.value) {\r\n                if (this.customSort) {\r\n                    this.sortFunction.emit({\r\n                        data: this.value,\r\n                        mode: this.sortMode,\r\n                        multiSortMeta: this.multiSortMeta\r\n                    });\r\n                }\r\n                else {\r\n                    this.value.sort(function (data1, data2) {\r\n                        return _this.multisortField(data1, data2, _this.multiSortMeta, 0);\r\n                    });\r\n                }\r\n                if (this.hasFilter()) {\r\n                    this._filter();\r\n                }\r\n            }\r\n            this.onSort.emit({\r\n                multisortmeta: this.multiSortMeta\r\n            });\r\n            this.tableService.onSort(this.multiSortMeta);\r\n        }\r\n    };\r\n    Table.prototype.multisortField = function (data1, data2, multiSortMeta, index) {\r\n        var value1 = this.objectUtils.resolveFieldData(data1, multiSortMeta[index].field);\r\n        var value2 = this.objectUtils.resolveFieldData(data2, multiSortMeta[index].field);\r\n        var result = null;\r\n        if (value1 == null && value2 != null)\r\n            result = -1;\r\n        else if (value1 != null && value2 == null)\r\n            result = 1;\r\n        else if (value1 == null && value2 == null)\r\n            result = 0;\r\n        if (typeof value1 == 'string' || value1 instanceof String) {\r\n            if (value1.localeCompare && (value1 != value2)) {\r\n                return (multiSortMeta[index].order * value1.localeCompare(value2));\r\n            }\r\n        }\r\n        else {\r\n            result = (value1 < value2) ? -1 : 1;\r\n        }\r\n        if (value1 == value2) {\r\n            return (multiSortMeta.length - 1) > (index) ? (this.multisortField(data1, data2, multiSortMeta, index + 1)) : 0;\r\n        }\r\n        return (multiSortMeta[index].order * result);\r\n    };\r\n    Table.prototype.getSortMeta = function (field) {\r\n        if (this.multiSortMeta && this.multiSortMeta.length) {\r\n            for (var i = 0; i < this.multiSortMeta.length; i++) {\r\n                if (this.multiSortMeta[i].field === field) {\r\n                    return this.multiSortMeta[i];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Table.prototype.isSorted = function (field) {\r\n        if (this.sortMode === 'single') {\r\n            return (this.sortField && this.sortField === field);\r\n        }\r\n        else if (this.sortMode === 'multiple') {\r\n            var sorted = false;\r\n            if (this.multiSortMeta) {\r\n                for (var i = 0; i < this.multiSortMeta.length; i++) {\r\n                    if (this.multiSortMeta[i].field == field) {\r\n                        sorted = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return sorted;\r\n        }\r\n    };\r\n    Table.prototype.handleRowClick = function (event) {\r\n        var targetNode = event.originalEvent.target.nodeName;\r\n        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || (this.domHandler.hasClass(event.originalEvent.target, 'ui-clickable'))) {\r\n            return;\r\n        }\r\n        if (this.selectionMode) {\r\n            this.preventSelectionSetterPropagation = true;\r\n            if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {\r\n                this.domHandler.clearSelection();\r\n                if (this.rangeRowIndex != null) {\r\n                    this.clearSelectionRange(event.originalEvent);\r\n                }\r\n                this.rangeRowIndex = event.rowIndex;\r\n                this.selectRange(event.originalEvent, event.rowIndex);\r\n            }\r\n            else {\r\n                var rowData = event.rowData;\r\n                var selected = this.isSelected(rowData);\r\n                var metaSelection = this.rowTouched ? false : this.metaKeySelection;\r\n                var dataKeyValue = this.dataKey ? String(this.objectUtils.resolveFieldData(rowData, this.dataKey)) : null;\r\n                this.anchorRowIndex = event.rowIndex;\r\n                this.rangeRowIndex = event.rowIndex;\r\n                if (metaSelection) {\r\n                    var metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\r\n                    if (selected && metaKey) {\r\n                        if (this.isSingleSelectionMode()) {\r\n                            this._selection = null;\r\n                            this.selectionKeys = {};\r\n                            this.selectionChange.emit(null);\r\n                        }\r\n                        else {\r\n                            var selectionIndex_1 = this.findIndexInSelection(rowData);\r\n                            this._selection = this.selection.filter(function (val, i) { return i != selectionIndex_1; });\r\n                            this.selectionChange.emit(this.selection);\r\n                            if (dataKeyValue) {\r\n                                delete this.selectionKeys[dataKeyValue];\r\n                            }\r\n                        }\r\n                        this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });\r\n                    }\r\n                    else {\r\n                        if (this.isSingleSelectionMode()) {\r\n                            this._selection = rowData;\r\n                            this.selectionChange.emit(rowData);\r\n                            if (dataKeyValue) {\r\n                                this.selectionKeys = {};\r\n                                this.selectionKeys[dataKeyValue] = 1;\r\n                            }\r\n                        }\r\n                        else if (this.isMultipleSelectionMode()) {\r\n                            if (metaKey) {\r\n                                this._selection = this.selection || [];\r\n                            }\r\n                            else {\r\n                                this._selection = [];\r\n                                this.selectionKeys = {};\r\n                            }\r\n                            this._selection = this.selection.concat([rowData]);\r\n                            this.selectionChange.emit(this.selection);\r\n                            if (dataKeyValue) {\r\n                                this.selectionKeys[dataKeyValue] = 1;\r\n                            }\r\n                        }\r\n                        this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\r\n                    }\r\n                }\r\n                else {\r\n                    if (this.selectionMode === 'single') {\r\n                        if (selected) {\r\n                            this._selection = null;\r\n                            this.selectionKeys = {};\r\n                            this.selectionChange.emit(this.selection);\r\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });\r\n                        }\r\n                        else {\r\n                            this._selection = rowData;\r\n                            this.selectionChange.emit(this.selection);\r\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\r\n                            if (dataKeyValue) {\r\n                                this.selectionKeys = {};\r\n                                this.selectionKeys[dataKeyValue] = 1;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (this.selectionMode === 'multiple') {\r\n                        if (selected) {\r\n                            var selectionIndex_2 = this.findIndexInSelection(rowData);\r\n                            this._selection = this.selection.filter(function (val, i) { return i != selectionIndex_2; });\r\n                            this.selectionChange.emit(this.selection);\r\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });\r\n                            if (dataKeyValue) {\r\n                                delete this.selectionKeys[dataKeyValue];\r\n                            }\r\n                        }\r\n                        else {\r\n                            this._selection = this.selection ? this.selection.concat([rowData]) : [rowData];\r\n                            this.selectionChange.emit(this.selection);\r\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\r\n                            if (dataKeyValue) {\r\n                                this.selectionKeys[dataKeyValue] = 1;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.tableService.onSelectionChange();\r\n        }\r\n        this.rowTouched = false;\r\n    };\r\n    Table.prototype.handleRowTouchEnd = function (event) {\r\n        this.rowTouched = true;\r\n    };\r\n    Table.prototype.handleRowRightClick = function (event) {\r\n        if (this.contextMenu) {\r\n            var rowData = event.rowData;\r\n            if (this.contextMenuSelectionMode === 'separate') {\r\n                this.contextMenuSelection = rowData;\r\n                this.contextMenuSelectionChange.emit(rowData);\r\n                this.onContextMenuSelect.emit({ originalEvent: event.originalEvent, data: rowData });\r\n                this.contextMenu.show(event.originalEvent);\r\n                this.tableService.onContextMenu(rowData);\r\n            }\r\n            else if (this.contextMenuSelectionMode === 'joint') {\r\n                this.preventSelectionSetterPropagation = true;\r\n                var selected = this.isSelected(rowData);\r\n                var dataKeyValue = this.dataKey ? String(this.objectUtils.resolveFieldData(rowData, this.dataKey)) : null;\r\n                if (!selected) {\r\n                    if (this.isSingleSelectionMode()) {\r\n                        this.selection = rowData;\r\n                        this.selectionChange.emit(rowData);\r\n                    }\r\n                    else if (this.isMultipleSelectionMode()) {\r\n                        this.selection = [rowData];\r\n                        this.selectionChange.emit(this.selection);\r\n                    }\r\n                    if (dataKeyValue) {\r\n                        this.selectionKeys[dataKeyValue] = 1;\r\n                    }\r\n                }\r\n                this.contextMenu.show(event.originalEvent);\r\n                this.onContextMenuSelect.emit({ originalEvent: event, data: rowData });\r\n            }\r\n        }\r\n    };\r\n    Table.prototype.selectRange = function (event, rowIndex) {\r\n        var rangeStart, rangeEnd;\r\n        if (this.anchorRowIndex > rowIndex) {\r\n            rangeStart = rowIndex;\r\n            rangeEnd = this.anchorRowIndex;\r\n        }\r\n        else if (this.anchorRowIndex < rowIndex) {\r\n            rangeStart = this.anchorRowIndex;\r\n            rangeEnd = rowIndex;\r\n        }\r\n        else {\r\n            rangeStart = rowIndex;\r\n            rangeEnd = rowIndex;\r\n        }\r\n        for (var i = rangeStart; i <= rangeEnd; i++) {\r\n            var rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];\r\n            if (!this.isSelected(rangeRowData)) {\r\n                this._selection = this.selection.concat([rangeRowData]);\r\n                var dataKeyValue = this.dataKey ? String(this.objectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\r\n                if (dataKeyValue) {\r\n                    this.selectionKeys[dataKeyValue] = 1;\r\n                }\r\n                this.onRowSelect.emit({ originalEvent: event, data: rangeRowData, type: 'row' });\r\n            }\r\n        }\r\n        this.selectionChange.emit(this.selection);\r\n    };\r\n    Table.prototype.clearSelectionRange = function (event) {\r\n        var rangeStart, rangeEnd;\r\n        if (this.rangeRowIndex > this.anchorRowIndex) {\r\n            rangeStart = this.anchorRowIndex;\r\n            rangeEnd = this.rangeRowIndex;\r\n        }\r\n        else if (this.rangeRowIndex < this.anchorRowIndex) {\r\n            rangeStart = this.rangeRowIndex;\r\n            rangeEnd = this.anchorRowIndex;\r\n        }\r\n        else {\r\n            rangeStart = this.rangeRowIndex;\r\n            rangeEnd = this.rangeRowIndex;\r\n        }\r\n        var _loop_1 = function (i) {\r\n            var rangeRowData = this_1.value[i];\r\n            var selectionIndex = this_1.findIndexInSelection(rangeRowData);\r\n            this_1._selection = this_1.selection.filter(function (val, i) { return i != selectionIndex; });\r\n            var dataKeyValue = this_1.dataKey ? String(this_1.objectUtils.resolveFieldData(rangeRowData, this_1.dataKey)) : null;\r\n            if (dataKeyValue) {\r\n                delete this_1.selectionKeys[dataKeyValue];\r\n            }\r\n            this_1.onRowUnselect.emit({ originalEvent: event, data: rangeRowData, type: 'row' });\r\n        };\r\n        var this_1 = this;\r\n        for (var i = rangeStart; i <= rangeEnd; i++) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    Table.prototype.isSelected = function (rowData) {\r\n        if (rowData && this.selection) {\r\n            if (this.dataKey) {\r\n                return this.selectionKeys[this.objectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined;\r\n            }\r\n            else {\r\n                if (this.selection instanceof Array)\r\n                    return this.findIndexInSelection(rowData) > -1;\r\n                else\r\n                    return this.equals(rowData, this.selection);\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Table.prototype.findIndexInSelection = function (rowData) {\r\n        var index = -1;\r\n        if (this.selection && this.selection.length) {\r\n            for (var i = 0; i < this.selection.length; i++) {\r\n                if (this.equals(rowData, this.selection[i])) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    };\r\n    Table.prototype.toggleRowWithRadio = function (event, rowData) {\r\n        this.preventSelectionSetterPropagation = true;\r\n        if (this.selection != rowData) {\r\n            this._selection = rowData;\r\n            this.selectionChange.emit(this.selection);\r\n            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton' });\r\n            if (this.dataKey) {\r\n                this.selectionKeys = {};\r\n                this.selectionKeys[String(this.objectUtils.resolveFieldData(rowData, this.dataKey))] = 1;\r\n            }\r\n        }\r\n        else {\r\n            this._selection = null;\r\n            this.selectionChange.emit(this.selection);\r\n            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton' });\r\n        }\r\n        this.tableService.onSelectionChange();\r\n    };\r\n    Table.prototype.toggleRowWithCheckbox = function (event, rowData) {\r\n        this.selection = this.selection || [];\r\n        var selected = this.isSelected(rowData);\r\n        var dataKeyValue = this.dataKey ? String(this.objectUtils.resolveFieldData(rowData, this.dataKey)) : null;\r\n        this.preventSelectionSetterPropagation = true;\r\n        if (selected) {\r\n            var selectionIndex_3 = this.findIndexInSelection(rowData);\r\n            this._selection = this.selection.filter(function (val, i) { return i != selectionIndex_3; });\r\n            this.selectionChange.emit(this.selection);\r\n            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\r\n            if (dataKeyValue) {\r\n                delete this.selectionKeys[dataKeyValue];\r\n            }\r\n        }\r\n        else {\r\n            this._selection = this.selection ? this.selection.concat([rowData]) : [rowData];\r\n            this.selectionChange.emit(this.selection);\r\n            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\r\n            if (dataKeyValue) {\r\n                this.selectionKeys[dataKeyValue] = 1;\r\n            }\r\n        }\r\n        this.tableService.onSelectionChange();\r\n    };\r\n    Table.prototype.toggleRowsWithCheckbox = function (event, check) {\r\n        this._selection = check ? this.filteredValue ? this.filteredValue.slice() : this.value.slice() : [];\r\n        this.preventSelectionSetterPropagation = true;\r\n        this.updateSelectionKeys();\r\n        this.selectionChange.emit(this._selection);\r\n        this.tableService.onSelectionChange();\r\n        this.onHeaderCheckboxToggle.emit({ originalEvent: event, checked: check });\r\n    };\r\n    Table.prototype.equals = function (data1, data2) {\r\n        return this.compareSelectionBy === 'equals' ? (data1 === data2) : this.objectUtils.equals(data1, data2, this.dataKey);\r\n    };\r\n    Table.prototype.filter = function (value, field, matchMode) {\r\n        var _this = this;\r\n        if (this.filterTimeout) {\r\n            clearTimeout(this.filterTimeout);\r\n        }\r\n        if (!this.isFilterBlank(value)) {\r\n            this.filters[field] = { value: value, matchMode: matchMode };\r\n        }\r\n        else if (this.filters[field]) {\r\n            delete this.filters[field];\r\n        }\r\n        this.filterTimeout = setTimeout(function () {\r\n            _this._filter();\r\n            _this.filterTimeout = null;\r\n        }, this.filterDelay);\r\n    };\r\n    Table.prototype.filterGlobal = function (value, matchMode) {\r\n        this.filter(value, 'global', matchMode);\r\n    };\r\n    Table.prototype.isFilterBlank = function (filter) {\r\n        if (filter !== null && filter !== undefined) {\r\n            if ((typeof filter === 'string' && filter.trim().length == 0) || (filter instanceof Array && filter.length == 0))\r\n                return true;\r\n            else\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n    Table.prototype._filter = function () {\r\n        this.first = 0;\r\n        if (this.lazy) {\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        }\r\n        else {\r\n            if (!this.value) {\r\n                return;\r\n            }\r\n            if (!this.hasFilter()) {\r\n                this.filteredValue = null;\r\n                if (this.paginator) {\r\n                    this.totalRecords = this.value ? this.value.length : 0;\r\n                }\r\n            }\r\n            else {\r\n                var globalFilterFieldsArray = void 0;\r\n                if (this.filters['global']) {\r\n                    if (!this.columns && !this.globalFilterFields)\r\n                        throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');\r\n                    else\r\n                        globalFilterFieldsArray = this.globalFilterFields || this.columns;\r\n                }\r\n                this.filteredValue = [];\r\n                for (var i = 0; i < this.value.length; i++) {\r\n                    var localMatch = true;\r\n                    var globalMatch = false;\r\n                    var localFiltered = false;\r\n                    for (var prop in this.filters) {\r\n                        if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\r\n                            localFiltered = true;\r\n                            var filterMeta = this.filters[prop];\r\n                            var filterField = prop;\r\n                            var filterValue = filterMeta.value;\r\n                            var filterMatchMode = filterMeta.matchMode || 'startsWith';\r\n                            var dataFieldValue = this.objectUtils.resolveFieldData(this.value[i], filterField);\r\n                            var filterConstraint = this.filterConstraints[filterMatchMode];\r\n                            if (!filterConstraint(dataFieldValue, filterValue)) {\r\n                                localMatch = false;\r\n                            }\r\n                            if (!localMatch) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\r\n                        for (var j = 0; j < globalFilterFieldsArray.length; j++) {\r\n                            var globalFilterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];\r\n                            globalMatch = this.filterConstraints[this.filters['global'].matchMode](this.objectUtils.resolveFieldData(this.value[i], globalFilterField), this.filters['global'].value);\r\n                            if (globalMatch) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    var matches = void 0;\r\n                    if (this.filters['global']) {\r\n                        matches = localFiltered ? (localFiltered && localMatch && globalMatch) : globalMatch;\r\n                    }\r\n                    else {\r\n                        matches = localFiltered && localMatch;\r\n                    }\r\n                    if (matches) {\r\n                        this.filteredValue.push(this.value[i]);\r\n                    }\r\n                }\r\n                if (this.filteredValue.length === this.value.length) {\r\n                    this.filteredValue = null;\r\n                }\r\n                if (this.paginator) {\r\n                    this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\r\n                }\r\n            }\r\n        }\r\n        this.onFilter.emit({\r\n            filters: this.filters,\r\n            filteredValue: this.filteredValue || this.value\r\n        });\r\n        this.tableService.onValueChange(this.value);\r\n    };\r\n    Table.prototype.hasFilter = function () {\r\n        var empty = true;\r\n        for (var prop in this.filters) {\r\n            if (this.filters.hasOwnProperty(prop)) {\r\n                empty = false;\r\n                break;\r\n            }\r\n        }\r\n        return !empty;\r\n    };\r\n    Table.prototype.createLazyLoadMetadata = function () {\r\n        return {\r\n            first: this.first,\r\n            rows: this.virtualScroll ? this.rows * 2 : this.rows,\r\n            sortField: this.sortField,\r\n            sortOrder: this.sortOrder,\r\n            filters: this.filters,\r\n            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\r\n            multiSortMeta: this.multiSortMeta\r\n        };\r\n    };\r\n    Table.prototype.reset = function () {\r\n        this._sortField = null;\r\n        this._sortOrder = 1;\r\n        this._multiSortMeta = null;\r\n        this.tableService.onSort(null);\r\n        this.filteredValue = null;\r\n        this.filters = {};\r\n        this.first = 0;\r\n        if (this.lazy) {\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        }\r\n        else {\r\n            this.totalRecords = (this._value ? this._value.length : 0);\r\n        }\r\n    };\r\n    Table.prototype.exportCSV = function (options) {\r\n        var _this = this;\r\n        var data = this.filteredValue || this.value;\r\n        var csv = '\\ufeff';\r\n        if (options && options.selectionOnly) {\r\n            data = this.selection || [];\r\n        }\r\n        //headers\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            var column = this.columns[i];\r\n            if (column.exportable !== false && column.field) {\r\n                csv += '\"' + (column.header || column.field) + '\"';\r\n                if (i < (this.columns.length - 1)) {\r\n                    csv += this.csvSeparator;\r\n                }\r\n            }\r\n        }\r\n        //body\r\n        data.forEach(function (record, i) {\r\n            csv += '\\n';\r\n            for (var i_1 = 0; i_1 < _this.columns.length; i_1++) {\r\n                var column = _this.columns[i_1];\r\n                if (column.exportable !== false && column.field) {\r\n                    var cellData = _this.objectUtils.resolveFieldData(record, column.field);\r\n                    if (cellData != null) {\r\n                        if (_this.exportFunction) {\r\n                            cellData = _this.exportFunction({\r\n                                data: cellData,\r\n                                field: column.field\r\n                            });\r\n                        }\r\n                        else\r\n                            cellData = String(cellData).replace(/\"/g, '\"\"');\r\n                    }\r\n                    else\r\n                        cellData = '';\r\n                    csv += '\"' + cellData + '\"';\r\n                    if (i_1 < (_this.columns.length - 1)) {\r\n                        csv += _this.csvSeparator;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        var blob = new Blob([csv], {\r\n            type: 'text/csv;charset=utf-8;'\r\n        });\r\n        if (window.navigator.msSaveOrOpenBlob) {\r\n            navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');\r\n        }\r\n        else {\r\n            var link = document.createElement(\"a\");\r\n            link.style.display = 'none';\r\n            document.body.appendChild(link);\r\n            if (link.download !== undefined) {\r\n                link.setAttribute('href', URL.createObjectURL(blob));\r\n                link.setAttribute('download', this.exportFilename + '.csv');\r\n                link.click();\r\n            }\r\n            else {\r\n                csv = 'data:text/csv;charset=utf-8,' + csv;\r\n                window.open(encodeURI(csv));\r\n            }\r\n            document.body.removeChild(link);\r\n        }\r\n    };\r\n    Table.prototype.closeCellEdit = function () {\r\n        this.domHandler.removeClass(this.editingCell, 'ui-editing-cell');\r\n        this.editingCell = null;\r\n    };\r\n    Table.prototype.toggleRow = function (rowData, event) {\r\n        if (!this.dataKey) {\r\n            throw new Error('dataKey must be defined to use row expansion');\r\n        }\r\n        var dataKeyValue = String(this.objectUtils.resolveFieldData(rowData, this.dataKey));\r\n        if (this.expandedRowKeys[dataKeyValue] != null) {\r\n            delete this.expandedRowKeys[dataKeyValue];\r\n            this.onRowCollapse.emit({\r\n                originalEvent: event,\r\n                data: rowData\r\n            });\r\n        }\r\n        else {\r\n            if (this.rowExpandMode === 'single') {\r\n                this.expandedRowKeys = {};\r\n            }\r\n            this.expandedRowKeys[dataKeyValue] = 1;\r\n            this.onRowExpand.emit({\r\n                originalEvent: event,\r\n                data: rowData\r\n            });\r\n        }\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    Table.prototype.isRowExpanded = function (rowData) {\r\n        return this.expandedRowKeys[String(this.objectUtils.resolveFieldData(rowData, this.dataKey))] === 1;\r\n    };\r\n    Table.prototype.isSingleSelectionMode = function () {\r\n        return this.selectionMode === 'single';\r\n    };\r\n    Table.prototype.isMultipleSelectionMode = function () {\r\n        return this.selectionMode === 'multiple';\r\n    };\r\n    Table.prototype.onColumnResizeBegin = function (event) {\r\n        var containerLeft = this.domHandler.getOffset(this.containerViewChild.nativeElement).left;\r\n        this.lastResizerHelperX = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft);\r\n        event.preventDefault();\r\n    };\r\n    Table.prototype.onColumnResize = function (event) {\r\n        var containerLeft = this.domHandler.getOffset(this.containerViewChild.nativeElement).left;\r\n        this.domHandler.addClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');\r\n        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\r\n        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\r\n        this.resizeHelperViewChild.nativeElement.style.left = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft) + 'px';\r\n        this.resizeHelperViewChild.nativeElement.style.display = 'block';\r\n    };\r\n    Table.prototype.onColumnResizeEnd = function (event, column) {\r\n        var delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\r\n        var columnWidth = column.offsetWidth;\r\n        var minWidth = parseInt(column.style.minWidth || 15);\r\n        if (columnWidth + delta < minWidth) {\r\n            delta = minWidth - columnWidth;\r\n        }\r\n        var newColumnWidth = columnWidth + delta;\r\n        if (newColumnWidth >= minWidth) {\r\n            if (this.columnResizeMode === 'fit') {\r\n                var nextColumn = column.nextElementSibling;\r\n                while (!nextColumn.offsetParent) {\r\n                    nextColumn = nextColumn.nextElementSibling;\r\n                }\r\n                if (nextColumn) {\r\n                    var nextColumnWidth = nextColumn.offsetWidth - delta;\r\n                    var nextColumnMinWidth = nextColumn.style.minWidth || 15;\r\n                    if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {\r\n                        if (this.scrollable) {\r\n                            var scrollableView = this.findParentScrollableView(column);\r\n                            var scrollableBodyTable = this.domHandler.findSingle(scrollableView, 'table.ui-table-scrollable-body-table');\r\n                            var scrollableHeaderTable = this.domHandler.findSingle(scrollableView, 'table.ui-table-scrollable-header-table');\r\n                            var scrollableFooterTable = this.domHandler.findSingle(scrollableView, 'table.ui-table-scrollable-footer-table');\r\n                            var resizeColumnIndex = this.domHandler.index(column);\r\n                            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                        }\r\n                        else {\r\n                            column.style.width = newColumnWidth + 'px';\r\n                            if (nextColumn) {\r\n                                nextColumn.style.width = nextColumnWidth + 'px';\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (this.columnResizeMode === 'expand') {\r\n                if (this.scrollable) {\r\n                    var scrollableView = this.findParentScrollableView(column);\r\n                    var scrollableBodyTable = this.domHandler.findSingle(scrollableView, 'table.ui-table-scrollable-body-table');\r\n                    var scrollableHeaderTable = this.domHandler.findSingle(scrollableView, 'table.ui-table-scrollable-header-table');\r\n                    var scrollableFooterTable = this.domHandler.findSingle(scrollableView, 'table.ui-table-scrollable-footer-table');\r\n                    scrollableBodyTable.style.width = scrollableBodyTable.offsetWidth + delta + 'px';\r\n                    scrollableHeaderTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';\r\n                    if (scrollableFooterTable) {\r\n                        scrollableFooterTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';\r\n                    }\r\n                    var resizeColumnIndex = this.domHandler.index(column);\r\n                    this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\r\n                    this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\r\n                    this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\r\n                }\r\n                else {\r\n                    this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.offsetWidth + delta + 'px';\r\n                    column.style.width = newColumnWidth + 'px';\r\n                    var containerWidth = this.tableViewChild.nativeElement.style.width;\r\n                    this.containerViewChild.nativeElement.style.width = containerWidth + 'px';\r\n                }\r\n            }\r\n            this.onColResize.emit({\r\n                element: column,\r\n                delta: delta\r\n            });\r\n        }\r\n        this.resizeHelperViewChild.nativeElement.style.display = 'none';\r\n        this.domHandler.removeClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');\r\n    };\r\n    Table.prototype.findParentScrollableView = function (column) {\r\n        if (column) {\r\n            var parent_1 = column.parentElement;\r\n            while (parent_1 && !this.domHandler.hasClass(parent_1, 'ui-table-scrollable-view')) {\r\n                parent_1 = parent_1.parentElement;\r\n            }\r\n            return parent_1;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    Table.prototype.resizeColGroup = function (table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\r\n        if (table) {\r\n            var colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\r\n            if (colGroup) {\r\n                var col = colGroup.children[resizeColumnIndex];\r\n                var nextCol = col.nextElementSibling;\r\n                col.style.width = newColumnWidth + 'px';\r\n                if (nextCol && nextColumnWidth) {\r\n                    nextCol.style.width = nextColumnWidth + 'px';\r\n                }\r\n            }\r\n            else {\r\n                throw \"Scrollable tables require a colgroup to support resizable columns\";\r\n            }\r\n        }\r\n    };\r\n    Table.prototype.onColumnDragStart = function (event, columnElement) {\r\n        this.reorderIconWidth = this.domHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\r\n        this.reorderIconHeight = this.domHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\r\n        this.draggedColumn = columnElement;\r\n        event.dataTransfer.setData('text', 'b'); // For firefox\r\n    };\r\n    Table.prototype.onColumnDragEnter = function (event, dropHeader) {\r\n        if (this.reorderableColumns && this.draggedColumn && dropHeader) {\r\n            event.preventDefault();\r\n            var containerOffset = this.domHandler.getOffset(this.containerViewChild.nativeElement);\r\n            var dropHeaderOffset = this.domHandler.getOffset(dropHeader);\r\n            if (this.draggedColumn != dropHeader) {\r\n                var targetLeft = dropHeaderOffset.left - containerOffset.left;\r\n                var targetTop = containerOffset.top - dropHeaderOffset.top;\r\n                var columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\r\n                this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\r\n                this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\r\n                if (event.pageX > columnCenter) {\r\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\r\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\r\n                    this.dropPosition = 1;\r\n                }\r\n                else {\r\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\r\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\r\n                    this.dropPosition = -1;\r\n                }\r\n                this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\r\n                this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\r\n            }\r\n            else {\r\n                event.dataTransfer.dropEffect = 'none';\r\n            }\r\n        }\r\n    };\r\n    Table.prototype.onColumnDragLeave = function (event) {\r\n        if (this.reorderableColumns && this.draggedColumn) {\r\n            event.preventDefault();\r\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\r\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\r\n        }\r\n    };\r\n    Table.prototype.onColumnDrop = function (event, dropColumn) {\r\n        event.preventDefault();\r\n        if (this.draggedColumn) {\r\n            var dragIndex = this.domHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\r\n            var dropIndex = this.domHandler.indexWithinGroup(dropColumn, 'preorderablecolumn');\r\n            var allowDrop = (dragIndex != dropIndex);\r\n            if (allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {\r\n                allowDrop = false;\r\n            }\r\n            if (allowDrop) {\r\n                this.objectUtils.reorderArray(this.columns, dragIndex, dropIndex);\r\n                this.onColReorder.emit({\r\n                    dragIndex: dragIndex,\r\n                    dropIndex: dropIndex,\r\n                    columns: this.columns\r\n                });\r\n            }\r\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\r\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\r\n            this.draggedColumn.draggable = false;\r\n            this.draggedColumn = null;\r\n            this.dropPosition = null;\r\n        }\r\n    };\r\n    Table.prototype.onRowDragStart = function (event, index) {\r\n        this.rowDragging = true;\r\n        this.draggedRowIndex = index;\r\n        event.dataTransfer.setData('text', 'b'); // For firefox\r\n    };\r\n    Table.prototype.onRowDragOver = function (event, index, rowElement) {\r\n        if (this.rowDragging && this.draggedRowIndex !== index) {\r\n            var rowY = this.domHandler.getOffset(rowElement).top + this.domHandler.getWindowScrollTop();\r\n            var pageY = event.pageY;\r\n            var rowMidY = rowY + this.domHandler.getOuterHeight(rowElement) / 2;\r\n            var prevRowElement = rowElement.previousElementSibling;\r\n            if (pageY < rowMidY) {\r\n                this.domHandler.removeClass(rowElement, 'ui-table-dragpoint-bottom');\r\n                this.droppedRowIndex = index;\r\n                if (prevRowElement)\r\n                    this.domHandler.addClass(prevRowElement, 'ui-table-dragpoint-bottom');\r\n                else\r\n                    this.domHandler.addClass(rowElement, 'ui-table-dragpoint-top');\r\n            }\r\n            else {\r\n                if (prevRowElement)\r\n                    this.domHandler.removeClass(prevRowElement, 'ui-table-dragpoint-bottom');\r\n                else\r\n                    this.domHandler.addClass(rowElement, 'ui-table-dragpoint-top');\r\n                this.droppedRowIndex = index + 1;\r\n                this.domHandler.addClass(rowElement, 'ui-table-dragpoint-bottom');\r\n            }\r\n        }\r\n    };\r\n    Table.prototype.onRowDragLeave = function (event, rowElement) {\r\n        var prevRowElement = rowElement.previousElementSibling;\r\n        if (prevRowElement) {\r\n            this.domHandler.removeClass(prevRowElement, 'ui-table-dragpoint-bottom');\r\n        }\r\n        this.domHandler.removeClass(rowElement, 'ui-table-dragpoint-bottom');\r\n        this.domHandler.removeClass(rowElement, 'ui-table-dragpoint-top');\r\n    };\r\n    Table.prototype.onRowDragEnd = function (event) {\r\n        this.rowDragging = false;\r\n        this.draggedRowIndex = null;\r\n        this.droppedRowIndex = null;\r\n    };\r\n    Table.prototype.onRowDrop = function (event, rowElement) {\r\n        if (this.droppedRowIndex != null) {\r\n            var dropIndex = (this.draggedRowIndex > this.droppedRowIndex) ? this.droppedRowIndex : (this.droppedRowIndex === 0) ? 0 : this.droppedRowIndex - 1;\r\n            this.objectUtils.reorderArray(this.value, this.draggedRowIndex, dropIndex);\r\n            this.onRowReorder.emit({\r\n                dragIndex: this.draggedRowIndex,\r\n                dropIndex: this.droppedRowIndex\r\n            });\r\n        }\r\n        //cleanup\r\n        this.onRowDragLeave(event, rowElement);\r\n        this.onRowDragEnd(event);\r\n    };\r\n    Table.prototype.handleVirtualScroll = function (event) {\r\n        var _this = this;\r\n        this.first = (event.page - 1) * this.rows;\r\n        this.virtualScrollCallback = event.callback;\r\n        this.zone.run(function () {\r\n            if (_this.virtualScrollTimer) {\r\n                clearTimeout(_this.virtualScrollTimer);\r\n            }\r\n            _this.virtualScrollTimer = setTimeout(function () {\r\n                _this.onLazyLoad.emit(_this.createLazyLoadMetadata());\r\n            }, _this.virtualScrollDelay);\r\n        });\r\n    };\r\n    Table.prototype.isEmpty = function () {\r\n        var data = this.filteredValue || this.value;\r\n        return data == null || data.length == 0;\r\n    };\r\n    Table.prototype.getBlockableElement = function () {\r\n        return this.el.nativeElement.children[0];\r\n    };\r\n    Table.prototype.ngOnDestroy = function () {\r\n        this.editingCell = null;\r\n        this.initialized = null;\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], Table.prototype, \"frozenColumns\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], Table.prototype, \"frozenValue\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Table.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Table.prototype, \"tableStyle\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"tableStyleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"paginator\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Table.prototype, \"rows\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Table.prototype, \"first\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Table.prototype, \"pageLinks\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], Table.prototype, \"rowsPerPageOptions\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"alwaysShowPaginator\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"paginatorPosition\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Table.prototype, \"paginatorDropdownAppendTo\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Table.prototype, \"defaultSortOrder\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"sortMode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"resetPageOnSort\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"selectionMode\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"selectionChange\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Table.prototype, \"contextMenuSelection\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"contextMenuSelectionChange\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"contextMenuSelectionMode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"dataKey\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"metaKeySelection\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], Table.prototype, \"rowTrackBy\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"lazy\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"lazyLoadOnInit\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"compareSelectionBy\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"csvSeparator\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"exportFilename\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Table.prototype, \"filters\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], Table.prototype, \"globalFilterFields\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Table.prototype, \"filterDelay\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Table.prototype, \"expandedRowKeys\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"rowExpandMode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"scrollable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"scrollHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"virtualScroll\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Table.prototype, \"virtualScrollDelay\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Table.prototype, \"virtualRowHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"frozenWidth\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"responsive\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Table.prototype, \"contextMenu\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"resizableColumns\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"columnResizeMode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"reorderableColumns\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"loading\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Table.prototype, \"loadingIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"rowHover\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"customSort\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Table.prototype, \"autoLayout\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Table.prototype, \"exportFunction\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onRowSelect\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onRowUnselect\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onPage\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onSort\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onFilter\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onLazyLoad\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onRowExpand\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onRowCollapse\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onContextMenuSelect\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onColResize\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onColReorder\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onRowReorder\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onEditInit\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onEditComplete\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onEditCancel\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"onHeaderCheckboxToggle\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Table.prototype, \"sortFunction\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('container'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], Table.prototype, \"containerViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('resizeHelper'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], Table.prototype, \"resizeHelperViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('reorderIndicatorUp'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], Table.prototype, \"reorderIndicatorUpViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('reorderIndicatorDown'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], Table.prototype, \"reorderIndicatorDownViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('table'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], Table.prototype, \"tableViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ContentChildren(shared_1.PrimeTemplate),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], Table.prototype, \"templates\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], Table.prototype, \"value\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], Table.prototype, \"columns\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], Table.prototype, \"totalRecords\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], Table.prototype, \"sortField\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], Table.prototype, \"sortOrder\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], Table.prototype, \"multiSortMeta\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], Table.prototype, \"selection\", null);\r\n    Table = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-table',\r\n            template: \"\\n        <div #container [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\"\\n            [ngClass]=\\\"{'ui-table ui-widget': true, 'ui-table-responsive': responsive, 'ui-table-resizable': resizableColumns,\\n                'ui-table-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\\n                'ui-table-hoverable-rows': (rowHover||selectionMode), 'ui-table-auto-layout': autoLayout}\\\">\\n            <div class=\\\"ui-table-loading ui-widget-overlay\\\" *ngIf=\\\"loading\\\"></div>\\n            <div class=\\\"ui-table-loading-content\\\" *ngIf=\\\"loading\\\">\\n                <i [class]=\\\"'ui-table-loading-icon pi-spin ' + loadingIcon\\\"></i>\\n            </div>\\n            <div *ngIf=\\\"captionTemplate\\\" class=\\\"ui-table-caption ui-widget-header\\\">\\n                <ng-container *ngTemplateOutlet=\\\"captionTemplate\\\"></ng-container>\\n            </div>\\n            <p-paginator [rows]=\\\"rows\\\" [first]=\\\"first\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinkSize]=\\\"pageLinks\\\" styleClass=\\\"ui-paginator-top\\\" [alwaysShow]=\\\"alwaysShowPaginator\\\"\\n                (onPageChange)=\\\"onPageChange($event)\\\" [rowsPerPageOptions]=\\\"rowsPerPageOptions\\\" *ngIf=\\\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\\\"\\n                [templateLeft]=\\\"paginatorLeftTemplate\\\" [templateRight]=\\\"paginatorRightTemplate\\\" [dropdownAppendTo]=\\\"paginatorDropdownAppendTo\\\"></p-paginator>\\n            \\n            <div class=\\\"ui-table-wrapper\\\" *ngIf=\\\"!scrollable\\\">\\n                <table #table [ngClass]=\\\"tableStyleClass\\\" [ngStyle]=\\\"tableStyle\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <thead class=\\\"ui-table-thead\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"headerTemplate; context: {$implicit: columns}\\\"></ng-container>\\n                    </thead>\\n                    <tfoot class=\\\"ui-table-tfoot\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"footerTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    </tfoot>\\n                    <tbody class=\\\"ui-table-tbody\\\" [pTableBody]=\\\"columns\\\" [pTableBodyTemplate]=\\\"bodyTemplate\\\"></tbody>\\n                </table>\\n            </div>\\n\\n            <div class=\\\"ui-table-scrollable-wrapper\\\" *ngIf=\\\"scrollable\\\">\\n               <div class=\\\"ui-table-scrollable-view ui-table-frozen-view\\\" *ngIf=\\\"frozenColumns||frozenBodyTemplate\\\" [pScrollableView]=\\\"frozenColumns\\\" [frozen]=\\\"true\\\" [ngStyle]=\\\"{width: frozenWidth}\\\" [scrollHeight]=\\\"scrollHeight\\\"></div>\\n               <div class=\\\"ui-table-scrollable-view\\\" [pScrollableView]=\\\"columns\\\" [frozen]=\\\"false\\\" [scrollHeight]=\\\"scrollHeight\\\"></div>\\n            </div>\\n            \\n            <p-paginator [rows]=\\\"rows\\\" [first]=\\\"first\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinkSize]=\\\"pageLinks\\\" styleClass=\\\"ui-paginator-bottom\\\" [alwaysShow]=\\\"alwaysShowPaginator\\\"\\n                (onPageChange)=\\\"onPageChange($event)\\\" [rowsPerPageOptions]=\\\"rowsPerPageOptions\\\" *ngIf=\\\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\\\"\\n                [templateLeft]=\\\"paginatorLeftTemplate\\\" [templateRight]=\\\"paginatorRightTemplate\\\" [dropdownAppendTo]=\\\"paginatorDropdownAppendTo\\\"></p-paginator>\\n            <div *ngIf=\\\"summaryTemplate\\\" class=\\\"ui-table-summary ui-widget-header\\\">\\n                <ng-container *ngTemplateOutlet=\\\"summaryTemplate\\\"></ng-container>\\n            </div>\\n\\n            <div #resizeHelper class=\\\"ui-column-resizer-helper ui-state-highlight\\\" style=\\\"display:none\\\" *ngIf=\\\"resizableColumns\\\"></div>\\n\\n            <span #reorderIndicatorUp class=\\\"pi pi-arrow-down ui-table-reorder-indicator-up\\\" style=\\\"display:none\\\" *ngIf=\\\"reorderableColumns\\\"></span>\\n            <span #reorderIndicatorDown class=\\\"pi pi-arrow-up ui-table-reorder-indicator-down\\\" style=\\\"display:none\\\" *ngIf=\\\"reorderableColumns\\\"></span>\\n        </div>\\n    \",\r\n            providers: [domhandler_1.DomHandler, objectutils_1.ObjectUtils, TableService]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler, objectutils_1.ObjectUtils, core_1.NgZone, TableService])\r\n    ], Table);\r\n    return Table;\r\n}());\r\nexports.Table = Table;\r\nvar TableBody = /** @class */ (function () {\r\n    function TableBody(dt) {\r\n        this.dt = dt;\r\n    }\r\n    __decorate([\r\n        core_1.Input(\"pTableBody\"),\r\n        __metadata(\"design:type\", Array)\r\n    ], TableBody.prototype, \"columns\", void 0);\r\n    __decorate([\r\n        core_1.Input(\"pTableBodyTemplate\"),\r\n        __metadata(\"design:type\", core_1.TemplateRef)\r\n    ], TableBody.prototype, \"template\", void 0);\r\n    TableBody = __decorate([\r\n        core_1.Component({\r\n            selector: '[pTableBody]',\r\n            template: \"\\n        <ng-container *ngIf=\\\"!dt.expandedRowTemplate\\\">\\n            <ng-template ngFor let-rowData let-rowIndex=\\\"index\\\" [ngForOf]=\\\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\\\" [ngForTrackBy]=\\\"dt.rowTrackBy\\\">\\n                <ng-container *ngTemplateOutlet=\\\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\\\"></ng-container>\\n            </ng-template>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"dt.expandedRowTemplate\\\">\\n            <ng-template ngFor let-rowData let-rowIndex=\\\"index\\\" [ngForOf]=\\\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\\\" [ngForTrackBy]=\\\"dt.rowTrackBy\\\">\\n                <ng-container *ngTemplateOutlet=\\\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData)}\\\"></ng-container>\\n                <ng-container *ngIf=\\\"dt.isRowExpanded(rowData)\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\\\"></ng-container>\\n                </ng-container>\\n            </ng-template>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"dt.isEmpty()\\\">\\n            <ng-container *ngTemplateOutlet=\\\"dt.emptyMessageTemplate; context: {$implicit: columns}\\\"></ng-container>\\n        </ng-container>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table])\r\n    ], TableBody);\r\n    return TableBody;\r\n}());\r\nexports.TableBody = TableBody;\r\nvar ScrollableView = /** @class */ (function () {\r\n    function ScrollableView(dt, el, domHandler, zone) {\r\n        var _this = this;\r\n        this.dt = dt;\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.zone = zone;\r\n        this.subscription = this.dt.tableService.valueSource$.subscribe(function () {\r\n            _this.zone.runOutsideAngular(function () {\r\n                setTimeout(function () {\r\n                    _this.alignScrollBar();\r\n                }, 50);\r\n            });\r\n        });\r\n        if (this.dt.virtualScroll) {\r\n            this.totalRecordsSubscription = this.dt.tableService.totalRecordsSource$.subscribe(function () {\r\n                _this.zone.runOutsideAngular(function () {\r\n                    setTimeout(function () {\r\n                        _this.setVirtualScrollerHeight();\r\n                    }, 50);\r\n                });\r\n            });\r\n        }\r\n        this.initialized = false;\r\n    }\r\n    Object.defineProperty(ScrollableView.prototype, \"scrollHeight\", {\r\n        get: function () {\r\n            return this._scrollHeight;\r\n        },\r\n        set: function (val) {\r\n            this._scrollHeight = val;\r\n            this.setScrollHeight();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScrollableView.prototype.ngAfterViewChecked = function () {\r\n        if (!this.initialized && this.el.nativeElement.offsetParent) {\r\n            this.alignScrollBar();\r\n            this.setScrollHeight();\r\n            this.initialized = true;\r\n        }\r\n    };\r\n    ScrollableView.prototype.ngAfterViewInit = function () {\r\n        var _this = this;\r\n        if (!this.frozen) {\r\n            if (this.dt.frozenColumns || this.dt.frozenBodyTemplate) {\r\n                this.domHandler.addClass(this.el.nativeElement, 'ui-table-unfrozen-view');\r\n            }\r\n            if (this.dt.frozenWidth) {\r\n                this.el.nativeElement.style.left = this.dt.frozenWidth;\r\n                this.el.nativeElement.style.width = 'calc(100% - ' + this.dt.frozenWidth + ')';\r\n            }\r\n            var frozenView = this.el.nativeElement.previousElementSibling;\r\n            if (frozenView) {\r\n                this.frozenSiblingBody = this.domHandler.findSingle(frozenView, '.ui-table-scrollable-body');\r\n            }\r\n        }\r\n        else {\r\n            this.scrollBodyViewChild.nativeElement.style.marginBottom = this.domHandler.calculateScrollbarWidth() + 'px';\r\n            var scrollableView = this.el.nativeElement.nextElementSibling;\r\n            if (scrollableView) {\r\n                this.scrollableSiblingBody = this.domHandler.findSingle(scrollableView, '.ui-table-scrollable-body');\r\n            }\r\n        }\r\n        this.bindEvents();\r\n        this.setScrollHeight();\r\n        this.alignScrollBar();\r\n        if (this.frozen) {\r\n            this.columnsSubscription = this.dt.tableService.columnsSource$.subscribe(function () {\r\n                _this.zone.runOutsideAngular(function () {\r\n                    setTimeout(function () {\r\n                        _this.setScrollHeight();\r\n                    }, 50);\r\n                });\r\n            });\r\n        }\r\n        if (this.dt.virtualScroll) {\r\n            this.setVirtualScrollerHeight();\r\n        }\r\n    };\r\n    ScrollableView.prototype.bindEvents = function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular(function () {\r\n            var scrollBarWidth = _this.domHandler.calculateScrollbarWidth();\r\n            if (_this.scrollHeaderViewChild && _this.scrollHeaderViewChild.nativeElement) {\r\n                _this.headerScrollListener = _this.onHeaderScroll.bind(_this);\r\n                _this.scrollHeaderBoxViewChild.nativeElement.addEventListener('scroll', _this.headerScrollListener);\r\n            }\r\n            if (_this.scrollFooterViewChild && _this.scrollFooterViewChild.nativeElement) {\r\n                _this.footerScrollListener = _this.onFooterScroll.bind(_this);\r\n                _this.scrollFooterViewChild.nativeElement.addEventListener('scroll', _this.footerScrollListener);\r\n            }\r\n            if (!_this.frozen) {\r\n                _this.bodyScrollListener = _this.onBodyScroll.bind(_this);\r\n                _this.scrollBodyViewChild.nativeElement.addEventListener('scroll', _this.bodyScrollListener);\r\n            }\r\n        });\r\n    };\r\n    ScrollableView.prototype.unbindEvents = function () {\r\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\r\n            this.scrollHeaderBoxViewChild.nativeElement.removeEventListener('scroll', this.headerScrollListener);\r\n        }\r\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\r\n            this.scrollFooterViewChild.nativeElement.removeEventListener('scroll', this.footerScrollListener);\r\n        }\r\n        this.scrollBodyViewChild.nativeElement.addEventListener('scroll', this.bodyScrollListener);\r\n    };\r\n    ScrollableView.prototype.onHeaderScroll = function (event) {\r\n        this.scrollHeaderViewChild.nativeElement.scrollLeft = 0;\r\n    };\r\n    ScrollableView.prototype.onFooterScroll = function (event) {\r\n        this.scrollFooterViewChild.nativeElement.scrollLeft = 0;\r\n    };\r\n    ScrollableView.prototype.onBodyScroll = function (event) {\r\n        var _this = this;\r\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\r\n            this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * this.scrollBodyViewChild.nativeElement.scrollLeft + 'px';\r\n        }\r\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\r\n            this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * this.scrollBodyViewChild.nativeElement.scrollLeft + 'px';\r\n        }\r\n        if (this.frozenSiblingBody) {\r\n            this.frozenSiblingBody.scrollTop = this.scrollBodyViewChild.nativeElement.scrollTop;\r\n        }\r\n        if (this.dt.virtualScroll) {\r\n            var viewport = this.domHandler.getOuterHeight(this.scrollBodyViewChild.nativeElement);\r\n            var tableHeight = this.domHandler.getOuterHeight(this.scrollTableViewChild.nativeElement);\r\n            var pageHeight_1 = this.dt.virtualRowHeight * this.dt.rows;\r\n            var virtualTableHeight = this.domHandler.getOuterHeight(this.virtualScrollerViewChild.nativeElement);\r\n            var pageCount = (virtualTableHeight / pageHeight_1) || 1;\r\n            var scrollBodyTop = this.scrollTableViewChild.nativeElement.style.top || '0';\r\n            if ((this.scrollBodyViewChild.nativeElement.scrollTop + viewport > parseFloat(scrollBodyTop) + tableHeight) || (this.scrollBodyViewChild.nativeElement.scrollTop < parseFloat(scrollBodyTop))) {\r\n                var page_1 = Math.floor((this.scrollBodyViewChild.nativeElement.scrollTop * pageCount) / (this.scrollBodyViewChild.nativeElement.scrollHeight)) + 1;\r\n                this.dt.handleVirtualScroll({\r\n                    page: page_1,\r\n                    callback: function () {\r\n                        _this.scrollTableViewChild.nativeElement.style.top = ((page_1 - 1) * pageHeight_1) + 'px';\r\n                        if (_this.frozenSiblingBody) {\r\n                            _this.frozenSiblingBody.children[0].style.top = _this.scrollTableViewChild.nativeElement.style.top;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    ScrollableView.prototype.setScrollHeight = function () {\r\n        if (this.scrollHeight && this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\r\n            if (this.scrollHeight.indexOf('%') !== -1) {\r\n                this.scrollBodyViewChild.nativeElement.style.visibility = 'hidden';\r\n                this.scrollBodyViewChild.nativeElement.style.height = '100px'; //temporary height to calculate static height\r\n                var containerHeight = this.domHandler.getOuterHeight(this.dt.el.nativeElement.children[0]);\r\n                var relativeHeight = this.domHandler.getOuterHeight(this.dt.el.nativeElement.parentElement) * parseInt(this.scrollHeight) / 100;\r\n                var staticHeight = containerHeight - 100; //total height of headers, footers, paginators\r\n                var scrollBodyHeight = (relativeHeight - staticHeight);\r\n                if (this.frozen) {\r\n                    scrollBodyHeight -= this.domHandler.calculateScrollbarWidth();\r\n                }\r\n                this.scrollBodyViewChild.nativeElement.style.height = 'auto';\r\n                this.scrollBodyViewChild.nativeElement.style.maxHeight = scrollBodyHeight + 'px';\r\n                this.scrollBodyViewChild.nativeElement.style.visibility = 'visible';\r\n            }\r\n            else {\r\n                if (this.frozen && this.scrollableSiblingBody && this.domHandler.getOuterWidth(this.scrollableSiblingBody) < this.domHandler.getOuterWidth(this.scrollableSiblingBody.children[0]))\r\n                    this.scrollBodyViewChild.nativeElement.style.maxHeight = (parseInt(this.scrollHeight) - this.domHandler.calculateScrollbarWidth()) + 'px';\r\n                else\r\n                    this.scrollBodyViewChild.nativeElement.style.maxHeight = this.scrollHeight;\r\n            }\r\n        }\r\n    };\r\n    ScrollableView.prototype.setVirtualScrollerHeight = function () {\r\n        if (this.virtualScrollerViewChild.nativeElement) {\r\n            this.virtualScrollerViewChild.nativeElement.style.height = this.dt.totalRecords * this.dt.virtualRowHeight + 'px';\r\n        }\r\n    };\r\n    ScrollableView.prototype.hasVerticalOverflow = function () {\r\n        return this.domHandler.getOuterHeight(this.scrollTableViewChild.nativeElement) > this.domHandler.getOuterHeight(this.scrollBodyViewChild.nativeElement);\r\n    };\r\n    ScrollableView.prototype.alignScrollBar = function () {\r\n        if (!this.frozen) {\r\n            var scrollBarWidth = this.hasVerticalOverflow() ? this.domHandler.calculateScrollbarWidth() : 0;\r\n            this.scrollHeaderBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';\r\n            if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\r\n                this.scrollFooterBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';\r\n            }\r\n        }\r\n        this.initialized = false;\r\n    };\r\n    ScrollableView.prototype.ngOnDestroy = function () {\r\n        this.unbindEvents();\r\n        this.frozenSiblingBody = null;\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n        if (this.totalRecordsSubscription) {\r\n            this.totalRecordsSubscription.unsubscribe();\r\n        }\r\n        if (this.columnsSubscription) {\r\n            this.columnsSubscription.unsubscribe();\r\n        }\r\n        this.initialized = false;\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"pScrollableView\"),\r\n        __metadata(\"design:type\", Array)\r\n    ], ScrollableView.prototype, \"columns\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], ScrollableView.prototype, \"frozen\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('scrollHeader'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], ScrollableView.prototype, \"scrollHeaderViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('scrollHeaderBox'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], ScrollableView.prototype, \"scrollHeaderBoxViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('scrollBody'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], ScrollableView.prototype, \"scrollBodyViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('scrollTable'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], ScrollableView.prototype, \"scrollTableViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('scrollFooter'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], ScrollableView.prototype, \"scrollFooterViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('scrollFooterBox'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], ScrollableView.prototype, \"scrollFooterBoxViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('virtualScroller'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], ScrollableView.prototype, \"virtualScrollerViewChild\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], ScrollableView.prototype, \"scrollHeight\", null);\r\n    ScrollableView = __decorate([\r\n        core_1.Component({\r\n            selector: '[pScrollableView]',\r\n            template: \"\\n        <div #scrollHeader class=\\\"ui-table-scrollable-header ui-widget-header\\\">\\n            <div #scrollHeaderBox class=\\\"ui-table-scrollable-header-box\\\">\\n                <table class=\\\"ui-table-scrollable-header-table\\\" [ngClass]=\\\"dt.tableStyleClass\\\" [ngStyle]=\\\"dt.tableStyle\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <thead class=\\\"ui-table-thead\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenHeaderTemplate||dt.headerTemplate : dt.headerTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    </thead>\\n                    <tbody class=\\\"ui-table-tbody\\\">\\n                        <ng-template ngFor let-rowData let-rowIndex=\\\"index\\\" [ngForOf]=\\\"dt.frozenValue\\\" [ngForTrackBy]=\\\"dt.rowTrackBy\\\">\\n                            <ng-container *ngTemplateOutlet=\\\"dt.frozenRowsTemplate; context: {$implicit: rowData, rowIndex: rowIndex, columns: columns}\\\"></ng-container>\\n                        </ng-template>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n        <div #scrollBody class=\\\"ui-table-scrollable-body\\\">\\n            <table #scrollTable [ngClass]=\\\"{'ui-table-scrollable-body-table': true, 'ui-table-virtual-table': dt.virtualScroll}\\\" [class]=\\\"dt.tableStyleClass\\\" [ngStyle]=\\\"dt.tableStyle\\\">\\n                <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                <tbody class=\\\"ui-table-tbody\\\" [pTableBody]=\\\"columns\\\" [pTableBodyTemplate]=\\\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\\\"></tbody>\\n            </table>\\n            <div #virtualScroller class=\\\"ui-table-virtual-scroller\\\"></div>\\n        </div>\\n        <div #scrollFooter *ngIf=\\\"dt.footerTemplate\\\" class=\\\"ui-table-scrollable-footer ui-widget-header\\\">\\n            <div #scrollFooterBox class=\\\"ui-table-scrollable-footer-box\\\">\\n                <table class=\\\"ui-table-scrollable-footer-table\\\" [ngClass]=\\\"dt.tableStyleClass\\\" [ngStyle]=\\\"dt.tableStyle\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <tfoot class=\\\"ui-table-tfoot\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenFooterTemplate||dt.footerTemplate : dt.footerTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    </tfoot>\\n                </table>\\n            </div>\\n        </div>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])\r\n    ], ScrollableView);\r\n    return ScrollableView;\r\n}());\r\nexports.ScrollableView = ScrollableView;\r\nvar SortableColumn = /** @class */ (function () {\r\n    function SortableColumn(dt, domHandler) {\r\n        var _this = this;\r\n        this.dt = dt;\r\n        this.domHandler = domHandler;\r\n        if (this.isEnabled()) {\r\n            this.subscription = this.dt.tableService.sortSource$.subscribe(function (sortMeta) {\r\n                _this.updateSortState();\r\n            });\r\n        }\r\n    }\r\n    SortableColumn.prototype.ngOnInit = function () {\r\n        if (this.isEnabled()) {\r\n            this.updateSortState();\r\n        }\r\n    };\r\n    SortableColumn.prototype.updateSortState = function () {\r\n        this.sorted = this.dt.isSorted(this.field);\r\n    };\r\n    SortableColumn.prototype.onClick = function (event) {\r\n        if (this.isEnabled()) {\r\n            this.updateSortState();\r\n            this.dt.sort({\r\n                originalEvent: event,\r\n                field: this.field\r\n            });\r\n            this.domHandler.clearSelection();\r\n        }\r\n    };\r\n    SortableColumn.prototype.isEnabled = function () {\r\n        return this.pSortableColumnDisabled !== true;\r\n    };\r\n    SortableColumn.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"pSortableColumn\"),\r\n        __metadata(\"design:type\", String)\r\n    ], SortableColumn.prototype, \"field\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], SortableColumn.prototype, \"pSortableColumnDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('click', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [MouseEvent]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], SortableColumn.prototype, \"onClick\", null);\r\n    SortableColumn = __decorate([\r\n        core_1.Directive({\r\n            selector: '[pSortableColumn]',\r\n            providers: [domhandler_1.DomHandler],\r\n            host: {\r\n                '[class.ui-sortable-column]': 'isEnabled()',\r\n                '[class.ui-state-highlight]': 'sorted'\r\n            }\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table, domhandler_1.DomHandler])\r\n    ], SortableColumn);\r\n    return SortableColumn;\r\n}());\r\nexports.SortableColumn = SortableColumn;\r\nvar SortIcon = /** @class */ (function () {\r\n    function SortIcon(dt) {\r\n        var _this = this;\r\n        this.dt = dt;\r\n        this.subscription = this.dt.tableService.sortSource$.subscribe(function (sortMeta) {\r\n            _this.updateSortState();\r\n        });\r\n    }\r\n    SortIcon.prototype.ngOnInit = function () {\r\n        this.updateSortState();\r\n    };\r\n    SortIcon.prototype.onClick = function (event) {\r\n        event.preventDefault();\r\n    };\r\n    SortIcon.prototype.updateSortState = function () {\r\n        if (this.dt.sortMode === 'single') {\r\n            this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;\r\n        }\r\n        else if (this.dt.sortMode === 'multiple') {\r\n            var sortMeta = this.dt.getSortMeta(this.field);\r\n            this.sortOrder = sortMeta ? sortMeta.order : 0;\r\n        }\r\n    };\r\n    Object.defineProperty(SortIcon.prototype, \"ariaText\", {\r\n        get: function () {\r\n            var text;\r\n            switch (this.sortOrder) {\r\n                case 1:\r\n                    text = this.ariaLabelAsc;\r\n                    break;\r\n                case -1:\r\n                    text = this.ariaLabelDesc;\r\n                    break;\r\n                default:\r\n                    text = this.ariaLabel;\r\n                    break;\r\n            }\r\n            return text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SortIcon.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], SortIcon.prototype, \"field\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], SortIcon.prototype, \"ariaLabel\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], SortIcon.prototype, \"ariaLabelDesc\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], SortIcon.prototype, \"ariaLabelAsc\", void 0);\r\n    SortIcon = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-sortIcon',\r\n            template: \"\\n        <a href=\\\"#\\\" (click)=\\\"onClick($event)\\\" [attr.aria-label]=\\\"ariaText\\\" class=\\\"ui-table-sort-icon\\\">\\n            <i class=\\\"ui-sortable-column-icon pi pi-fw\\\" [ngClass]=\\\"{'pi-sort-up': sortOrder === 1, 'pi-sort-down': sortOrder === -1, 'pi-sort': sortOrder === 0}\\\"></i>\\n        </a>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table])\r\n    ], SortIcon);\r\n    return SortIcon;\r\n}());\r\nexports.SortIcon = SortIcon;\r\nvar SelectableRow = /** @class */ (function () {\r\n    function SelectableRow(dt, domHandler, tableService) {\r\n        var _this = this;\r\n        this.dt = dt;\r\n        this.domHandler = domHandler;\r\n        this.tableService = tableService;\r\n        if (this.isEnabled()) {\r\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\r\n                _this.selected = _this.dt.isSelected(_this.data);\r\n            });\r\n        }\r\n    }\r\n    SelectableRow.prototype.ngOnInit = function () {\r\n        if (this.isEnabled()) {\r\n            this.selected = this.dt.isSelected(this.data);\r\n        }\r\n    };\r\n    SelectableRow.prototype.onClick = function (event) {\r\n        if (this.isEnabled()) {\r\n            this.dt.handleRowClick({\r\n                originalEvent: event,\r\n                rowData: this.data,\r\n                rowIndex: this.index\r\n            });\r\n        }\r\n    };\r\n    SelectableRow.prototype.onTouchEnd = function (event) {\r\n        if (this.isEnabled()) {\r\n            this.dt.handleRowTouchEnd(event);\r\n        }\r\n    };\r\n    SelectableRow.prototype.isEnabled = function () {\r\n        return this.pSelectableRowDisabled !== true;\r\n    };\r\n    SelectableRow.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"pSelectableRow\"),\r\n        __metadata(\"design:type\", Object)\r\n    ], SelectableRow.prototype, \"data\", void 0);\r\n    __decorate([\r\n        core_1.Input(\"pSelectableRowIndex\"),\r\n        __metadata(\"design:type\", Number)\r\n    ], SelectableRow.prototype, \"index\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], SelectableRow.prototype, \"pSelectableRowDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('click', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Event]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], SelectableRow.prototype, \"onClick\", null);\r\n    __decorate([\r\n        core_1.HostListener('touchend', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Event]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], SelectableRow.prototype, \"onTouchEnd\", null);\r\n    SelectableRow = __decorate([\r\n        core_1.Directive({\r\n            selector: '[pSelectableRow]',\r\n            providers: [domhandler_1.DomHandler],\r\n            host: {\r\n                '[class.ui-state-highlight]': 'selected'\r\n            }\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table, domhandler_1.DomHandler, TableService])\r\n    ], SelectableRow);\r\n    return SelectableRow;\r\n}());\r\nexports.SelectableRow = SelectableRow;\r\nvar SelectableRowDblClick = /** @class */ (function () {\r\n    function SelectableRowDblClick(dt, domHandler, tableService) {\r\n        var _this = this;\r\n        this.dt = dt;\r\n        this.domHandler = domHandler;\r\n        this.tableService = tableService;\r\n        if (this.isEnabled()) {\r\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\r\n                _this.selected = _this.dt.isSelected(_this.data);\r\n            });\r\n        }\r\n    }\r\n    SelectableRowDblClick.prototype.ngOnInit = function () {\r\n        if (this.isEnabled()) {\r\n            this.selected = this.dt.isSelected(this.data);\r\n        }\r\n    };\r\n    SelectableRowDblClick.prototype.onClick = function (event) {\r\n        if (this.isEnabled()) {\r\n            this.dt.handleRowClick({\r\n                originalEvent: event,\r\n                rowData: this.data,\r\n                rowIndex: this.index\r\n            });\r\n        }\r\n    };\r\n    SelectableRowDblClick.prototype.isEnabled = function () {\r\n        return this.pSelectableRowDisabled !== true;\r\n    };\r\n    SelectableRowDblClick.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"pSelectableRowDblClick\"),\r\n        __metadata(\"design:type\", Object)\r\n    ], SelectableRowDblClick.prototype, \"data\", void 0);\r\n    __decorate([\r\n        core_1.Input(\"pSelectableRowIndex\"),\r\n        __metadata(\"design:type\", Number)\r\n    ], SelectableRowDblClick.prototype, \"index\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], SelectableRowDblClick.prototype, \"pSelectableRowDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('dblclick', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Event]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], SelectableRowDblClick.prototype, \"onClick\", null);\r\n    SelectableRowDblClick = __decorate([\r\n        core_1.Directive({\r\n            selector: '[pSelectableRowDblClick]',\r\n            providers: [domhandler_1.DomHandler],\r\n            host: {\r\n                '[class.ui-state-highlight]': 'selected'\r\n            }\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table, domhandler_1.DomHandler, TableService])\r\n    ], SelectableRowDblClick);\r\n    return SelectableRowDblClick;\r\n}());\r\nexports.SelectableRowDblClick = SelectableRowDblClick;\r\nvar ContextMenuRow = /** @class */ (function () {\r\n    function ContextMenuRow(dt, tableService) {\r\n        var _this = this;\r\n        this.dt = dt;\r\n        this.tableService = tableService;\r\n        if (this.isEnabled()) {\r\n            this.subscription = this.dt.tableService.contextMenuSource$.subscribe(function (data) {\r\n                _this.selected = _this.dt.equals(_this.data, data);\r\n            });\r\n        }\r\n    }\r\n    ContextMenuRow.prototype.onContextMenu = function (event) {\r\n        if (this.isEnabled()) {\r\n            this.dt.handleRowRightClick({\r\n                originalEvent: event,\r\n                rowData: this.data\r\n            });\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    ContextMenuRow.prototype.isEnabled = function () {\r\n        return this.pContextMenuRowDisabled !== true;\r\n    };\r\n    ContextMenuRow.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"pContextMenuRow\"),\r\n        __metadata(\"design:type\", Object)\r\n    ], ContextMenuRow.prototype, \"data\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], ContextMenuRow.prototype, \"pContextMenuRowDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('contextmenu', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Event]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], ContextMenuRow.prototype, \"onContextMenu\", null);\r\n    ContextMenuRow = __decorate([\r\n        core_1.Directive({\r\n            selector: '[pContextMenuRow]',\r\n            host: {\r\n                '[class.ui-contextmenu-selected]': 'selected'\r\n            }\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table, TableService])\r\n    ], ContextMenuRow);\r\n    return ContextMenuRow;\r\n}());\r\nexports.ContextMenuRow = ContextMenuRow;\r\nvar RowToggler = /** @class */ (function () {\r\n    function RowToggler(dt) {\r\n        this.dt = dt;\r\n    }\r\n    RowToggler.prototype.onClick = function (event) {\r\n        if (this.isEnabled()) {\r\n            this.dt.toggleRow(this.data, event);\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    RowToggler.prototype.isEnabled = function () {\r\n        return this.pRowTogglerDisabled !== true;\r\n    };\r\n    __decorate([\r\n        core_1.Input('pRowToggler'),\r\n        __metadata(\"design:type\", Object)\r\n    ], RowToggler.prototype, \"data\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], RowToggler.prototype, \"pRowTogglerDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('click', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Event]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], RowToggler.prototype, \"onClick\", null);\r\n    RowToggler = __decorate([\r\n        core_1.Directive({\r\n            selector: '[pRowToggler]'\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table])\r\n    ], RowToggler);\r\n    return RowToggler;\r\n}());\r\nexports.RowToggler = RowToggler;\r\nvar ResizableColumn = /** @class */ (function () {\r\n    function ResizableColumn(dt, el, domHandler, zone) {\r\n        this.dt = dt;\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.zone = zone;\r\n    }\r\n    ResizableColumn.prototype.ngAfterViewInit = function () {\r\n        var _this = this;\r\n        if (this.isEnabled()) {\r\n            this.domHandler.addClass(this.el.nativeElement, 'ui-resizable-column');\r\n            this.resizer = document.createElement('span');\r\n            this.resizer.className = 'ui-column-resizer ui-clickable';\r\n            this.el.nativeElement.appendChild(this.resizer);\r\n            this.zone.runOutsideAngular(function () {\r\n                _this.resizerMouseDownListener = _this.onMouseDown.bind(_this);\r\n                _this.resizer.addEventListener('mousedown', _this.resizerMouseDownListener);\r\n            });\r\n        }\r\n    };\r\n    ResizableColumn.prototype.bindDocumentEvents = function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular(function () {\r\n            _this.documentMouseMoveListener = _this.onDocumentMouseMove.bind(_this);\r\n            document.addEventListener('mousemove', _this.documentMouseMoveListener);\r\n            _this.documentMouseUpListener = _this.onDocumentMouseUp.bind(_this);\r\n            document.addEventListener('mouseup', _this.documentMouseUpListener);\r\n        });\r\n    };\r\n    ResizableColumn.prototype.unbindDocumentEvents = function () {\r\n        if (this.documentMouseMoveListener) {\r\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\r\n            this.documentMouseMoveListener = null;\r\n        }\r\n        if (this.documentMouseUpListener) {\r\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\r\n            this.documentMouseUpListener = null;\r\n        }\r\n    };\r\n    ResizableColumn.prototype.onMouseDown = function (event) {\r\n        this.dt.onColumnResizeBegin(event);\r\n        this.bindDocumentEvents();\r\n    };\r\n    ResizableColumn.prototype.onDocumentMouseMove = function (event) {\r\n        this.dt.onColumnResize(event);\r\n    };\r\n    ResizableColumn.prototype.onDocumentMouseUp = function (event) {\r\n        this.dt.onColumnResizeEnd(event, this.el.nativeElement);\r\n        this.unbindDocumentEvents();\r\n    };\r\n    ResizableColumn.prototype.isEnabled = function () {\r\n        return this.pResizableColumnDisabled !== true;\r\n    };\r\n    ResizableColumn.prototype.ngOnDestroy = function () {\r\n        if (this.resizerMouseDownListener) {\r\n            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\r\n        }\r\n        this.unbindDocumentEvents();\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], ResizableColumn.prototype, \"pResizableColumnDisabled\", void 0);\r\n    ResizableColumn = __decorate([\r\n        core_1.Directive({\r\n            selector: '[pResizableColumn]'\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])\r\n    ], ResizableColumn);\r\n    return ResizableColumn;\r\n}());\r\nexports.ResizableColumn = ResizableColumn;\r\nvar ReorderableColumn = /** @class */ (function () {\r\n    function ReorderableColumn(dt, el, domHandler, zone) {\r\n        this.dt = dt;\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.zone = zone;\r\n    }\r\n    ReorderableColumn.prototype.ngAfterViewInit = function () {\r\n        if (this.isEnabled()) {\r\n            this.bindEvents();\r\n        }\r\n    };\r\n    ReorderableColumn.prototype.bindEvents = function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular(function () {\r\n            _this.mouseDownListener = _this.onMouseDown.bind(_this);\r\n            _this.el.nativeElement.addEventListener('mousedown', _this.mouseDownListener);\r\n            _this.dragStartListener = _this.onDragStart.bind(_this);\r\n            _this.el.nativeElement.addEventListener('dragstart', _this.dragStartListener);\r\n            _this.dragOverListener = _this.onDragEnter.bind(_this);\r\n            _this.el.nativeElement.addEventListener('dragover', _this.dragOverListener);\r\n            _this.dragEnterListener = _this.onDragEnter.bind(_this);\r\n            _this.el.nativeElement.addEventListener('dragenter', _this.dragEnterListener);\r\n            _this.dragLeaveListener = _this.onDragLeave.bind(_this);\r\n            _this.el.nativeElement.addEventListener('dragleave', _this.dragLeaveListener);\r\n        });\r\n    };\r\n    ReorderableColumn.prototype.unbindEvents = function () {\r\n        if (this.mouseDownListener) {\r\n            document.removeEventListener('mousedown', this.mouseDownListener);\r\n            this.mouseDownListener = null;\r\n        }\r\n        if (this.dragOverListener) {\r\n            document.removeEventListener('dragover', this.dragOverListener);\r\n            this.dragOverListener = null;\r\n        }\r\n        if (this.dragEnterListener) {\r\n            document.removeEventListener('dragenter', this.dragEnterListener);\r\n            this.dragEnterListener = null;\r\n        }\r\n        if (this.dragEnterListener) {\r\n            document.removeEventListener('dragenter', this.dragEnterListener);\r\n            this.dragEnterListener = null;\r\n        }\r\n        if (this.dragLeaveListener) {\r\n            document.removeEventListener('dragleave', this.dragLeaveListener);\r\n            this.dragLeaveListener = null;\r\n        }\r\n    };\r\n    ReorderableColumn.prototype.onMouseDown = function (event) {\r\n        if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || this.domHandler.hasClass(event.target, 'ui-column-resizer'))\r\n            this.el.nativeElement.draggable = false;\r\n        else\r\n            this.el.nativeElement.draggable = true;\r\n    };\r\n    ReorderableColumn.prototype.onDragStart = function (event) {\r\n        this.dt.onColumnDragStart(event, this.el.nativeElement);\r\n    };\r\n    ReorderableColumn.prototype.onDragOver = function (event) {\r\n        event.preventDefault();\r\n    };\r\n    ReorderableColumn.prototype.onDragEnter = function (event) {\r\n        this.dt.onColumnDragEnter(event, this.el.nativeElement);\r\n    };\r\n    ReorderableColumn.prototype.onDragLeave = function (event) {\r\n        this.dt.onColumnDragLeave(event);\r\n    };\r\n    ReorderableColumn.prototype.onDrop = function (event) {\r\n        if (this.isEnabled()) {\r\n            this.dt.onColumnDrop(event, this.el.nativeElement);\r\n        }\r\n    };\r\n    ReorderableColumn.prototype.isEnabled = function () {\r\n        return this.pReorderableColumnDisabled !== true;\r\n    };\r\n    ReorderableColumn.prototype.ngOnDestroy = function () {\r\n        this.unbindEvents();\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], ReorderableColumn.prototype, \"pReorderableColumnDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('drop', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], ReorderableColumn.prototype, \"onDrop\", null);\r\n    ReorderableColumn = __decorate([\r\n        core_1.Directive({\r\n            selector: '[pReorderableColumn]'\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])\r\n    ], ReorderableColumn);\r\n    return ReorderableColumn;\r\n}());\r\nexports.ReorderableColumn = ReorderableColumn;\r\nvar EditableColumn = /** @class */ (function () {\r\n    function EditableColumn(dt, el, domHandler, zone) {\r\n        this.dt = dt;\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.zone = zone;\r\n    }\r\n    EditableColumn.prototype.ngAfterViewInit = function () {\r\n        if (this.isEnabled()) {\r\n            this.domHandler.addClass(this.el.nativeElement, 'ui-editable-column');\r\n        }\r\n    };\r\n    EditableColumn.prototype.isValid = function () {\r\n        return (this.dt.editingCell && this.domHandler.find(this.dt.editingCell, '.ng-invalid.ng-dirty').length === 0);\r\n    };\r\n    EditableColumn.prototype.onClick = function (event) {\r\n        if (this.isEnabled()) {\r\n            if (this.dt.editingCell) {\r\n                if (this.dt.editingCell !== this.el.nativeElement) {\r\n                    if (!this.isValid()) {\r\n                        return;\r\n                    }\r\n                    this.domHandler.removeClass(this.dt.editingCell, 'ui-editing-cell');\r\n                    this.openCell();\r\n                }\r\n            }\r\n            else {\r\n                this.openCell();\r\n            }\r\n        }\r\n    };\r\n    EditableColumn.prototype.openCell = function () {\r\n        var _this = this;\r\n        this.dt.editingCell = this.el.nativeElement;\r\n        this.domHandler.addClass(this.el.nativeElement, 'ui-editing-cell');\r\n        this.dt.onEditInit.emit({ field: this.field, data: this.data });\r\n        this.zone.runOutsideAngular(function () {\r\n            setTimeout(function () {\r\n                var focusable = _this.domHandler.findSingle(_this.el.nativeElement, 'input, textarea');\r\n                if (focusable) {\r\n                    focusable.focus();\r\n                }\r\n            }, 50);\r\n        });\r\n    };\r\n    EditableColumn.prototype.closeEditingCell = function () {\r\n        this.domHandler.removeClass(this.dt.editingCell, 'ui-editing-cell');\r\n        this.dt.editingCell = null;\r\n    };\r\n    EditableColumn.prototype.onKeyDown = function (event) {\r\n        if (this.isEnabled()) {\r\n            //enter\r\n            if (event.keyCode == 13) {\r\n                if (this.isValid()) {\r\n                    this.closeEditingCell();\r\n                    this.dt.onEditComplete.emit({ field: this.field, data: this.data });\r\n                }\r\n                event.preventDefault();\r\n            }\r\n            else if (event.keyCode == 27) {\r\n                if (this.isValid()) {\r\n                    this.closeEditingCell();\r\n                    this.dt.onEditCancel.emit({ field: this.field, data: this.data });\r\n                }\r\n                event.preventDefault();\r\n            }\r\n            else if (event.keyCode == 9) {\r\n                this.dt.onEditComplete.emit({ field: this.field, data: this.data });\r\n                if (event.shiftKey)\r\n                    this.moveToPreviousCell(event);\r\n                else\r\n                    this.moveToNextCell(event);\r\n            }\r\n        }\r\n    };\r\n    EditableColumn.prototype.findCell = function (element) {\r\n        if (element) {\r\n            var cell = element;\r\n            while (cell && !this.domHandler.hasClass(cell, 'ui-editing-cell')) {\r\n                cell = cell.parentElement;\r\n            }\r\n            return cell;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    EditableColumn.prototype.moveToPreviousCell = function (event) {\r\n        var currentCell = this.findCell(event.target);\r\n        var row = currentCell.parentElement;\r\n        var targetCell = this.findPreviousEditableColumn(currentCell);\r\n        if (targetCell) {\r\n            this.domHandler.invokeElementMethod(event.target, 'blur');\r\n            this.domHandler.invokeElementMethod(targetCell, 'click');\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    EditableColumn.prototype.moveToNextCell = function (event) {\r\n        var currentCell = this.findCell(event.target);\r\n        var row = currentCell.parentElement;\r\n        var targetCell = this.findNextEditableColumn(currentCell);\r\n        if (targetCell) {\r\n            this.domHandler.invokeElementMethod(event.target, 'blur');\r\n            this.domHandler.invokeElementMethod(targetCell, 'click');\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    EditableColumn.prototype.findPreviousEditableColumn = function (cell) {\r\n        var prevCell = cell.previousElementSibling;\r\n        if (!prevCell) {\r\n            var previousRow = cell.parentElement.previousElementSibling;\r\n            if (previousRow) {\r\n                prevCell = previousRow.lastElementChild;\r\n            }\r\n        }\r\n        if (prevCell) {\r\n            if (this.domHandler.hasClass(prevCell, 'ui-editable-column'))\r\n                return prevCell;\r\n            else\r\n                return this.findPreviousEditableColumn(prevCell);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    EditableColumn.prototype.findNextEditableColumn = function (cell) {\r\n        var nextCell = cell.nextElementSibling;\r\n        if (!nextCell) {\r\n            var nextRow = cell.parentElement.nextElementSibling;\r\n            if (nextRow) {\r\n                nextCell = nextRow.firstElementChild;\r\n            }\r\n        }\r\n        if (nextCell) {\r\n            if (this.domHandler.hasClass(nextCell, 'ui-editable-column'))\r\n                return nextCell;\r\n            else\r\n                return this.findNextEditableColumn(nextCell);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    EditableColumn.prototype.isEnabled = function () {\r\n        return this.pEditableColumnDisabled !== true;\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"pEditableColumn\"),\r\n        __metadata(\"design:type\", Object)\r\n    ], EditableColumn.prototype, \"data\", void 0);\r\n    __decorate([\r\n        core_1.Input(\"pEditableColumnField\"),\r\n        __metadata(\"design:type\", Object)\r\n    ], EditableColumn.prototype, \"field\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], EditableColumn.prototype, \"pEditableColumnDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('click', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [MouseEvent]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], EditableColumn.prototype, \"onClick\", null);\r\n    __decorate([\r\n        core_1.HostListener('keydown', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [KeyboardEvent]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], EditableColumn.prototype, \"onKeyDown\", null);\r\n    EditableColumn = __decorate([\r\n        core_1.Directive({\r\n            selector: '[pEditableColumn]'\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])\r\n    ], EditableColumn);\r\n    return EditableColumn;\r\n}());\r\nexports.EditableColumn = EditableColumn;\r\nvar CellEditor = /** @class */ (function () {\r\n    function CellEditor(dt, editableColumn) {\r\n        this.dt = dt;\r\n        this.editableColumn = editableColumn;\r\n    }\r\n    CellEditor.prototype.ngAfterContentInit = function () {\r\n        var _this = this;\r\n        this.templates.forEach(function (item) {\r\n            switch (item.getType()) {\r\n                case 'input':\r\n                    _this.inputTemplate = item.template;\r\n                    break;\r\n                case 'output':\r\n                    _this.outputTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    __decorate([\r\n        core_1.ContentChildren(shared_1.PrimeTemplate),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], CellEditor.prototype, \"templates\", void 0);\r\n    CellEditor = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-cellEditor',\r\n            template: \"\\n        <ng-container *ngIf=\\\"dt.editingCell === editableColumn.el.nativeElement\\\">\\n            <ng-container *ngTemplateOutlet=\\\"inputTemplate\\\"></ng-container>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"!dt.editingCell || dt.editingCell !== editableColumn.el.nativeElement\\\">\\n            <ng-container *ngTemplateOutlet=\\\"outputTemplate\\\"></ng-container>\\n        </ng-container>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table, EditableColumn])\r\n    ], CellEditor);\r\n    return CellEditor;\r\n}());\r\nexports.CellEditor = CellEditor;\r\nvar TableRadioButton = /** @class */ (function () {\r\n    function TableRadioButton(dt, domHandler, tableService) {\r\n        var _this = this;\r\n        this.dt = dt;\r\n        this.domHandler = domHandler;\r\n        this.tableService = tableService;\r\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\r\n            _this.checked = _this.dt.isSelected(_this.value);\r\n        });\r\n    }\r\n    TableRadioButton.prototype.ngOnInit = function () {\r\n        this.checked = this.dt.isSelected(this.value);\r\n    };\r\n    TableRadioButton.prototype.onClick = function (event) {\r\n        if (!this.disabled) {\r\n            this.dt.toggleRowWithRadio({\r\n                originalEvent: event,\r\n                rowIndex: this.index\r\n            }, this.value);\r\n        }\r\n        this.domHandler.clearSelection();\r\n    };\r\n    TableRadioButton.prototype.onFocus = function () {\r\n        this.domHandler.addClass(this.boxViewChild.nativeElement, 'ui-state-focus');\r\n    };\r\n    TableRadioButton.prototype.onBlur = function () {\r\n        this.domHandler.removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');\r\n    };\r\n    TableRadioButton.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TableRadioButton.prototype, \"disabled\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], TableRadioButton.prototype, \"value\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], TableRadioButton.prototype, \"index\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('box'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TableRadioButton.prototype, \"boxViewChild\", void 0);\r\n    TableRadioButton = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-tableRadioButton',\r\n            template: \"\\n        <div class=\\\"ui-radiobutton ui-widget\\\" (click)=\\\"onClick($event)\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input type=\\\"radio\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\" [disabled]=\\\"disabled\\\">\\n            </div>\\n            <div #box [ngClass]=\\\"{'ui-radiobutton-box ui-widget ui-state-default':true,\\n                'ui-state-active':checked, 'ui-state-disabled':disabled}\\\">\\n                <span class=\\\"ui-radiobutton-icon ui-clickable\\\" [ngClass]=\\\"{'pi pi-circle-on':checked}\\\"></span>\\n            </div>\\n        </div>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table, domhandler_1.DomHandler, TableService])\r\n    ], TableRadioButton);\r\n    return TableRadioButton;\r\n}());\r\nexports.TableRadioButton = TableRadioButton;\r\nvar TableCheckbox = /** @class */ (function () {\r\n    function TableCheckbox(dt, domHandler, tableService) {\r\n        var _this = this;\r\n        this.dt = dt;\r\n        this.domHandler = domHandler;\r\n        this.tableService = tableService;\r\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\r\n            _this.checked = _this.dt.isSelected(_this.value);\r\n        });\r\n    }\r\n    TableCheckbox.prototype.ngOnInit = function () {\r\n        this.checked = this.dt.isSelected(this.value);\r\n    };\r\n    TableCheckbox.prototype.onClick = function (event) {\r\n        if (!this.disabled) {\r\n            this.dt.toggleRowWithCheckbox({\r\n                originalEvent: event,\r\n                rowIndex: this.index\r\n            }, this.value);\r\n        }\r\n        this.domHandler.clearSelection();\r\n    };\r\n    TableCheckbox.prototype.onFocus = function () {\r\n        this.domHandler.addClass(this.boxViewChild.nativeElement, 'ui-state-focus');\r\n    };\r\n    TableCheckbox.prototype.onBlur = function () {\r\n        this.domHandler.removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');\r\n    };\r\n    TableCheckbox.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TableCheckbox.prototype, \"disabled\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], TableCheckbox.prototype, \"value\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], TableCheckbox.prototype, \"index\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('box'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TableCheckbox.prototype, \"boxViewChild\", void 0);\r\n    TableCheckbox = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-tableCheckbox',\r\n            template: \"\\n        <div class=\\\"ui-chkbox ui-widget\\\" (click)=\\\"onClick($event)\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input type=\\\"checkbox\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\" [disabled]=\\\"disabled\\\">\\n            </div>\\n            <div #box [ngClass]=\\\"{'ui-chkbox-box ui-widget ui-state-default':true,\\n                'ui-state-active':checked, 'ui-state-disabled':disabled}\\\">\\n                <span class=\\\"ui-chkbox-icon ui-clickable\\\" [ngClass]=\\\"{'pi pi-check':checked}\\\"></span>\\n            </div>\\n        </div>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table, domhandler_1.DomHandler, TableService])\r\n    ], TableCheckbox);\r\n    return TableCheckbox;\r\n}());\r\nexports.TableCheckbox = TableCheckbox;\r\nvar TableHeaderCheckbox = /** @class */ (function () {\r\n    function TableHeaderCheckbox(dt, domHandler, tableService) {\r\n        var _this = this;\r\n        this.dt = dt;\r\n        this.domHandler = domHandler;\r\n        this.tableService = tableService;\r\n        this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(function () {\r\n            _this.checked = _this.updateCheckedState();\r\n        });\r\n        this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(function () {\r\n            _this.checked = _this.updateCheckedState();\r\n        });\r\n    }\r\n    TableHeaderCheckbox.prototype.ngOnInit = function () {\r\n        this.checked = this.updateCheckedState();\r\n    };\r\n    TableHeaderCheckbox.prototype.onClick = function (event, checked) {\r\n        if (!this.disabled) {\r\n            if (this.dt.value && this.dt.value.length > 0) {\r\n                this.dt.toggleRowsWithCheckbox(event, !checked);\r\n            }\r\n        }\r\n        this.domHandler.clearSelection();\r\n    };\r\n    TableHeaderCheckbox.prototype.onFocus = function () {\r\n        this.domHandler.addClass(this.boxViewChild.nativeElement, 'ui-state-focus');\r\n    };\r\n    TableHeaderCheckbox.prototype.onBlur = function () {\r\n        this.domHandler.removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');\r\n    };\r\n    TableHeaderCheckbox.prototype.isDisabled = function () {\r\n        return this.disabled || !this.dt.value || !this.dt.value.length;\r\n    };\r\n    TableHeaderCheckbox.prototype.ngOnDestroy = function () {\r\n        if (this.selectionChangeSubscription) {\r\n            this.selectionChangeSubscription.unsubscribe();\r\n        }\r\n        if (this.valueChangeSubscription) {\r\n            this.valueChangeSubscription.unsubscribe();\r\n        }\r\n    };\r\n    TableHeaderCheckbox.prototype.updateCheckedState = function () {\r\n        var val = this.dt.filteredValue || this.dt.value;\r\n        return (val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.dt.selection.length === val.length);\r\n    };\r\n    __decorate([\r\n        core_1.ViewChild('box'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TableHeaderCheckbox.prototype, \"boxViewChild\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TableHeaderCheckbox.prototype, \"disabled\", void 0);\r\n    TableHeaderCheckbox = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-tableHeaderCheckbox',\r\n            template: \"\\n        <div class=\\\"ui-chkbox ui-widget\\\" (click)=\\\"onClick($event, cb.checked)\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #cb type=\\\"checkbox\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\" [disabled]=\\\"isDisabled()\\\">\\n            </div>\\n            <div #box [ngClass]=\\\"{'ui-chkbox-box ui-widget ui-state-default':true,\\n                'ui-state-active':checked, 'ui-state-disabled': isDisabled()}\\\">\\n                <span class=\\\"ui-chkbox-icon ui-clickable\\\" [ngClass]=\\\"{'pi pi-check':checked}\\\"></span>\\n            </div>\\n        </div>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table, domhandler_1.DomHandler, TableService])\r\n    ], TableHeaderCheckbox);\r\n    return TableHeaderCheckbox;\r\n}());\r\nexports.TableHeaderCheckbox = TableHeaderCheckbox;\r\nvar ReorderableRowHandle = /** @class */ (function () {\r\n    function ReorderableRowHandle(el, domHandler) {\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n    }\r\n    ReorderableRowHandle.prototype.ngAfterViewInit = function () {\r\n        this.domHandler.addClass(this.el.nativeElement, 'ui-table-reorderablerow-handle');\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"pReorderableRowHandle\"),\r\n        __metadata(\"design:type\", Number)\r\n    ], ReorderableRowHandle.prototype, \"index\", void 0);\r\n    ReorderableRowHandle = __decorate([\r\n        core_1.Directive({\r\n            selector: '[pReorderableRowHandle]'\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler])\r\n    ], ReorderableRowHandle);\r\n    return ReorderableRowHandle;\r\n}());\r\nexports.ReorderableRowHandle = ReorderableRowHandle;\r\nvar ReorderableRow = /** @class */ (function () {\r\n    function ReorderableRow(dt, el, domHandler, zone) {\r\n        this.dt = dt;\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.zone = zone;\r\n    }\r\n    ReorderableRow.prototype.ngAfterViewInit = function () {\r\n        if (this.isEnabled()) {\r\n            this.el.nativeElement.droppable = true;\r\n            this.bindEvents();\r\n        }\r\n    };\r\n    ReorderableRow.prototype.bindEvents = function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular(function () {\r\n            _this.mouseDownListener = _this.onMouseDown.bind(_this);\r\n            _this.el.nativeElement.addEventListener('mousedown', _this.mouseDownListener);\r\n            _this.dragStartListener = _this.onDragStart.bind(_this);\r\n            _this.el.nativeElement.addEventListener('dragstart', _this.dragStartListener);\r\n            _this.dragEndListener = _this.onDragEnd.bind(_this);\r\n            _this.el.nativeElement.addEventListener('dragend', _this.dragEndListener);\r\n            _this.dragOverListener = _this.onDragOver.bind(_this);\r\n            _this.el.nativeElement.addEventListener('dragover', _this.dragOverListener);\r\n            _this.dragLeaveListener = _this.onDragLeave.bind(_this);\r\n            _this.el.nativeElement.addEventListener('dragleave', _this.dragLeaveListener);\r\n        });\r\n    };\r\n    ReorderableRow.prototype.unbindEvents = function () {\r\n        if (this.mouseDownListener) {\r\n            document.removeEventListener('mousedown', this.mouseDownListener);\r\n            this.mouseDownListener = null;\r\n        }\r\n        if (this.dragStartListener) {\r\n            document.removeEventListener('dragstart', this.dragStartListener);\r\n            this.dragStartListener = null;\r\n        }\r\n        if (this.dragEndListener) {\r\n            document.removeEventListener('dragend', this.dragEndListener);\r\n            this.dragEndListener = null;\r\n        }\r\n        if (this.dragOverListener) {\r\n            document.removeEventListener('dragover', this.dragOverListener);\r\n            this.dragOverListener = null;\r\n        }\r\n        if (this.dragLeaveListener) {\r\n            document.removeEventListener('dragleave', this.dragLeaveListener);\r\n            this.dragLeaveListener = null;\r\n        }\r\n    };\r\n    ReorderableRow.prototype.onMouseDown = function (event) {\r\n        if (this.domHandler.hasClass(event.target, 'ui-table-reorderablerow-handle'))\r\n            this.el.nativeElement.draggable = true;\r\n        else\r\n            this.el.nativeElement.draggable = false;\r\n    };\r\n    ReorderableRow.prototype.onDragStart = function (event) {\r\n        this.dt.onRowDragStart(event, this.index);\r\n    };\r\n    ReorderableRow.prototype.onDragEnd = function (event) {\r\n        this.dt.onRowDragEnd(event);\r\n        this.el.nativeElement.draggable = false;\r\n    };\r\n    ReorderableRow.prototype.onDragOver = function (event) {\r\n        this.dt.onRowDragOver(event, this.index, this.el.nativeElement);\r\n        event.preventDefault();\r\n    };\r\n    ReorderableRow.prototype.onDragLeave = function (event) {\r\n        this.dt.onRowDragLeave(event, this.el.nativeElement);\r\n    };\r\n    ReorderableRow.prototype.isEnabled = function () {\r\n        return this.pReorderableRowDisabled !== true;\r\n    };\r\n    ReorderableRow.prototype.onDrop = function (event) {\r\n        if (this.isEnabled() && this.dt.rowDragging) {\r\n            this.dt.onRowDrop(event, this.el.nativeElement);\r\n        }\r\n        event.preventDefault();\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"pReorderableRow\"),\r\n        __metadata(\"design:type\", Number)\r\n    ], ReorderableRow.prototype, \"index\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], ReorderableRow.prototype, \"pReorderableRowDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('drop', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], ReorderableRow.prototype, \"onDrop\", null);\r\n    ReorderableRow = __decorate([\r\n        core_1.Directive({\r\n            selector: '[pReorderableRow]'\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Table, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])\r\n    ], ReorderableRow);\r\n    return ReorderableRow;\r\n}());\r\nexports.ReorderableRow = ReorderableRow;\r\nvar TableModule = /** @class */ (function () {\r\n    function TableModule() {\r\n    }\r\n    TableModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule, paginator_1.PaginatorModule],\r\n            exports: [Table, shared_1.SharedModule, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick],\r\n            declarations: [Table, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, ScrollableView, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick]\r\n        })\r\n    ], TableModule);\r\n    return TableModule;\r\n}());\r\nexports.TableModule = TableModule;\r\n//# sourceMappingURL=table.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/table/table.js\n// module id = 1435\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar animations_1 = require(\"@angular/animations\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar shared_1 = require(\"../common/shared\");\r\nvar domhandler_1 = require(\"../dom/domhandler\");\r\nvar objectutils_1 = require(\"../utils/objectutils\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nexports.DROPDOWN_VALUE_ACCESSOR = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return Dropdown; }),\r\n    multi: true\r\n};\r\nvar Dropdown = /** @class */ (function () {\r\n    function Dropdown(el, domHandler, renderer, cd, objectUtils, zone) {\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.renderer = renderer;\r\n        this.cd = cd;\r\n        this.objectUtils = objectUtils;\r\n        this.zone = zone;\r\n        this.scrollHeight = '200px';\r\n        this.autoWidth = true;\r\n        this.filterBy = 'label';\r\n        this.resetFilterOnHide = false;\r\n        this.dropdownIcon = 'pi pi-caret-down';\r\n        this.autoDisplayFirst = true;\r\n        this.emptyFilterMessage = 'No results found';\r\n        this.autoZIndex = true;\r\n        this.baseZIndex = 0;\r\n        this.showTransitionOptions = '225ms ease-out';\r\n        this.hideTransitionOptions = '195ms ease-in';\r\n        this.onChange = new core_1.EventEmitter();\r\n        this.onFocus = new core_1.EventEmitter();\r\n        this.onBlur = new core_1.EventEmitter();\r\n        this.onClick = new core_1.EventEmitter();\r\n        this.onShow = new core_1.EventEmitter();\r\n        this.onHide = new core_1.EventEmitter();\r\n        this.onModelChange = function () { };\r\n        this.onModelTouched = function () { };\r\n    }\r\n    Dropdown.prototype.ngAfterContentInit = function () {\r\n        var _this = this;\r\n        this.templates.forEach(function (item) {\r\n            switch (item.getType()) {\r\n                case 'item':\r\n                    _this.itemTemplate = item.template;\r\n                    break;\r\n                case 'selectedItem':\r\n                    _this.selectedItemTemplate = item.template;\r\n                    break;\r\n                case 'group':\r\n                    _this.groupTemplate = item.template;\r\n                    break;\r\n                default:\r\n                    _this.itemTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    Dropdown.prototype.ngOnInit = function () {\r\n        this.optionsToDisplay = this.options;\r\n        this.updateSelectedOption(null);\r\n    };\r\n    Object.defineProperty(Dropdown.prototype, \"options\", {\r\n        get: function () {\r\n            return this._options;\r\n        },\r\n        set: function (val) {\r\n            var opts = this.optionLabel ? this.objectUtils.generateSelectItems(val, this.optionLabel) : val;\r\n            this._options = opts;\r\n            this.optionsToDisplay = this._options;\r\n            this.updateSelectedOption(this.value);\r\n            this.optionsChanged = true;\r\n            if (this.filterValue && this.filterValue.length) {\r\n                this.activateFilter();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Dropdown.prototype.ngAfterViewInit = function () {\r\n        if (this.editable) {\r\n            this.updateEditableLabel();\r\n        }\r\n        this.updateDimensions();\r\n    };\r\n    Object.defineProperty(Dropdown.prototype, \"label\", {\r\n        get: function () {\r\n            return (this.selectedOption ? this.selectedOption.label : null);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Dropdown.prototype.updateEditableLabel = function () {\r\n        if (this.editableInputViewChild && this.editableInputViewChild.nativeElement) {\r\n            this.editableInputViewChild.nativeElement.value = (this.selectedOption ? this.selectedOption.label : this.value || '');\r\n        }\r\n    };\r\n    Dropdown.prototype.onItemClick = function (event, option) {\r\n        var _this = this;\r\n        this.itemClick = true;\r\n        if (!option.disabled) {\r\n            this.selectItem(event, option);\r\n            this.focusViewChild.nativeElement.focus();\r\n            this.filled = true;\r\n        }\r\n        setTimeout(function () {\r\n            _this.hide();\r\n        }, 150);\r\n    };\r\n    Dropdown.prototype.selectItem = function (event, option) {\r\n        if (this.selectedOption != option) {\r\n            this.selectedOption = option;\r\n            this.value = option.value;\r\n            this.onModelChange(this.value);\r\n            this.updateEditableLabel();\r\n            this.onChange.emit({\r\n                originalEvent: event,\r\n                value: this.value\r\n            });\r\n        }\r\n    };\r\n    Dropdown.prototype.ngAfterViewChecked = function () {\r\n        var _this = this;\r\n        if (this.autoWidth && !this.dimensionsUpdated) {\r\n            this.updateDimensions();\r\n        }\r\n        if (this.optionsChanged && this.overlayVisible) {\r\n            this.optionsChanged = false;\r\n            this.zone.runOutsideAngular(function () {\r\n                setTimeout(function () {\r\n                    _this.updateDimensions();\r\n                    _this.alignOverlay();\r\n                }, 1);\r\n            });\r\n        }\r\n        if (this.selectedOptionUpdated && this.itemsWrapper) {\r\n            this.updateDimensions();\r\n            var selectedItem = this.domHandler.findSingle(this.overlay, 'li.ui-state-highlight');\r\n            if (selectedItem) {\r\n                this.domHandler.scrollInView(this.itemsWrapper, this.domHandler.findSingle(this.overlay, 'li.ui-state-highlight'));\r\n            }\r\n            this.selectedOptionUpdated = false;\r\n        }\r\n    };\r\n    Dropdown.prototype.writeValue = function (value) {\r\n        if (this.filter) {\r\n            this.resetFilter();\r\n        }\r\n        this.value = value;\r\n        this.updateSelectedOption(value);\r\n        this.updateEditableLabel();\r\n        this.updateFilledState();\r\n        this.cd.markForCheck();\r\n    };\r\n    Dropdown.prototype.resetFilter = function () {\r\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\r\n            this.filterValue = null;\r\n            this.filterViewChild.nativeElement.value = '';\r\n        }\r\n        this.optionsToDisplay = this.options;\r\n    };\r\n    Dropdown.prototype.updateSelectedOption = function (val) {\r\n        this.selectedOption = this.findOption(val, this.optionsToDisplay);\r\n        if (this.autoDisplayFirst && !this.placeholder && !this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length && !this.editable) {\r\n            this.selectedOption = this.optionsToDisplay[0];\r\n        }\r\n        this.selectedOptionUpdated = true;\r\n    };\r\n    Dropdown.prototype.registerOnChange = function (fn) {\r\n        this.onModelChange = fn;\r\n    };\r\n    Dropdown.prototype.registerOnTouched = function (fn) {\r\n        this.onModelTouched = fn;\r\n    };\r\n    Dropdown.prototype.setDisabledState = function (val) {\r\n        this.disabled = val;\r\n    };\r\n    Dropdown.prototype.updateDimensions = function () {\r\n        if (this.autoWidth && this.el.nativeElement && this.el.nativeElement.children[0] && this.el.nativeElement.offsetParent) {\r\n            var select = this.domHandler.findSingle(this.el.nativeElement, 'select');\r\n            if (select && !this.style || (this.style && (!this.style['width'] && !this.style['min-width']))) {\r\n                this.el.nativeElement.children[0].style.width = select.offsetWidth + 30 + 'px';\r\n            }\r\n            this.dimensionsUpdated = true;\r\n        }\r\n    };\r\n    Dropdown.prototype.onMouseclick = function (event) {\r\n        var _this = this;\r\n        if (this.disabled || this.readonly) {\r\n            return;\r\n        }\r\n        this.onClick.emit(event);\r\n        this.selfClick = true;\r\n        this.clearClick = this.domHandler.hasClass(event.target, 'ui-dropdown-clear-icon');\r\n        if (!this.itemClick && !this.clearClick) {\r\n            this.focusViewChild.nativeElement.focus();\r\n            if (this.overlayVisible) {\r\n                this.hide();\r\n            }\r\n            else {\r\n                this.show();\r\n                setTimeout(function () {\r\n                    if (_this.filterViewChild != undefined) {\r\n                        _this.filterViewChild.nativeElement.focus();\r\n                    }\r\n                }, 200);\r\n            }\r\n        }\r\n    };\r\n    Dropdown.prototype.onEditableInputClick = function (event) {\r\n        this.itemClick = true;\r\n        this.bindDocumentClickListener();\r\n    };\r\n    Dropdown.prototype.onEditableInputFocus = function (event) {\r\n        this.focused = true;\r\n        this.hide();\r\n        this.onFocus.emit(event);\r\n    };\r\n    Dropdown.prototype.onEditableInputChange = function (event) {\r\n        this.value = event.target.value;\r\n        this.updateSelectedOption(this.value);\r\n        this.onModelChange(this.value);\r\n        this.onChange.emit({\r\n            originalEvent: event,\r\n            value: this.value\r\n        });\r\n    };\r\n    Dropdown.prototype.show = function () {\r\n        this.overlayVisible = true;\r\n    };\r\n    Dropdown.prototype.onOverlayAnimationStart = function (event) {\r\n        switch (event.toState) {\r\n            case 'visible':\r\n                this.overlay = event.element;\r\n                this.itemsWrapper = this.domHandler.findSingle(this.overlay, '.ui-dropdown-items-wrapper');\r\n                this.appendOverlay();\r\n                if (this.autoZIndex) {\r\n                    this.overlay.style.zIndex = String(this.baseZIndex + (++domhandler_1.DomHandler.zindex));\r\n                }\r\n                this.alignOverlay();\r\n                this.bindDocumentClickListener();\r\n                if (this.options && this.options.length) {\r\n                    var selectedListItem = this.domHandler.findSingle(this.itemsWrapper, '.ui-dropdown-item.ui-state-highlight');\r\n                    if (selectedListItem) {\r\n                        this.domHandler.scrollInView(this.itemsWrapper, selectedListItem);\r\n                    }\r\n                }\r\n                this.onShow.emit(event);\r\n                break;\r\n            case 'void':\r\n                this.onHide.emit(event);\r\n                this.onOverlayHide();\r\n                break;\r\n        }\r\n    };\r\n    Dropdown.prototype.appendOverlay = function () {\r\n        if (this.appendTo) {\r\n            if (this.appendTo === 'body')\r\n                document.body.appendChild(this.overlay);\r\n            else\r\n                this.domHandler.appendChild(this.overlay, this.appendTo);\r\n            this.overlay.style.minWidth = this.domHandler.getWidth(this.containerViewChild.nativeElement) + 'px';\r\n        }\r\n    };\r\n    Dropdown.prototype.restoreOverlayAppend = function () {\r\n        if (this.overlay && this.appendTo) {\r\n            this.el.nativeElement.appendChild(this.overlay);\r\n        }\r\n    };\r\n    Dropdown.prototype.hide = function () {\r\n        this.overlayVisible = false;\r\n        if (this.filter && this.resetFilterOnHide) {\r\n            this.resetFilter();\r\n        }\r\n        this.cd.markForCheck();\r\n    };\r\n    Dropdown.prototype.alignOverlay = function () {\r\n        if (this.overlay) {\r\n            if (this.appendTo)\r\n                this.domHandler.absolutePosition(this.overlay, this.containerViewChild.nativeElement);\r\n            else\r\n                this.domHandler.relativePosition(this.overlay, this.containerViewChild.nativeElement);\r\n        }\r\n    };\r\n    Dropdown.prototype.onInputFocus = function (event) {\r\n        this.focused = true;\r\n        this.onFocus.emit(event);\r\n    };\r\n    Dropdown.prototype.onInputBlur = function (event) {\r\n        this.focused = false;\r\n        this.onModelTouched();\r\n        this.onBlur.emit(event);\r\n    };\r\n    Dropdown.prototype.findPrevEnabledOption = function (index) {\r\n        var prevEnabledOption;\r\n        if (this.optionsToDisplay && this.optionsToDisplay.length) {\r\n            for (var i = (index - 1); 0 <= i; i--) {\r\n                var option = this.optionsToDisplay[i];\r\n                if (option.disabled) {\r\n                    continue;\r\n                }\r\n                else {\r\n                    prevEnabledOption = option;\r\n                    break;\r\n                }\r\n            }\r\n            if (!prevEnabledOption) {\r\n                for (var i = this.optionsToDisplay.length - 1; i >= index; i--) {\r\n                    var option = this.optionsToDisplay[i];\r\n                    if (option.disabled) {\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        prevEnabledOption = option;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return prevEnabledOption;\r\n    };\r\n    Dropdown.prototype.findNextEnabledOption = function (index) {\r\n        var nextEnabledOption;\r\n        if (this.optionsToDisplay && this.optionsToDisplay.length) {\r\n            for (var i = (index + 1); index < (this.optionsToDisplay.length - 1); i++) {\r\n                var option = this.optionsToDisplay[i];\r\n                if (option.disabled) {\r\n                    continue;\r\n                }\r\n                else {\r\n                    nextEnabledOption = option;\r\n                    break;\r\n                }\r\n            }\r\n            if (!nextEnabledOption) {\r\n                for (var i = 0; i < index; i++) {\r\n                    var option = this.optionsToDisplay[i];\r\n                    if (option.disabled) {\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        nextEnabledOption = option;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return nextEnabledOption;\r\n    };\r\n    Dropdown.prototype.onKeydown = function (event, search) {\r\n        if (this.readonly || !this.optionsToDisplay || this.optionsToDisplay.length === null) {\r\n            return;\r\n        }\r\n        switch (event.which) {\r\n            //down\r\n            case 40:\r\n                if (!this.overlayVisible && event.altKey) {\r\n                    this.show();\r\n                }\r\n                else {\r\n                    if (this.group) {\r\n                        var selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\r\n                        if (selectedItemIndex !== -1) {\r\n                            var nextItemIndex = selectedItemIndex.itemIndex + 1;\r\n                            if (nextItemIndex < (this.optionsToDisplay[selectedItemIndex.groupIndex].items.length)) {\r\n                                this.selectItem(event, this.optionsToDisplay[selectedItemIndex.groupIndex].items[nextItemIndex]);\r\n                                this.selectedOptionUpdated = true;\r\n                            }\r\n                            else if (this.optionsToDisplay[selectedItemIndex.groupIndex + 1]) {\r\n                                this.selectItem(event, this.optionsToDisplay[selectedItemIndex.groupIndex + 1].items[0]);\r\n                                this.selectedOptionUpdated = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.selectItem(event, this.optionsToDisplay[0].items[0]);\r\n                        }\r\n                    }\r\n                    else {\r\n                        var selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\r\n                        var nextEnabledOption = this.findNextEnabledOption(selectedItemIndex);\r\n                        if (nextEnabledOption) {\r\n                            this.selectItem(event, nextEnabledOption);\r\n                            this.selectedOptionUpdated = true;\r\n                        }\r\n                    }\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            //up\r\n            case 38:\r\n                if (this.group) {\r\n                    var selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\r\n                    if (selectedItemIndex !== -1) {\r\n                        var prevItemIndex = selectedItemIndex.itemIndex - 1;\r\n                        if (prevItemIndex >= 0) {\r\n                            this.selectItem(event, this.optionsToDisplay[selectedItemIndex.groupIndex].items[prevItemIndex]);\r\n                            this.selectedOptionUpdated = true;\r\n                        }\r\n                        else if (prevItemIndex < 0) {\r\n                            var prevGroup = this.optionsToDisplay[selectedItemIndex.groupIndex - 1];\r\n                            if (prevGroup) {\r\n                                this.selectItem(event, prevGroup.items[prevGroup.items.length - 1]);\r\n                                this.selectedOptionUpdated = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    var selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\r\n                    var prevEnabledOption = this.findPrevEnabledOption(selectedItemIndex);\r\n                    if (prevEnabledOption) {\r\n                        this.selectItem(event, prevEnabledOption);\r\n                        this.selectedOptionUpdated = true;\r\n                    }\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            //space\r\n            case 32:\r\n            case 32:\r\n                if (!this.overlayVisible) {\r\n                    this.show();\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            //enter\r\n            case 13:\r\n                if (!this.filter || (this.optionsToDisplay && this.optionsToDisplay.length > 0)) {\r\n                    this.hide();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            //escape and tab\r\n            case 27:\r\n            case 9:\r\n                this.hide();\r\n                break;\r\n            //search item based on keyboard input\r\n            default:\r\n                if (search) {\r\n                    this.search(event);\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    Dropdown.prototype.search = function (event) {\r\n        var _this = this;\r\n        if (this.searchTimeout) {\r\n            clearTimeout(this.searchTimeout);\r\n        }\r\n        var char = String.fromCharCode(event.keyCode);\r\n        this.previousSearchChar = this.currentSearchChar;\r\n        this.currentSearchChar = char;\r\n        if (this.previousSearchChar === this.currentSearchChar)\r\n            this.searchValue = this.currentSearchChar;\r\n        else\r\n            this.searchValue = this.searchValue ? this.searchValue + char : char;\r\n        var newOption;\r\n        if (this.group) {\r\n            var searchIndex = this.selectedOption ? this.findOptionGroupIndex(this.selectedOption.value, this.optionsToDisplay) : { groupIndex: 0, itemIndex: 0 };\r\n            newOption = this.searchOptionWithinGroup(searchIndex);\r\n        }\r\n        else {\r\n            var searchIndex = this.selectedOption ? this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\r\n            newOption = this.searchOption(++searchIndex);\r\n        }\r\n        if (newOption) {\r\n            this.selectItem(event, newOption);\r\n            this.selectedOptionUpdated = true;\r\n        }\r\n        this.searchTimeout = setTimeout(function () {\r\n            _this.searchValue = null;\r\n        }, 250);\r\n    };\r\n    Dropdown.prototype.searchOption = function (index) {\r\n        var option;\r\n        if (this.searchValue) {\r\n            option = this.searchOptionInRange(index, this.optionsToDisplay.length);\r\n            if (!option) {\r\n                option = this.searchOptionInRange(0, index);\r\n            }\r\n        }\r\n        return option;\r\n    };\r\n    Dropdown.prototype.searchOptionInRange = function (start, end) {\r\n        for (var i = start; i < end; i++) {\r\n            var opt = this.optionsToDisplay[i];\r\n            if (opt.label.toLowerCase().startsWith(this.searchValue.toLowerCase())) {\r\n                return opt;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Dropdown.prototype.searchOptionWithinGroup = function (index) {\r\n        var option;\r\n        if (this.searchValue) {\r\n            for (var i = index.groupIndex; i < this.optionsToDisplay.length; i++) {\r\n                for (var j = (index.groupIndex === i) ? (index.itemIndex + 1) : 0; j < this.optionsToDisplay[i].items.length; j++) {\r\n                    var opt = this.optionsToDisplay[i].items[j];\r\n                    if (opt.label.toLowerCase().startsWith(this.searchValue.toLowerCase())) {\r\n                        return opt;\r\n                    }\r\n                }\r\n            }\r\n            if (!option) {\r\n                for (var i = 0; i <= index.groupIndex; i++) {\r\n                    for (var j = 0; j < ((index.groupIndex === i) ? index.itemIndex : this.optionsToDisplay[i].items.length); j++) {\r\n                        var opt = this.optionsToDisplay[i].items[j];\r\n                        if (opt.label.toLowerCase().startsWith(this.searchValue.toLowerCase())) {\r\n                            return opt;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Dropdown.prototype.findOptionIndex = function (val, opts) {\r\n        var index = -1;\r\n        if (opts) {\r\n            for (var i = 0; i < opts.length; i++) {\r\n                if ((val == null && opts[i].value == null) || this.objectUtils.equals(val, opts[i].value, this.dataKey)) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    };\r\n    Dropdown.prototype.findOptionGroupIndex = function (val, opts) {\r\n        var groupIndex, itemIndex;\r\n        if (opts) {\r\n            for (var i = 0; i < opts.length; i++) {\r\n                groupIndex = i;\r\n                itemIndex = this.findOptionIndex(val, opts[i].items);\r\n                if (itemIndex !== -1) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (itemIndex !== -1) {\r\n            return { groupIndex: groupIndex, itemIndex: itemIndex };\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    };\r\n    Dropdown.prototype.findOption = function (val, opts, inGroup) {\r\n        if (this.group && !inGroup) {\r\n            var opt = void 0;\r\n            if (opts && opts.length) {\r\n                for (var _i = 0, opts_1 = opts; _i < opts_1.length; _i++) {\r\n                    var optgroup = opts_1[_i];\r\n                    opt = this.findOption(val, optgroup.items, true);\r\n                    if (opt) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return opt;\r\n        }\r\n        else {\r\n            var index = this.findOptionIndex(val, opts);\r\n            return (index != -1) ? opts[index] : null;\r\n        }\r\n    };\r\n    Dropdown.prototype.onFilter = function (event) {\r\n        var inputValue = event.target.value.toLowerCase();\r\n        if (inputValue && inputValue.length) {\r\n            this.filterValue = inputValue;\r\n            this.activateFilter();\r\n        }\r\n        else {\r\n            this.filterValue = null;\r\n            this.optionsToDisplay = this.options;\r\n        }\r\n        this.optionsChanged = true;\r\n    };\r\n    Dropdown.prototype.activateFilter = function () {\r\n        var searchFields = this.filterBy.split(',');\r\n        if (this.options && this.options.length) {\r\n            if (this.group) {\r\n                var filteredGroups = [];\r\n                for (var _i = 0, _a = this.options; _i < _a.length; _i++) {\r\n                    var optgroup = _a[_i];\r\n                    var filteredSubOptions = this.objectUtils.filter(optgroup.items, searchFields, this.filterValue);\r\n                    if (filteredSubOptions && filteredSubOptions.length) {\r\n                        filteredGroups.push({\r\n                            label: optgroup.label,\r\n                            value: optgroup.value,\r\n                            items: filteredSubOptions\r\n                        });\r\n                    }\r\n                }\r\n                this.optionsToDisplay = filteredGroups;\r\n            }\r\n            else {\r\n                this.optionsToDisplay = this.objectUtils.filter(this.options, searchFields, this.filterValue);\r\n            }\r\n            this.optionsChanged = true;\r\n        }\r\n    };\r\n    Dropdown.prototype.applyFocus = function () {\r\n        if (this.editable)\r\n            this.domHandler.findSingle(this.el.nativeElement, '.ui-dropdown-label.ui-inputtext').focus();\r\n        else\r\n            this.domHandler.findSingle(this.el.nativeElement, 'input[readonly]').focus();\r\n    };\r\n    Dropdown.prototype.focus = function () {\r\n        this.applyFocus();\r\n    };\r\n    Dropdown.prototype.bindDocumentClickListener = function () {\r\n        var _this = this;\r\n        if (!this.documentClickListener) {\r\n            this.documentClickListener = this.renderer.listen('document', 'click', function () {\r\n                if (!_this.selfClick && !_this.itemClick) {\r\n                    _this.hide();\r\n                    _this.unbindDocumentClickListener();\r\n                }\r\n                _this.clearClickState();\r\n                _this.cd.markForCheck();\r\n            });\r\n        }\r\n    };\r\n    Dropdown.prototype.clearClickState = function () {\r\n        this.selfClick = false;\r\n        this.itemClick = false;\r\n    };\r\n    Dropdown.prototype.unbindDocumentClickListener = function () {\r\n        if (this.documentClickListener) {\r\n            this.documentClickListener();\r\n            this.documentClickListener = null;\r\n        }\r\n    };\r\n    Dropdown.prototype.updateFilledState = function () {\r\n        this.filled = (this.selectedOption != null);\r\n    };\r\n    Dropdown.prototype.clear = function (event) {\r\n        this.clearClick = true;\r\n        this.value = null;\r\n        this.onModelChange(this.value);\r\n        this.onChange.emit({\r\n            originalEvent: event,\r\n            value: this.value\r\n        });\r\n        this.updateSelectedOption(this.value);\r\n        this.updateEditableLabel();\r\n        this.updateFilledState();\r\n    };\r\n    Dropdown.prototype.onOverlayHide = function () {\r\n        this.unbindDocumentClickListener();\r\n        this.overlay = null;\r\n        this.itemsWrapper = null;\r\n    };\r\n    Dropdown.prototype.ngOnDestroy = function () {\r\n        this.restoreOverlayAppend();\r\n        this.onOverlayHide();\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"scrollHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dropdown.prototype, \"filter\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"name\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Dropdown.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Dropdown.prototype, \"panelStyle\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"panelStyleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dropdown.prototype, \"disabled\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dropdown.prototype, \"readonly\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dropdown.prototype, \"autoWidth\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dropdown.prototype, \"required\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dropdown.prototype, \"editable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Dropdown.prototype, \"appendTo\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Dropdown.prototype, \"tabindex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"placeholder\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"filterPlaceholder\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"inputId\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"selectId\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"dataKey\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"filterBy\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dropdown.prototype, \"autofocus\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dropdown.prototype, \"resetFilterOnHide\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"dropdownIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"optionLabel\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dropdown.prototype, \"autoDisplayFirst\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dropdown.prototype, \"group\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dropdown.prototype, \"showClear\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"emptyFilterMessage\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dropdown.prototype, \"autoZIndex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Dropdown.prototype, \"baseZIndex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"showTransitionOptions\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dropdown.prototype, \"hideTransitionOptions\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Dropdown.prototype, \"onChange\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Dropdown.prototype, \"onFocus\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Dropdown.prototype, \"onBlur\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Dropdown.prototype, \"onClick\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Dropdown.prototype, \"onShow\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Dropdown.prototype, \"onHide\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('container'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], Dropdown.prototype, \"containerViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('filter'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], Dropdown.prototype, \"filterViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('in'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], Dropdown.prototype, \"focusViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('editableInput'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], Dropdown.prototype, \"editableInputViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ContentChildren(shared_1.PrimeTemplate),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], Dropdown.prototype, \"templates\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], Dropdown.prototype, \"options\", null);\r\n    Dropdown = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-dropdown',\r\n            template: \"\\n         <div #container [ngClass]=\\\"{'ui-dropdown ui-widget ui-state-default ui-corner-all ui-helper-clearfix':true,\\n            'ui-state-disabled':disabled, 'ui-dropdown-open':overlayVisible, 'ui-state-focus':focused, 'ui-dropdown-clearable': showClear && !disabled}\\\"\\n            (click)=\\\"onMouseclick($event)\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\" *ngIf=\\\"autoWidth\\\">\\n                <select [attr.id]=\\\"selectId\\\" [required]=\\\"required\\\" [attr.name]=\\\"name\\\" [attr.aria-label]=\\\"selectedOption ? selectedOption.label : ' '\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\">\\n                    <option *ngIf=\\\"placeholder\\\">{{placeholder}}</option>\\n                    <ng-container *ngIf=\\\"group\\\">\\n                        <optgroup *ngFor=\\\"let option of options\\\" [attr.label]=\\\"option.label\\\">\\n                            <option *ngFor=\\\"let option of option.items\\\" [value]=\\\"option.value\\\" [selected]=\\\"selectedOption == option\\\">{{option.label}}</option>\\n                        <optgroup>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"!group\\\">\\n                        <option *ngFor=\\\"let option of options\\\" [value]=\\\"option.value\\\" [selected]=\\\"selectedOption == option\\\">{{option.label}}</option>\\n                    </ng-container>\\n                </select>\\n            </div>\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #in [attr.id]=\\\"inputId\\\" type=\\\"text\\\" [attr.aria-label]=\\\"selectedOption ? selectedOption.label : ' '\\\" readonly (focus)=\\\"onInputFocus($event)\\\" role=\\\"listbox\\\"\\n                    (blur)=\\\"onInputBlur($event)\\\" (keydown)=\\\"onKeydown($event, true)\\\" [disabled]=\\\"disabled\\\" [attr.tabindex]=\\\"tabindex\\\" [attr.autofocus]=\\\"autofocus\\\">\\n            </div>\\n            <label [ngClass]=\\\"{'ui-dropdown-label ui-inputtext ui-corner-all':true,'ui-dropdown-label-empty':(label == null || label.length === 0)}\\\" *ngIf=\\\"!editable && (label != null)\\\">\\n                <ng-container *ngIf=\\\"!selectedItemTemplate\\\">{{label||'empty'}}</ng-container>\\n                <ng-container *ngTemplateOutlet=\\\"selectedItemTemplate; context: {$implicit: selectedOption}\\\"></ng-container>\\n            </label>\\n            <label [ngClass]=\\\"{'ui-dropdown-label ui-inputtext ui-corner-all ui-placeholder':true,'ui-dropdown-label-empty': (placeholder == null || placeholder.length === 0)}\\\" *ngIf=\\\"!editable && (label == null)\\\">{{placeholder||'empty'}}</label>\\n            <input #editableInput type=\\\"text\\\" [attr.aria-label]=\\\"selectedOption ? selectedOption.label : ' '\\\" class=\\\"ui-dropdown-label ui-inputtext ui-corner-all\\\" *ngIf=\\\"editable\\\" [disabled]=\\\"disabled\\\" [attr.placeholder]=\\\"placeholder\\\"\\n                        (click)=\\\"onEditableInputClick($event)\\\" (input)=\\\"onEditableInputChange($event)\\\" (focus)=\\\"onEditableInputFocus($event)\\\" (blur)=\\\"onInputBlur($event)\\\">\\n            <i class=\\\"ui-dropdown-clear-icon pi pi-times\\\" (click)=\\\"clear($event)\\\" *ngIf=\\\"value != null && showClear && !disabled\\\"></i>\\n            <div class=\\\"ui-dropdown-trigger ui-state-default ui-corner-right\\\">\\n                <span class=\\\"ui-dropdown-trigger-icon ui-clickable\\\" [ngClass]=\\\"dropdownIcon\\\"></span>\\n            </div>\\n            <div *ngIf=\\\"overlayVisible\\\" [ngClass]=\\\"'ui-dropdown-panel  ui-widget ui-widget-content ui-corner-all ui-shadow'\\\" [@overlayAnimation]=\\\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\\\" (@overlayAnimation.start)=\\\"onOverlayAnimationStart($event)\\\" [ngStyle]=\\\"panelStyle\\\" [class]=\\\"panelStyleClass\\\">\\n                <div *ngIf=\\\"filter\\\" class=\\\"ui-dropdown-filter-container\\\" (input)=\\\"onFilter($event)\\\" (click)=\\\"$event.stopPropagation()\\\">\\n                    <input #filter type=\\\"text\\\" autocomplete=\\\"off\\\" [value]=\\\"filterValue||''\\\" class=\\\"ui-dropdown-filter ui-inputtext ui-widget ui-state-default ui-corner-all\\\" [attr.placeholder]=\\\"filterPlaceholder\\\"\\n                    (keydown.enter)=\\\"$event.preventDefault()\\\" (keydown)=\\\"onKeydown($event, false)\\\">\\n                    <span class=\\\"ui-dropdown-filter-icon pi pi-search\\\"></span>\\n                </div>\\n                <div class=\\\"ui-dropdown-items-wrapper\\\" [style.max-height]=\\\"scrollHeight||'auto'\\\">\\n                    <ul class=\\\"ui-dropdown-items ui-dropdown-list ui-widget-content ui-widget ui-corner-all ui-helper-reset\\\">\\n                        <ng-container *ngIf=\\\"group\\\">\\n                            <ng-template ngFor let-optgroup [ngForOf]=\\\"optionsToDisplay\\\">\\n                                <li class=\\\"ui-dropdown-item-group\\\">\\n                                    <span *ngIf=\\\"!groupTemplate\\\">{{optgroup.label||'empty'}}</span>\\n                                    <ng-container *ngTemplateOutlet=\\\"groupTemplate; context: {$implicit: optgroup}\\\"></ng-container>\\n                                </li>\\n                                <ng-container *ngTemplateOutlet=\\\"itemslist; context: {$implicit: optgroup.items, selectedOption: selectedOption}\\\"></ng-container>\\n                            </ng-template>\\n                        </ng-container>\\n                        <ng-container *ngIf=\\\"!group\\\">\\n                            <ng-container *ngTemplateOutlet=\\\"itemslist; context: {$implicit: optionsToDisplay, selectedOption: selectedOption}\\\"></ng-container>\\n                        </ng-container>\\n                        <ng-template #itemslist let-options let-selectedOption=\\\"selectedOption\\\">\\n                            <li *ngFor=\\\"let option of options;let i=index\\\"  (click)=\\\"onItemClick($event, option)\\\"\\n                                    [ngClass]=\\\"{'ui-dropdown-item ui-corner-all':true,\\n                                                'ui-state-highlight':(selectedOption == option),\\n                                                'ui-state-disabled':(option.disabled),\\n                                                'ui-dropdown-item-empty':!option.label||option.label.length === 0}\\\">\\n                                <span *ngIf=\\\"!itemTemplate\\\">{{option.label||'empty'}}</span>\\n                                <ng-container *ngTemplateOutlet=\\\"itemTemplate; context: {$implicit: option}\\\"></ng-container>\\n                            </li>\\n                        </ng-template>\\n                        <li *ngIf=\\\"filter && optionsToDisplay && optionsToDisplay.length === 0\\\">{{emptyFilterMessage}}</li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n    \",\r\n            animations: [\r\n                animations_1.trigger('overlayAnimation', [\r\n                    animations_1.state('void', animations_1.style({\r\n                        transform: 'translateY(5%)',\r\n                        opacity: 0\r\n                    })),\r\n                    animations_1.state('visible', animations_1.style({\r\n                        transform: 'translateY(0)',\r\n                        opacity: 1\r\n                    })),\r\n                    animations_1.transition('void => visible', animations_1.animate('{{showTransitionParams}}')),\r\n                    animations_1.transition('visible => void', animations_1.animate('{{hideTransitionParams}}'))\r\n                ])\r\n            ],\r\n            host: {\r\n                '[class.ui-inputwrapper-filled]': 'filled',\r\n                '[class.ui-inputwrapper-focus]': 'focused'\r\n            },\r\n            providers: [domhandler_1.DomHandler, objectutils_1.ObjectUtils, exports.DROPDOWN_VALUE_ACCESSOR]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler, core_1.Renderer2, core_1.ChangeDetectorRef,\r\n            objectutils_1.ObjectUtils, core_1.NgZone])\r\n    ], Dropdown);\r\n    return Dropdown;\r\n}());\r\nexports.Dropdown = Dropdown;\r\nvar DropdownModule = /** @class */ (function () {\r\n    function DropdownModule() {\r\n    }\r\n    DropdownModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule, shared_1.SharedModule],\r\n            exports: [Dropdown, shared_1.SharedModule],\r\n            declarations: [Dropdown]\r\n        })\r\n    ], DropdownModule);\r\n    return DropdownModule;\r\n}());\r\nexports.DropdownModule = DropdownModule;\r\n//# sourceMappingURL=dropdown.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/dropdown/dropdown.js\n// module id = 1436\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","/* Shorthand */\r\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./components/button/button\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/button.js\n// module id = 1437\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","/* Shorthand */\r\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./components/selectbutton/selectbutton\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/selectbutton.js\n// module id = 1438\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar objectutils_1 = require(\"../utils/objectutils\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nexports.SELECTBUTTON_VALUE_ACCESSOR = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return SelectButton; }),\r\n    multi: true\r\n};\r\nvar SelectButton = /** @class */ (function () {\r\n    function SelectButton(objectUtils, cd) {\r\n        this.objectUtils = objectUtils;\r\n        this.cd = cd;\r\n        this.onOptionClick = new core_1.EventEmitter();\r\n        this.onChange = new core_1.EventEmitter();\r\n        this.onModelChange = function () { };\r\n        this.onModelTouched = function () { };\r\n    }\r\n    Object.defineProperty(SelectButton.prototype, \"options\", {\r\n        get: function () {\r\n            return this._options;\r\n        },\r\n        set: function (val) {\r\n            var opts = this.optionLabel || this.itemTemplate ? this.objectUtils.generateSelectItems(val, this.optionLabel) : val;\r\n            this._options = opts;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SelectButton.prototype.writeValue = function (value) {\r\n        this.value = value;\r\n        this.cd.markForCheck();\r\n    };\r\n    SelectButton.prototype.registerOnChange = function (fn) {\r\n        this.onModelChange = fn;\r\n    };\r\n    SelectButton.prototype.registerOnTouched = function (fn) {\r\n        this.onModelTouched = fn;\r\n    };\r\n    SelectButton.prototype.setDisabledState = function (val) {\r\n        this.disabled = val;\r\n    };\r\n    SelectButton.prototype.onItemClick = function (event, option, checkbox, index) {\r\n        if (this.disabled || option.disabled) {\r\n            return;\r\n        }\r\n        checkbox.focus();\r\n        if (this.multiple) {\r\n            var itemIndex_1 = this.findItemIndex(option);\r\n            if (itemIndex_1 != -1)\r\n                this.value = this.value.filter(function (val, i) { return i != itemIndex_1; });\r\n            else\r\n                this.value = (this.value || []).concat([option.value]);\r\n        }\r\n        else {\r\n            this.value = option.value;\r\n        }\r\n        this.onOptionClick.emit({\r\n            originalEvent: event,\r\n            option: option,\r\n            index: index\r\n        });\r\n        this.onModelChange(this.value);\r\n        this.onChange.emit({\r\n            originalEvent: event,\r\n            value: this.value\r\n        });\r\n    };\r\n    SelectButton.prototype.onFocus = function (event) {\r\n        this.focusedItem = event.target;\r\n    };\r\n    SelectButton.prototype.onBlur = function (event) {\r\n        this.focusedItem = null;\r\n        this.onModelTouched();\r\n    };\r\n    SelectButton.prototype.isSelected = function (option) {\r\n        if (this.multiple)\r\n            return this.findItemIndex(option) != -1;\r\n        else\r\n            return this.objectUtils.equals(option.value, this.value, this.dataKey);\r\n    };\r\n    SelectButton.prototype.findItemIndex = function (option) {\r\n        var index = -1;\r\n        if (this.value) {\r\n            for (var i = 0; i < this.value.length; i++) {\r\n                if (this.value[i] == option.value) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], SelectButton.prototype, \"tabindex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], SelectButton.prototype, \"multiple\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], SelectButton.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], SelectButton.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], SelectButton.prototype, \"disabled\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], SelectButton.prototype, \"dataKey\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], SelectButton.prototype, \"optionLabel\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], SelectButton.prototype, \"onOptionClick\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], SelectButton.prototype, \"onChange\", void 0);\r\n    __decorate([\r\n        core_1.ContentChild(core_1.TemplateRef),\r\n        __metadata(\"design:type\", Object)\r\n    ], SelectButton.prototype, \"itemTemplate\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], SelectButton.prototype, \"options\", null);\r\n    SelectButton = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-selectButton',\r\n            template: \"\\n        <div [ngClass]=\\\"'ui-selectbutton ui-buttonset ui-widget ui-corner-all ui-buttonset-' + (options ? options.length : 0)\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div *ngFor=\\\"let option of options; let i = index\\\" class=\\\"ui-button ui-widget ui-state-default ui-button-text-only {{option.styleClass}}\\\"\\n                [ngClass]=\\\"{'ui-state-active':isSelected(option), 'ui-state-disabled': disabled || option.disabled, 'ui-state-focus': cbox == focusedItem, \\n                'ui-button-text-icon-left': (option.icon != null), 'ui-button-icon-only': (option.icon && !option.label)}\\\" (click)=\\\"onItemClick($event,option,cbox,i)\\\" [attr.title]=\\\"option.title\\\">\\n                <ng-container *ngIf=\\\"!itemTemplate else customcontent\\\">\\n                    <span [ngClass]=\\\"['ui-clickable', 'ui-button-icon-left']\\\" [class]=\\\"option.icon\\\" *ngIf=\\\"option.icon\\\"></span>\\n                    <span class=\\\"ui-button-text ui-clickable\\\">{{option.label||'ui-btn'}}</span>\\n                </ng-container>\\n                <ng-template #customcontent>\\n                    <ng-container *ngTemplateOutlet=\\\"itemTemplate; context: {$implicit: option.value, index: i}\\\"></ng-container>\\n                </ng-template>\\n                <div class=\\\"ui-helper-hidden-accessible\\\">\\n                    <input #cbox type=\\\"checkbox\\\" [checked]=\\\"isSelected(option)\\\" (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\" [attr.tabindex]=\\\"tabindex\\\" [attr.disabled]=\\\"disabled || option.disabled\\\">\\n                </div>\\n            </div>\\n        </div>\\n    \",\r\n            providers: [objectutils_1.ObjectUtils, exports.SELECTBUTTON_VALUE_ACCESSOR]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [objectutils_1.ObjectUtils, core_1.ChangeDetectorRef])\r\n    ], SelectButton);\r\n    return SelectButton;\r\n}());\r\nexports.SelectButton = SelectButton;\r\nvar SelectButtonModule = /** @class */ (function () {\r\n    function SelectButtonModule() {\r\n    }\r\n    SelectButtonModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule],\r\n            exports: [SelectButton],\r\n            declarations: [SelectButton]\r\n        })\r\n    ], SelectButtonModule);\r\n    return SelectButtonModule;\r\n}());\r\nexports.SelectButtonModule = SelectButtonModule;\r\n//# sourceMappingURL=selectbutton.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/selectbutton/selectbutton.js\n// module id = 1439\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","/* Shorthand */\r\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./components/inputtext/inputtext\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/inputtext.js\n// module id = 1440\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","/* Shorthand */\r\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./components/multiselect/multiselect\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/multiselect.js\n// module id = 1441\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar animations_1 = require(\"@angular/animations\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar domhandler_1 = require(\"../dom/domhandler\");\r\nvar objectutils_1 = require(\"../utils/objectutils\");\r\nvar shared_1 = require(\"../common/shared\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nexports.MULTISELECT_VALUE_ACCESSOR = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return MultiSelect; }),\r\n    multi: true\r\n};\r\nvar MultiSelect = /** @class */ (function () {\r\n    function MultiSelect(el, domHandler, renderer, objectUtils, cd) {\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.renderer = renderer;\r\n        this.objectUtils = objectUtils;\r\n        this.cd = cd;\r\n        this.scrollHeight = '200px';\r\n        this._defaultLabel = 'Choose';\r\n        this.filter = true;\r\n        this.displaySelectedLabel = true;\r\n        this.maxSelectedLabels = 3;\r\n        this.selectedItemsLabel = '{0} items selected';\r\n        this.showToggleAll = true;\r\n        this.resetFilterOnHide = false;\r\n        this.dropdownIcon = 'pi pi-caret-down';\r\n        this.showHeader = true;\r\n        this.autoZIndex = true;\r\n        this.baseZIndex = 0;\r\n        this.showTransitionOptions = '225ms ease-out';\r\n        this.hideTransitionOptions = '195ms ease-in';\r\n        this.onChange = new core_1.EventEmitter();\r\n        this.onFocus = new core_1.EventEmitter();\r\n        this.onBlur = new core_1.EventEmitter();\r\n        this.onPanelShow = new core_1.EventEmitter();\r\n        this.onPanelHide = new core_1.EventEmitter();\r\n        this.onModelChange = function () { };\r\n        this.onModelTouched = function () { };\r\n    }\r\n    Object.defineProperty(MultiSelect.prototype, \"defaultLabel\", {\r\n        get: function () {\r\n            return this._defaultLabel;\r\n        },\r\n        set: function (val) {\r\n            this._defaultLabel = val;\r\n            this.updateLabel();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MultiSelect.prototype, \"options\", {\r\n        get: function () {\r\n            return this._options;\r\n        },\r\n        set: function (val) {\r\n            var opts = this.optionLabel ? this.objectUtils.generateSelectItems(val, this.optionLabel) : val;\r\n            this._options = opts;\r\n            this.updateLabel();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MultiSelect.prototype.ngOnInit = function () {\r\n        this.updateLabel();\r\n    };\r\n    MultiSelect.prototype.ngAfterContentInit = function () {\r\n        var _this = this;\r\n        this.templates.forEach(function (item) {\r\n            switch (item.getType()) {\r\n                case 'item':\r\n                    _this.itemTemplate = item.template;\r\n                    break;\r\n                case 'selectedItems':\r\n                    _this.selectedItemsTemplate = item.template;\r\n                    break;\r\n                default:\r\n                    _this.itemTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    MultiSelect.prototype.ngAfterViewInit = function () {\r\n        if (this.overlayVisible) {\r\n            this.show();\r\n        }\r\n    };\r\n    MultiSelect.prototype.ngAfterViewChecked = function () {\r\n        if (this.filtered) {\r\n            this.alignOverlay();\r\n            this.filtered = false;\r\n        }\r\n    };\r\n    MultiSelect.prototype.writeValue = function (value) {\r\n        this.value = value;\r\n        this.updateLabel();\r\n        this.updateFilledState();\r\n        this.cd.markForCheck();\r\n    };\r\n    MultiSelect.prototype.updateFilledState = function () {\r\n        this.filled = (this.valuesAsString != null && this.valuesAsString.length > 0);\r\n    };\r\n    MultiSelect.prototype.registerOnChange = function (fn) {\r\n        this.onModelChange = fn;\r\n    };\r\n    MultiSelect.prototype.registerOnTouched = function (fn) {\r\n        this.onModelTouched = fn;\r\n    };\r\n    MultiSelect.prototype.setDisabledState = function (val) {\r\n        this.disabled = val;\r\n    };\r\n    MultiSelect.prototype.onItemClick = function (event, option) {\r\n        if (option.disabled) {\r\n            return;\r\n        }\r\n        var value = option.value;\r\n        var selectionIndex = this.findSelectionIndex(value);\r\n        if (selectionIndex != -1) {\r\n            this.value = this.value.filter(function (val, i) { return i != selectionIndex; });\r\n            if (this.selectionLimit) {\r\n                this.maxSelectionLimitReached = false;\r\n            }\r\n        }\r\n        else {\r\n            if (!this.selectionLimit || (this.value.length < this.selectionLimit)) {\r\n                this.value = (this.value || []).concat([value]);\r\n            }\r\n            if (this.selectionLimit && this.value.length === this.selectionLimit) {\r\n                this.maxSelectionLimitReached = true;\r\n            }\r\n        }\r\n        this.onModelChange(this.value);\r\n        this.onChange.emit({ originalEvent: event, value: this.value, itemValue: value });\r\n        this.updateLabel();\r\n        this.updateFilledState();\r\n    };\r\n    MultiSelect.prototype.isSelected = function (value) {\r\n        return this.findSelectionIndex(value) != -1;\r\n    };\r\n    MultiSelect.prototype.findSelectionIndex = function (val) {\r\n        var index = -1;\r\n        if (this.value) {\r\n            for (var i = 0; i < this.value.length; i++) {\r\n                if (this.objectUtils.equals(this.value[i], val, this.dataKey)) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    };\r\n    MultiSelect.prototype.toggleAll = function (event, checkbox) {\r\n        if (checkbox.checked) {\r\n            this.value = [];\r\n        }\r\n        else {\r\n            var opts = this.getVisibleOptions();\r\n            if (opts) {\r\n                this.value = [];\r\n                for (var i = 0; i < opts.length; i++) {\r\n                    var option = opts[i];\r\n                    if (!option.disabled) {\r\n                        this.value.push(opts[i].value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        checkbox.checked = !checkbox.checked;\r\n        this.onModelChange(this.value);\r\n        this.onChange.emit({ originalEvent: event, value: this.value });\r\n        this.updateLabel();\r\n    };\r\n    MultiSelect.prototype.isAllChecked = function () {\r\n        if (this.filterValue && this.filterValue.trim().length) {\r\n            return this.value && this.visibleOptions && this.visibleOptions.length && (this.value.length == this.visibleOptions.length);\r\n        }\r\n        else {\r\n            var optionCount = this.getEnabledOptionCount();\r\n            return this.value && this.options && (this.value.length > 0 && this.value.length == optionCount);\r\n        }\r\n    };\r\n    MultiSelect.prototype.getEnabledOptionCount = function () {\r\n        if (this.options) {\r\n            var count = 0;\r\n            for (var _i = 0, _a = this.options; _i < _a.length; _i++) {\r\n                var opt = _a[_i];\r\n                if (!opt.disabled) {\r\n                    count++;\r\n                }\r\n            }\r\n            return count;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    MultiSelect.prototype.show = function () {\r\n        if (!this.overlayVisible) {\r\n            this.overlayVisible = true;\r\n        }\r\n        this.bindDocumentClickListener();\r\n    };\r\n    MultiSelect.prototype.onOverlayAnimationStart = function (event) {\r\n        switch (event.toState) {\r\n            case 'visible':\r\n                this.overlay = event.element;\r\n                this.appendOverlay();\r\n                if (this.autoZIndex) {\r\n                    this.overlay.style.zIndex = String(this.baseZIndex + (++domhandler_1.DomHandler.zindex));\r\n                }\r\n                this.alignOverlay();\r\n                this.bindDocumentClickListener();\r\n                this.onPanelShow.emit();\r\n                break;\r\n            case 'void':\r\n                this.onOverlayHide();\r\n                break;\r\n        }\r\n    };\r\n    MultiSelect.prototype.appendOverlay = function () {\r\n        if (this.appendTo) {\r\n            if (this.appendTo === 'body')\r\n                document.body.appendChild(this.overlay);\r\n            else\r\n                this.domHandler.appendChild(this.overlay, this.appendTo);\r\n            this.overlay.style.minWidth = this.domHandler.getWidth(this.containerViewChild.nativeElement) + 'px';\r\n        }\r\n    };\r\n    MultiSelect.prototype.restoreOverlayAppend = function () {\r\n        if (this.overlay && this.appendTo) {\r\n            this.el.nativeElement.appendChild(this.overlay);\r\n        }\r\n    };\r\n    MultiSelect.prototype.alignOverlay = function () {\r\n        if (this.overlay) {\r\n            if (this.appendTo)\r\n                this.domHandler.absolutePosition(this.overlay, this.containerViewChild.nativeElement);\r\n            else\r\n                this.domHandler.relativePosition(this.overlay, this.containerViewChild.nativeElement);\r\n        }\r\n    };\r\n    MultiSelect.prototype.hide = function () {\r\n        this.overlayVisible = false;\r\n        this.unbindDocumentClickListener();\r\n        if (this.resetFilterOnHide) {\r\n            this.filterValue = null;\r\n            this.filterInputChild.nativeElement.value = null;\r\n        }\r\n        this.onPanelHide.emit();\r\n    };\r\n    MultiSelect.prototype.close = function (event) {\r\n        this.hide();\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n    MultiSelect.prototype.onMouseclick = function (event, input) {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        if (!this.panelClick) {\r\n            if (this.overlayVisible) {\r\n                this.hide();\r\n            }\r\n            else {\r\n                input.focus();\r\n                this.show();\r\n            }\r\n        }\r\n        this.selfClick = true;\r\n    };\r\n    MultiSelect.prototype.onInputFocus = function (event) {\r\n        this.focus = true;\r\n        this.onFocus.emit({ originalEvent: event });\r\n    };\r\n    MultiSelect.prototype.onInputBlur = function (event) {\r\n        this.focus = false;\r\n        this.onBlur.emit({ originalEvent: event });\r\n        this.onModelTouched();\r\n    };\r\n    MultiSelect.prototype.onInputKeydown = function (event) {\r\n        switch (event.which) {\r\n            //down\r\n            case 40:\r\n                if (!this.overlayVisible && event.altKey) {\r\n                    this.show();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            //escape and tab\r\n            case 27:\r\n            case 9:\r\n                this.hide();\r\n                break;\r\n        }\r\n    };\r\n    MultiSelect.prototype.updateLabel = function () {\r\n        if (this.value && this.options && this.value.length && this.displaySelectedLabel) {\r\n            var label = '';\r\n            for (var i = 0; i < this.value.length; i++) {\r\n                var itemLabel = this.findLabelByValue(this.value[i]);\r\n                if (itemLabel) {\r\n                    if (label.length > 0) {\r\n                        label = label + ', ';\r\n                    }\r\n                    label = label + itemLabel;\r\n                }\r\n            }\r\n            if (this.value.length <= this.maxSelectedLabels) {\r\n                this.valuesAsString = label;\r\n            }\r\n            else {\r\n                var pattern = /{(.*?)}/;\r\n                if (pattern.test(this.selectedItemsLabel)) {\r\n                    this.valuesAsString = this.selectedItemsLabel.replace(this.selectedItemsLabel.match(pattern)[0], this.value.length + '');\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.valuesAsString = this.defaultLabel;\r\n        }\r\n    };\r\n    MultiSelect.prototype.findLabelByValue = function (val) {\r\n        var label = null;\r\n        for (var i = 0; i < this.options.length; i++) {\r\n            var option = this.options[i];\r\n            if (val == null && option.value == null || this.objectUtils.equals(val, option.value, this.dataKey)) {\r\n                label = option.label;\r\n                break;\r\n            }\r\n        }\r\n        return label;\r\n    };\r\n    MultiSelect.prototype.onFilter = function (event) {\r\n        this.filterValue = event.target.value.trim().toLowerCase();\r\n        this.visibleOptions = [];\r\n        for (var i = 0; i < this.options.length; i++) {\r\n            var option = this.options[i];\r\n            if (option.label.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1) {\r\n                this.visibleOptions.push(option);\r\n            }\r\n        }\r\n        this.filtered = true;\r\n    };\r\n    MultiSelect.prototype.isItemVisible = function (option) {\r\n        if (this.filterValue && this.filterValue.trim().length) {\r\n            for (var i = 0; i < this.visibleOptions.length; i++) {\r\n                if (this.visibleOptions[i].value == option.value) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    MultiSelect.prototype.getVisibleOptions = function () {\r\n        if (this.visibleOptions && this.visibleOptions.length) {\r\n            return this.visibleOptions;\r\n        }\r\n        else {\r\n            return this.options;\r\n        }\r\n    };\r\n    MultiSelect.prototype.bindDocumentClickListener = function () {\r\n        var _this = this;\r\n        if (!this.documentClickListener) {\r\n            this.documentClickListener = this.renderer.listen('document', 'click', function () {\r\n                if (!_this.selfClick && !_this.panelClick && _this.overlayVisible) {\r\n                    _this.hide();\r\n                }\r\n                _this.selfClick = false;\r\n                _this.panelClick = false;\r\n                _this.cd.markForCheck();\r\n            });\r\n        }\r\n    };\r\n    MultiSelect.prototype.unbindDocumentClickListener = function () {\r\n        if (this.documentClickListener) {\r\n            this.documentClickListener();\r\n            this.documentClickListener = null;\r\n        }\r\n    };\r\n    MultiSelect.prototype.onOverlayHide = function () {\r\n        this.unbindDocumentClickListener();\r\n        this.overlay = null;\r\n    };\r\n    MultiSelect.prototype.ngOnDestroy = function () {\r\n        this.restoreOverlayAppend();\r\n        this.onOverlayHide();\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], MultiSelect.prototype, \"scrollHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], MultiSelect.prototype, \"defaultLabel\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], MultiSelect.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], MultiSelect.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], MultiSelect.prototype, \"panelStyle\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], MultiSelect.prototype, \"panelStyleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], MultiSelect.prototype, \"inputId\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], MultiSelect.prototype, \"disabled\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], MultiSelect.prototype, \"filter\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], MultiSelect.prototype, \"filterPlaceHolder\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], MultiSelect.prototype, \"overlayVisible\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], MultiSelect.prototype, \"tabindex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], MultiSelect.prototype, \"appendTo\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], MultiSelect.prototype, \"dataKey\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], MultiSelect.prototype, \"name\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], MultiSelect.prototype, \"displaySelectedLabel\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], MultiSelect.prototype, \"maxSelectedLabels\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], MultiSelect.prototype, \"selectionLimit\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], MultiSelect.prototype, \"selectedItemsLabel\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], MultiSelect.prototype, \"showToggleAll\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], MultiSelect.prototype, \"resetFilterOnHide\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], MultiSelect.prototype, \"dropdownIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], MultiSelect.prototype, \"optionLabel\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], MultiSelect.prototype, \"showHeader\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], MultiSelect.prototype, \"autoZIndex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], MultiSelect.prototype, \"baseZIndex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], MultiSelect.prototype, \"showTransitionOptions\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], MultiSelect.prototype, \"hideTransitionOptions\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('container'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], MultiSelect.prototype, \"containerViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('filterInput'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], MultiSelect.prototype, \"filterInputChild\", void 0);\r\n    __decorate([\r\n        core_1.ContentChild(shared_1.Footer),\r\n        __metadata(\"design:type\", Object)\r\n    ], MultiSelect.prototype, \"footerFacet\", void 0);\r\n    __decorate([\r\n        core_1.ContentChildren(shared_1.PrimeTemplate),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], MultiSelect.prototype, \"templates\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], MultiSelect.prototype, \"onChange\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], MultiSelect.prototype, \"onFocus\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], MultiSelect.prototype, \"onBlur\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], MultiSelect.prototype, \"onPanelShow\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], MultiSelect.prototype, \"onPanelHide\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], MultiSelect.prototype, \"options\", null);\r\n    MultiSelect = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-multiSelect',\r\n            template: \"\\n        <div #container [ngClass]=\\\"{'ui-multiselect ui-widget ui-state-default ui-corner-all':true,'ui-multiselect-open':overlayVisible,'ui-state-focus':focus,'ui-state-disabled': disabled}\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\"\\n            (click)=\\\"onMouseclick($event,in)\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #in type=\\\"text\\\" readonly=\\\"readonly\\\" [attr.id]=\\\"inputId\\\" [attr.name]=\\\"name\\\" (focus)=\\\"onInputFocus($event)\\\" (blur)=\\\"onInputBlur($event)\\\" [disabled]=\\\"disabled\\\" [attr.tabindex]=\\\"tabindex\\\" (keydown)=\\\"onInputKeydown($event)\\\">\\n            </div>\\n            <div class=\\\"ui-multiselect-label-container\\\" [title]=\\\"valuesAsString\\\">\\n                <label class=\\\"ui-multiselect-label ui-corner-all\\\">\\n                    <ng-container *ngIf=\\\"!selectedItemsTemplate\\\">{{valuesAsString}}</ng-container>\\n                    <ng-container *ngTemplateOutlet=\\\"selectedItemsTemplate; context: {$implicit: value}\\\"></ng-container>\\n                </label>\\n            </div>\\n            <div [ngClass]=\\\"{'ui-multiselect-trigger ui-state-default ui-corner-right':true}\\\">\\n                <span class=\\\"ui-multiselect-trigger-icon ui-clickable\\\" [ngClass]=\\\"dropdownIcon\\\"></span>\\n            </div>\\n            <div *ngIf=\\\"overlayVisible\\\" [ngClass]=\\\"['ui-multiselect-panel ui-widget ui-widget-content ui-corner-all ui-shadow']\\\" [@overlayAnimation]=\\\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\\\" (@overlayAnimation.start)=\\\"onOverlayAnimationStart($event)\\\"\\n                [ngStyle]=\\\"panelStyle\\\" [class]=\\\"panelStyleClass\\\" (click)=\\\"panelClick=true\\\">\\n                <div class=\\\"ui-widget-header ui-corner-all ui-multiselect-header ui-helper-clearfix\\\" [ngClass]=\\\"{'ui-multiselect-header-no-toggleall': !showToggleAll}\\\" *ngIf=\\\"showHeader\\\">\\n                    <div class=\\\"ui-chkbox ui-widget\\\" *ngIf=\\\"showToggleAll && !selectionLimit\\\">\\n                        <div class=\\\"ui-helper-hidden-accessible\\\">\\n                            <input #cb type=\\\"checkbox\\\" readonly=\\\"readonly\\\" [checked]=\\\"isAllChecked()\\\">\\n                        </div>\\n                        <div class=\\\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\\\" [ngClass]=\\\"{'ui-state-active':isAllChecked()}\\\" (click)=\\\"toggleAll($event,cb)\\\">\\n                            <span class=\\\"ui-chkbox-icon ui-clickable\\\" [ngClass]=\\\"{'pi pi-check':isAllChecked()}\\\"></span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-multiselect-filter-container\\\" *ngIf=\\\"filter\\\">\\n                        <input #filterInput type=\\\"text\\\" role=\\\"textbox\\\" [value]=\\\"filterValue||''\\\" (input)=\\\"onFilter($event)\\\" class=\\\"ui-inputtext ui-widget ui-state-default ui-corner-all\\\" [attr.placeholder]=\\\"filterPlaceHolder\\\">\\n                        <span class=\\\"ui-multiselect-filter-icon pi pi-search\\\"></span>\\n                    </div>\\n                    <a class=\\\"ui-multiselect-close ui-corner-all\\\" href=\\\"#\\\" (click)=\\\"close($event)\\\">\\n                        <span class=\\\"pi pi-times\\\"></span>\\n                    </a>\\n                </div>\\n                <div class=\\\"ui-multiselect-items-wrapper\\\" [style.max-height]=\\\"scrollHeight||'auto'\\\">\\n                    <ul class=\\\"ui-multiselect-items ui-multiselect-list ui-widget-content ui-widget ui-corner-all ui-helper-reset\\\">\\n                        <li *ngFor=\\\"let option of options; let i = index\\\" class=\\\"ui-multiselect-item ui-corner-all\\\" (click)=\\\"onItemClick($event,option)\\\"\\n                            [style.display]=\\\"isItemVisible(option) ? 'block' : 'none'\\\"\\n                            [ngClass]=\\\"{'ui-state-highlight': isSelected(option.value), 'ui-state-disabled': option.disabled || (maxSelectionLimitReached && !isSelected(option.value))}\\\">\\n                            <div class=\\\"ui-chkbox ui-widget\\\">\\n                                <div class=\\\"ui-helper-hidden-accessible\\\">\\n                                    <input #itemcb type=\\\"checkbox\\\" readonly=\\\"readonly\\\" [checked]=\\\"isSelected(option.value)\\\" (focus)=\\\"focusedItemCheckbox=itemcb\\\" (blur)=\\\"focusedItemCheckbox=null\\\"\\n                                        [attr.aria-label]=\\\"option.label\\\" [disabled]=\\\"option.disabled || (maxSelectionLimitReached && !isSelected(option.value))\\\">\\n                                </div>\\n                                <div class=\\\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\\\"\\n                                    [ngClass]=\\\"{'ui-state-active': isSelected(option.value),\\n                                                'ui-state-focus': (focusedItemCheckbox === itemcb)}\\\">\\n                                    <span class=\\\"ui-chkbox-icon ui-clickable\\\" [ngClass]=\\\"{'pi pi-check':isSelected(option.value)}\\\"></span>\\n                                </div>\\n                            </div>\\n                            <label *ngIf=\\\"!itemTemplate\\\">{{option.label}}</label>\\n                            <ng-container *ngTemplateOutlet=\\\"itemTemplate; context: {$implicit: option, index: i}\\\"></ng-container>\\n                        </li>\\n                    </ul>\\n                </div>\\n                <div class=\\\"ui-multiselect-footer ui-widget-content\\\" *ngIf=\\\"footerFacet\\\">\\n                    <ng-content select=\\\"p-footer\\\"></ng-content>\\n                </div>\\n            </div>\\n        </div>\\n    \",\r\n            animations: [\r\n                animations_1.trigger('overlayAnimation', [\r\n                    animations_1.state('void', animations_1.style({\r\n                        transform: 'translateY(5%)',\r\n                        opacity: 0\r\n                    })),\r\n                    animations_1.state('visible', animations_1.style({\r\n                        transform: 'translateY(0)',\r\n                        opacity: 1\r\n                    })),\r\n                    animations_1.transition('void => visible', animations_1.animate('{{showTransitionParams}}')),\r\n                    animations_1.transition('visible => void', animations_1.animate('{{hideTransitionParams}}'))\r\n                ])\r\n            ],\r\n            host: {\r\n                '[class.ui-inputwrapper-filled]': 'filled',\r\n                '[class.ui-inputwrapper-focus]': 'focus'\r\n            },\r\n            providers: [domhandler_1.DomHandler, objectutils_1.ObjectUtils, exports.MULTISELECT_VALUE_ACCESSOR]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler, core_1.Renderer2, objectutils_1.ObjectUtils, core_1.ChangeDetectorRef])\r\n    ], MultiSelect);\r\n    return MultiSelect;\r\n}());\r\nexports.MultiSelect = MultiSelect;\r\nvar MultiSelectModule = /** @class */ (function () {\r\n    function MultiSelectModule() {\r\n    }\r\n    MultiSelectModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule, shared_1.SharedModule],\r\n            exports: [MultiSelect, shared_1.SharedModule],\r\n            declarations: [MultiSelect]\r\n        })\r\n    ], MultiSelectModule);\r\n    return MultiSelectModule;\r\n}());\r\nexports.MultiSelectModule = MultiSelectModule;\r\n//# sourceMappingURL=multiselect.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/multiselect/multiselect.js\n// module id = 1442\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12","/* Shorthand */\r\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./components/inputswitch/inputswitch\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/inputswitch.js\n// module id = 1443\n// module chunks = 0 1 4 5 6 7 8 9 10 11 12","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar domhandler_1 = require(\"../dom/domhandler\");\r\nexports.INPUTSWITCH_VALUE_ACCESSOR = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return InputSwitch; }),\r\n    multi: true\r\n};\r\nvar InputSwitch = /** @class */ (function () {\r\n    function InputSwitch(cd) {\r\n        this.cd = cd;\r\n        this.onChange = new core_1.EventEmitter();\r\n        this.checked = false;\r\n        this.focused = false;\r\n        this.onModelChange = function () { };\r\n        this.onModelTouched = function () { };\r\n    }\r\n    InputSwitch.prototype.onClick = function (event, cb) {\r\n        this.toggle(event);\r\n        cb.focus();\r\n    };\r\n    InputSwitch.prototype.onInputChange = function (event) {\r\n        var inputChecked = event.target.checked;\r\n        this.updateModel(event, inputChecked);\r\n    };\r\n    InputSwitch.prototype.toggle = function (event) {\r\n        if (!this.disabled) {\r\n            this.updateModel(event, !this.checked);\r\n        }\r\n    };\r\n    InputSwitch.prototype.updateModel = function (event, value) {\r\n        this.checked = value;\r\n        this.onModelChange(this.checked);\r\n        this.onChange.emit({\r\n            originalEvent: event,\r\n            checked: this.checked\r\n        });\r\n    };\r\n    InputSwitch.prototype.onFocus = function (event) {\r\n        this.focused = true;\r\n    };\r\n    InputSwitch.prototype.onBlur = function (event) {\r\n        this.focused = false;\r\n        this.onModelTouched();\r\n    };\r\n    InputSwitch.prototype.writeValue = function (checked) {\r\n        this.checked = checked;\r\n        this.cd.markForCheck();\r\n    };\r\n    InputSwitch.prototype.registerOnChange = function (fn) {\r\n        this.onModelChange = fn;\r\n    };\r\n    InputSwitch.prototype.registerOnTouched = function (fn) {\r\n        this.onModelTouched = fn;\r\n    };\r\n    InputSwitch.prototype.setDisabledState = function (val) {\r\n        this.disabled = val;\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], InputSwitch.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], InputSwitch.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], InputSwitch.prototype, \"tabindex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], InputSwitch.prototype, \"inputId\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], InputSwitch.prototype, \"name\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], InputSwitch.prototype, \"disabled\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], InputSwitch.prototype, \"onChange\", void 0);\r\n    InputSwitch = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-inputSwitch',\r\n            template: \"\\n        <div [ngClass]=\\\"{'ui-inputswitch ui-widget': true, 'ui-inputswitch-checked': checked, 'ui-state-disabled': disabled, 'ui-inputswitch-focus': focused}\\\" \\n            [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" (click)=\\\"onClick($event, cb)\\\" role=\\\"checkbox\\\" [attr.aria-checked]=\\\"checked\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #cb type=\\\"checkbox\\\" [attr.id]=\\\"inputId\\\" [attr.name]=\\\"name\\\" [attr.tabindex]=\\\"tabindex\\\" [checked]=\\\"checked\\\" (change)=\\\"onInputChange($event)\\\"\\n                        (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\" [disabled]=\\\"disabled\\\" />\\n            </div>\\n            <span class=\\\"ui-inputswitch-slider\\\"></span>\\n        </div>\\n    \",\r\n            providers: [exports.INPUTSWITCH_VALUE_ACCESSOR, domhandler_1.DomHandler]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])\r\n    ], InputSwitch);\r\n    return InputSwitch;\r\n}());\r\nexports.InputSwitch = InputSwitch;\r\nvar InputSwitchModule = /** @class */ (function () {\r\n    function InputSwitchModule() {\r\n    }\r\n    InputSwitchModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule],\r\n            exports: [InputSwitch],\r\n            declarations: [InputSwitch]\r\n        })\r\n    ], InputSwitchModule);\r\n    return InputSwitchModule;\r\n}());\r\nexports.InputSwitchModule = InputSwitchModule;\r\n//# sourceMappingURL=inputswitch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/inputswitch/inputswitch.js\n// module id = 1444\n// module chunks = 0 1 4 5 6 7 8 9 10 11 12","/* Shorthand */\r\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./components/autocomplete/autocomplete\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/autocomplete.js\n// module id = 1445\n// module chunks = 0 1 2 4 6 7 8 9 10 11 12","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar animations_1 = require(\"@angular/animations\");\r\nvar inputtext_1 = require(\"../inputtext/inputtext\");\r\nvar button_1 = require(\"../button/button\");\r\nvar shared_1 = require(\"../common/shared\");\r\nvar domhandler_1 = require(\"../dom/domhandler\");\r\nvar objectutils_1 = require(\"../utils/objectutils\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nexports.AUTOCOMPLETE_VALUE_ACCESSOR = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return AutoComplete; }),\r\n    multi: true\r\n};\r\nvar AutoComplete = /** @class */ (function () {\r\n    function AutoComplete(el, domHandler, renderer, objectUtils, cd, differs) {\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.renderer = renderer;\r\n        this.objectUtils = objectUtils;\r\n        this.cd = cd;\r\n        this.differs = differs;\r\n        this.minLength = 1;\r\n        this.delay = 300;\r\n        this.type = 'text';\r\n        this.autoZIndex = true;\r\n        this.baseZIndex = 0;\r\n        this.completeMethod = new core_1.EventEmitter();\r\n        this.onSelect = new core_1.EventEmitter();\r\n        this.onUnselect = new core_1.EventEmitter();\r\n        this.onFocus = new core_1.EventEmitter();\r\n        this.onBlur = new core_1.EventEmitter();\r\n        this.onDropdownClick = new core_1.EventEmitter();\r\n        this.onClear = new core_1.EventEmitter();\r\n        this.onKeyUp = new core_1.EventEmitter();\r\n        this.scrollHeight = '200px';\r\n        this.dropdownMode = 'blank';\r\n        this.immutable = true;\r\n        this.showTransitionOptions = '225ms ease-out';\r\n        this.hideTransitionOptions = '195ms ease-in';\r\n        this.onModelChange = function () { };\r\n        this.onModelTouched = function () { };\r\n        this.overlayVisible = false;\r\n        this.focus = false;\r\n        this.inputFieldValue = null;\r\n        this.differ = differs.find([]).create(null);\r\n    }\r\n    Object.defineProperty(AutoComplete.prototype, \"suggestions\", {\r\n        get: function () {\r\n            return this._suggestions;\r\n        },\r\n        set: function (val) {\r\n            this._suggestions = val;\r\n            if (this.immutable) {\r\n                this.handleSuggestionsChange();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AutoComplete.prototype.ngDoCheck = function () {\r\n        if (!this.immutable) {\r\n            var changes = this.differ.diff(this.suggestions);\r\n            if (changes) {\r\n                this.handleSuggestionsChange();\r\n            }\r\n        }\r\n    };\r\n    AutoComplete.prototype.ngAfterViewChecked = function () {\r\n        var _this = this;\r\n        //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\r\n        if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {\r\n            setTimeout(function () { return _this.alignOverlay(); }, 1);\r\n            this.suggestionsUpdated = false;\r\n        }\r\n        if (this.highlightOptionChanged) {\r\n            setTimeout(function () {\r\n                var listItem = _this.domHandler.findSingle(_this.overlay, 'li.ui-state-highlight');\r\n                if (listItem) {\r\n                    _this.domHandler.scrollInView(_this.overlay, listItem);\r\n                }\r\n            }, 1);\r\n            this.highlightOptionChanged = false;\r\n        }\r\n    };\r\n    AutoComplete.prototype.handleSuggestionsChange = function () {\r\n        if (this._suggestions != null && this.loading) {\r\n            this.highlightOption = null;\r\n            if (this._suggestions.length) {\r\n                this.noResults = false;\r\n                this.show();\r\n                this.suggestionsUpdated = true;\r\n                if (this.autoHighlight) {\r\n                    this.highlightOption = this._suggestions[0];\r\n                }\r\n            }\r\n            else {\r\n                this.noResults = true;\r\n                if (this.emptyMessage) {\r\n                    this.show();\r\n                    this.suggestionsUpdated = true;\r\n                }\r\n                else {\r\n                    this.hide();\r\n                }\r\n            }\r\n            this.loading = false;\r\n        }\r\n    };\r\n    AutoComplete.prototype.ngAfterContentInit = function () {\r\n        var _this = this;\r\n        this.templates.forEach(function (item) {\r\n            switch (item.getType()) {\r\n                case 'item':\r\n                    _this.itemTemplate = item.template;\r\n                    break;\r\n                case 'selectedItem':\r\n                    _this.selectedItemTemplate = item.template;\r\n                    break;\r\n                default:\r\n                    _this.itemTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    AutoComplete.prototype.writeValue = function (value) {\r\n        this.value = value;\r\n        this.filled = this.value && this.value != '';\r\n        this.updateInputField();\r\n    };\r\n    AutoComplete.prototype.registerOnChange = function (fn) {\r\n        this.onModelChange = fn;\r\n    };\r\n    AutoComplete.prototype.registerOnTouched = function (fn) {\r\n        this.onModelTouched = fn;\r\n    };\r\n    AutoComplete.prototype.setDisabledState = function (val) {\r\n        this.disabled = val;\r\n    };\r\n    AutoComplete.prototype.onInput = function (event) {\r\n        var _this = this;\r\n        if (!this.inputKeyDown) {\r\n            return;\r\n        }\r\n        if (this.timeout) {\r\n            clearTimeout(this.timeout);\r\n        }\r\n        var value = event.target.value;\r\n        if (!this.multiple && !this.forceSelection) {\r\n            this.onModelChange(value);\r\n        }\r\n        if (value.length === 0) {\r\n            this.hide();\r\n            this.onClear.emit(event);\r\n        }\r\n        if (value.length >= this.minLength) {\r\n            this.timeout = setTimeout(function () {\r\n                _this.search(event, value);\r\n            }, this.delay);\r\n        }\r\n        else {\r\n            this.suggestions = null;\r\n            this.hide();\r\n        }\r\n        this.updateFilledState();\r\n        this.inputKeyDown = false;\r\n    };\r\n    AutoComplete.prototype.onInputClick = function (event) {\r\n        if (this.documentClickListener) {\r\n            this.inputClick = true;\r\n        }\r\n    };\r\n    AutoComplete.prototype.search = function (event, query) {\r\n        //allow empty string but not undefined or null\r\n        if (query === undefined || query === null) {\r\n            return;\r\n        }\r\n        this.loading = true;\r\n        this.completeMethod.emit({\r\n            originalEvent: event,\r\n            query: query\r\n        });\r\n    };\r\n    AutoComplete.prototype.selectItem = function (option, focus) {\r\n        if (focus === void 0) { focus = true; }\r\n        if (this.multiple) {\r\n            this.multiInputEL.nativeElement.value = '';\r\n            this.value = this.value || [];\r\n            if (!this.isSelected(option)) {\r\n                this.value = this.value.concat([option]);\r\n                this.onModelChange(this.value);\r\n            }\r\n        }\r\n        else {\r\n            this.inputEL.nativeElement.value = this.field ? this.objectUtils.resolveFieldData(option, this.field) || '' : option;\r\n            this.value = option;\r\n            this.onModelChange(this.value);\r\n        }\r\n        this.onSelect.emit(option);\r\n        this.updateFilledState();\r\n        if (focus) {\r\n            this.focusInput();\r\n        }\r\n    };\r\n    AutoComplete.prototype.show = function () {\r\n        if (this.multiInputEL || this.inputEL) {\r\n            var hasFocus = this.multiple ? document.activeElement == this.multiInputEL.nativeElement : document.activeElement == this.inputEL.nativeElement;\r\n            if (!this.overlayVisible && hasFocus) {\r\n                this.overlayVisible = true;\r\n            }\r\n        }\r\n    };\r\n    AutoComplete.prototype.onOverlayAnimationStart = function (event) {\r\n        switch (event.toState) {\r\n            case 'visible':\r\n                this.overlay = event.element;\r\n                this.appendOverlay();\r\n                if (this.autoZIndex) {\r\n                    this.overlay.style.zIndex = String(this.baseZIndex + (++domhandler_1.DomHandler.zindex));\r\n                }\r\n                this.alignOverlay();\r\n                this.bindDocumentClickListener();\r\n                break;\r\n            case 'void':\r\n                this.onOverlayHide();\r\n                break;\r\n        }\r\n    };\r\n    AutoComplete.prototype.onOverlayAnimationDone = function (event) {\r\n        if (event.toState === 'void') {\r\n            this._suggestions = null;\r\n        }\r\n    };\r\n    AutoComplete.prototype.appendOverlay = function () {\r\n        if (this.appendTo) {\r\n            if (this.appendTo === 'body')\r\n                document.body.appendChild(this.overlay);\r\n            else\r\n                this.domHandler.appendChild(this.overlay, this.appendTo);\r\n            this.overlay.style.minWidth = this.domHandler.getWidth(this.el.nativeElement.children[0]) + 'px';\r\n        }\r\n    };\r\n    AutoComplete.prototype.restoreOverlayAppend = function () {\r\n        if (this.overlay && this.appendTo) {\r\n            this.el.nativeElement.appendChild(this.overlay);\r\n        }\r\n    };\r\n    AutoComplete.prototype.alignOverlay = function () {\r\n        if (this.appendTo)\r\n            this.domHandler.absolutePosition(this.overlay, (this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement));\r\n        else\r\n            this.domHandler.relativePosition(this.overlay, (this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement));\r\n    };\r\n    AutoComplete.prototype.hide = function () {\r\n        this.overlayVisible = false;\r\n    };\r\n    AutoComplete.prototype.handleDropdownClick = function (event) {\r\n        this.focusInput();\r\n        var queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\r\n        if (this.dropdownMode === 'blank')\r\n            this.search(event, '');\r\n        else if (this.dropdownMode === 'current')\r\n            this.search(event, queryValue);\r\n        this.onDropdownClick.emit({\r\n            originalEvent: event,\r\n            query: queryValue\r\n        });\r\n    };\r\n    AutoComplete.prototype.focusInput = function () {\r\n        if (this.multiple)\r\n            this.multiInputEL.nativeElement.focus();\r\n        else\r\n            this.inputEL.nativeElement.focus();\r\n    };\r\n    AutoComplete.prototype.removeItem = function (item) {\r\n        var itemIndex = this.domHandler.index(item);\r\n        var removedValue = this.value[itemIndex];\r\n        this.value = this.value.filter(function (val, i) { return i != itemIndex; });\r\n        this.onModelChange(this.value);\r\n        this.updateFilledState();\r\n        this.onUnselect.emit(removedValue);\r\n    };\r\n    AutoComplete.prototype.onKeydown = function (event) {\r\n        if (this.overlayVisible) {\r\n            var highlightItemIndex = this.findOptionIndex(this.highlightOption);\r\n            switch (event.which) {\r\n                //down\r\n                case 40:\r\n                    if (highlightItemIndex != -1) {\r\n                        var nextItemIndex = highlightItemIndex + 1;\r\n                        if (nextItemIndex != (this.suggestions.length)) {\r\n                            this.highlightOption = this.suggestions[nextItemIndex];\r\n                            this.highlightOptionChanged = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.highlightOption = this.suggestions[0];\r\n                    }\r\n                    event.preventDefault();\r\n                    break;\r\n                //up\r\n                case 38:\r\n                    if (highlightItemIndex > 0) {\r\n                        var prevItemIndex = highlightItemIndex - 1;\r\n                        this.highlightOption = this.suggestions[prevItemIndex];\r\n                        this.highlightOptionChanged = true;\r\n                    }\r\n                    event.preventDefault();\r\n                    break;\r\n                //enter\r\n                case 13:\r\n                    if (this.highlightOption) {\r\n                        this.selectItem(this.highlightOption);\r\n                        this.hide();\r\n                    }\r\n                    event.preventDefault();\r\n                    break;\r\n                //escape\r\n                case 27:\r\n                    this.hide();\r\n                    event.preventDefault();\r\n                    break;\r\n                //tab\r\n                case 9:\r\n                    if (this.highlightOption) {\r\n                        this.selectItem(this.highlightOption);\r\n                    }\r\n                    this.hide();\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            if (event.which === 40 && this.suggestions) {\r\n                this.search(event, event.target.value);\r\n            }\r\n        }\r\n        if (this.multiple) {\r\n            switch (event.which) {\r\n                //backspace\r\n                case 8:\r\n                    if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {\r\n                        this.value = this.value.slice();\r\n                        var removedValue = this.value.pop();\r\n                        this.onModelChange(this.value);\r\n                        this.updateFilledState();\r\n                        this.onUnselect.emit(removedValue);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        this.inputKeyDown = true;\r\n    };\r\n    AutoComplete.prototype.onKeyup = function (event) {\r\n        this.onKeyUp.emit(event);\r\n    };\r\n    AutoComplete.prototype.onInputFocus = function (event) {\r\n        this.focus = true;\r\n        this.onFocus.emit(event);\r\n    };\r\n    AutoComplete.prototype.onInputBlur = function (event) {\r\n        this.focus = false;\r\n        this.onModelTouched();\r\n        this.onBlur.emit(event);\r\n    };\r\n    AutoComplete.prototype.onInputChange = function (event) {\r\n        if (this.forceSelection && this.suggestions) {\r\n            var valid = false;\r\n            var inputValue = event.target.value.trim();\r\n            if (this.suggestions) {\r\n                for (var _i = 0, _a = this.suggestions; _i < _a.length; _i++) {\r\n                    var suggestion = _a[_i];\r\n                    var itemValue = this.field ? this.objectUtils.resolveFieldData(suggestion, this.field) : suggestion;\r\n                    if (itemValue && inputValue === itemValue.trim()) {\r\n                        valid = true;\r\n                        this.selectItem(suggestion, false);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (!valid) {\r\n                if (this.multiple) {\r\n                    this.multiInputEL.nativeElement.value = '';\r\n                }\r\n                else {\r\n                    this.value = null;\r\n                    this.inputEL.nativeElement.value = '';\r\n                }\r\n                this.onClear.emit(event);\r\n                this.onModelChange(this.value);\r\n            }\r\n        }\r\n    };\r\n    AutoComplete.prototype.onInputPaste = function (event) {\r\n        this.onKeydown(event);\r\n    };\r\n    AutoComplete.prototype.isSelected = function (val) {\r\n        var selected = false;\r\n        if (this.value && this.value.length) {\r\n            for (var i = 0; i < this.value.length; i++) {\r\n                if (this.objectUtils.equals(this.value[i], val, this.dataKey)) {\r\n                    selected = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return selected;\r\n    };\r\n    AutoComplete.prototype.findOptionIndex = function (option) {\r\n        var index = -1;\r\n        if (this.suggestions) {\r\n            for (var i = 0; i < this.suggestions.length; i++) {\r\n                if (this.objectUtils.equals(option, this.suggestions[i])) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    };\r\n    AutoComplete.prototype.updateFilledState = function () {\r\n        if (this.multiple)\r\n            this.filled = (this.value && this.value.length) || (this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '');\r\n        else\r\n            this.filled = (this.inputFieldValue && this.inputFieldValue != '') || (this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '');\r\n        ;\r\n    };\r\n    AutoComplete.prototype.updateInputField = function () {\r\n        var formattedValue = this.value ? (this.field ? this.objectUtils.resolveFieldData(this.value, this.field) || '' : this.value) : '';\r\n        this.inputFieldValue = formattedValue;\r\n        if (this.inputEL && this.inputEL.nativeElement) {\r\n            this.inputEL.nativeElement.value = formattedValue;\r\n        }\r\n        this.updateFilledState();\r\n    };\r\n    AutoComplete.prototype.bindDocumentClickListener = function () {\r\n        var _this = this;\r\n        if (!this.documentClickListener) {\r\n            this.documentClickListener = this.renderer.listen('document', 'click', function (event) {\r\n                if (event.which === 3) {\r\n                    return;\r\n                }\r\n                if (!_this.inputClick && !_this.isDropdownClick(event)) {\r\n                    _this.hide();\r\n                }\r\n                _this.inputClick = false;\r\n                _this.cd.markForCheck();\r\n            });\r\n        }\r\n    };\r\n    AutoComplete.prototype.isDropdownClick = function (event) {\r\n        if (this.dropdown) {\r\n            var target = event.target;\r\n            return (target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    AutoComplete.prototype.unbindDocumentClickListener = function () {\r\n        if (this.documentClickListener) {\r\n            this.documentClickListener();\r\n            this.documentClickListener = null;\r\n        }\r\n    };\r\n    AutoComplete.prototype.onOverlayHide = function () {\r\n        this.unbindDocumentClickListener();\r\n        this.overlay = null;\r\n    };\r\n    AutoComplete.prototype.ngOnDestroy = function () {\r\n        this.restoreOverlayAppend();\r\n        this.onOverlayHide();\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], AutoComplete.prototype, \"minLength\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], AutoComplete.prototype, \"delay\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AutoComplete.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AutoComplete.prototype, \"inputStyle\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"inputId\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"inputStyleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"placeholder\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], AutoComplete.prototype, \"readonly\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], AutoComplete.prototype, \"disabled\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], AutoComplete.prototype, \"maxlength\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], AutoComplete.prototype, \"required\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], AutoComplete.prototype, \"size\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AutoComplete.prototype, \"appendTo\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], AutoComplete.prototype, \"autoHighlight\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], AutoComplete.prototype, \"forceSelection\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"type\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], AutoComplete.prototype, \"autoZIndex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], AutoComplete.prototype, \"baseZIndex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"ariaLabel\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"ariaLabelledBy\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], AutoComplete.prototype, \"completeMethod\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], AutoComplete.prototype, \"onSelect\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], AutoComplete.prototype, \"onUnselect\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], AutoComplete.prototype, \"onFocus\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], AutoComplete.prototype, \"onBlur\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], AutoComplete.prototype, \"onDropdownClick\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], AutoComplete.prototype, \"onClear\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], AutoComplete.prototype, \"onKeyUp\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"field\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"scrollHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], AutoComplete.prototype, \"dropdown\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"dropdownMode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], AutoComplete.prototype, \"multiple\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], AutoComplete.prototype, \"tabindex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"dataKey\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"emptyMessage\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], AutoComplete.prototype, \"immutable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"showTransitionOptions\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], AutoComplete.prototype, \"hideTransitionOptions\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('in'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], AutoComplete.prototype, \"inputEL\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('multiIn'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], AutoComplete.prototype, \"multiInputEL\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('multiContainer'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], AutoComplete.prototype, \"multiContainerEL\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('ddBtn'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], AutoComplete.prototype, \"dropdownButton\", void 0);\r\n    __decorate([\r\n        core_1.ContentChildren(shared_1.PrimeTemplate),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], AutoComplete.prototype, \"templates\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], AutoComplete.prototype, \"suggestions\", null);\r\n    AutoComplete = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-autoComplete',\r\n            template: \"\\n        <span [ngClass]=\\\"{'ui-autocomplete ui-widget':true,'ui-autocomplete-dd':dropdown,'ui-autocomplete-multiple':multiple}\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <input *ngIf=\\\"!multiple\\\" #in [attr.type]=\\\"type\\\" [attr.id]=\\\"inputId\\\" [ngStyle]=\\\"inputStyle\\\" [class]=\\\"inputStyleClass\\\" autocomplete=\\\"off\\\" [attr.required]=\\\"required\\\"\\n            [ngClass]=\\\"'ui-inputtext ui-widget ui-state-default ui-corner-all ui-autocomplete-input'\\\" [value]=\\\"inputFieldValue\\\"\\n            (click)=\\\"onInputClick($event)\\\" (input)=\\\"onInput($event)\\\" (keydown)=\\\"onKeydown($event)\\\" (keyup)=\\\"onKeyup($event)\\\" (focus)=\\\"onInputFocus($event)\\\" (blur)=\\\"onInputBlur($event)\\\" (change)=\\\"onInputChange($event)\\\" (paste)=\\\"onInputPaste($event)\\\"\\n            [attr.placeholder]=\\\"placeholder\\\" [attr.size]=\\\"size\\\" [attr.maxlength]=\\\"maxlength\\\" [attr.tabindex]=\\\"tabindex\\\" [readonly]=\\\"readonly\\\" [disabled]=\\\"disabled\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledBy\\\" [attr.aria-required]=\\\"required\\\"\\n            ><ul *ngIf=\\\"multiple\\\" #multiContainer class=\\\"ui-autocomplete-multiple-container ui-widget ui-inputtext ui-state-default ui-corner-all\\\" [ngClass]=\\\"{'ui-state-disabled':disabled,'ui-state-focus':focus}\\\" (click)=\\\"multiIn.focus()\\\">\\n                <li #token *ngFor=\\\"let val of value\\\" class=\\\"ui-autocomplete-token ui-state-highlight ui-corner-all\\\">\\n                    <span class=\\\"ui-autocomplete-token-icon pi pi-fw pi-times\\\" (click)=\\\"removeItem(token)\\\" *ngIf=\\\"!disabled\\\"></span>\\n                    <span *ngIf=\\\"!selectedItemTemplate\\\" class=\\\"ui-autocomplete-token-label\\\">{{field ? objectUtils.resolveFieldData(val, field): val}}</span>\\n                    <ng-container *ngTemplateOutlet=\\\"selectedItemTemplate; context: {$implicit: val}\\\"></ng-container>\\n                </li>\\n                <li class=\\\"ui-autocomplete-input-token\\\">\\n                    <input #multiIn [attr.type]=\\\"type\\\" [attr.id]=\\\"inputId\\\" [disabled]=\\\"disabled\\\" [attr.placeholder]=\\\"(value&&value.length ? null : placeholder)\\\" [attr.tabindex]=\\\"tabindex\\\" (input)=\\\"onInput($event)\\\"  (click)=\\\"onInputClick($event)\\\"\\n                            (keydown)=\\\"onKeydown($event)\\\" [readonly]=\\\"readonly\\\" (keyup)=\\\"onKeyup($event)\\\" (focus)=\\\"onInputFocus($event)\\\" (blur)=\\\"onInputBlur($event)\\\" (change)=\\\"onInputChange($event)\\\" (paste)=\\\"onInputPaste($event)\\\" autocomplete=\\\"off\\\" \\n                            [ngStyle]=\\\"inputStyle\\\" [class]=\\\"inputStyleClass\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledBy\\\" [attr.aria-required]=\\\"required\\\">\\n                </li>\\n            </ul\\n            ><i *ngIf=\\\"loading\\\" class=\\\"ui-autocomplete-loader pi pi-spinner pi-spin\\\"></i><button #ddBtn type=\\\"button\\\" pButton icon=\\\"pi pi-fw pi-caret-down\\\" class=\\\"ui-autocomplete-dropdown\\\" [disabled]=\\\"disabled\\\"\\n                (click)=\\\"handleDropdownClick($event)\\\" *ngIf=\\\"dropdown\\\"></button>\\n            <div #panel *ngIf=\\\"overlayVisible\\\" class=\\\"ui-autocomplete-panel ui-widget ui-widget-content ui-corner-all ui-shadow\\\" [style.max-height]=\\\"scrollHeight\\\"\\n                [@overlayAnimation]=\\\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\\\" (@overlayAnimation.start)=\\\"onOverlayAnimationStart($event)\\\" (@overlayAnimation.done)=\\\"onOverlayAnimationDone($event)\\\">\\n                <ul class=\\\"ui-autocomplete-items ui-autocomplete-list ui-widget-content ui-widget ui-corner-all ui-helper-reset\\\">\\n                    <li *ngFor=\\\"let option of suggestions; let idx = index\\\" [ngClass]=\\\"{'ui-autocomplete-list-item ui-corner-all':true,'ui-state-highlight':(highlightOption==option)}\\\"\\n                        (mouseenter)=\\\"highlightOption=option\\\" (mouseleave)=\\\"highlightOption=null\\\" (click)=\\\"selectItem(option)\\\">\\n                        <span *ngIf=\\\"!itemTemplate\\\">{{field ? objectUtils.resolveFieldData(option, field) : option}}</span>\\n                        <ng-container *ngTemplateOutlet=\\\"itemTemplate; context: {$implicit: option, index: idx}\\\"></ng-container>\\n                    </li>\\n                    <li *ngIf=\\\"noResults && emptyMessage\\\" class=\\\"ui-autocomplete-list-item ui-corner-all\\\">{{emptyMessage}}</li>\\n                </ul>\\n            </div>\\n        </span>\\n    \",\r\n            animations: [\r\n                animations_1.trigger('overlayAnimation', [\r\n                    animations_1.state('void', animations_1.style({\r\n                        transform: 'translateY(5%)',\r\n                        opacity: 0\r\n                    })),\r\n                    animations_1.state('visible', animations_1.style({\r\n                        transform: 'translateY(0)',\r\n                        opacity: 1\r\n                    })),\r\n                    animations_1.transition('void => visible', animations_1.animate('{{showTransitionParams}}')),\r\n                    animations_1.transition('visible => void', animations_1.animate('{{hideTransitionParams}}'))\r\n                ])\r\n            ],\r\n            host: {\r\n                '[class.ui-inputwrapper-filled]': 'filled',\r\n                '[class.ui-inputwrapper-focus]': 'focus && !disabled'\r\n            },\r\n            providers: [domhandler_1.DomHandler, objectutils_1.ObjectUtils, exports.AUTOCOMPLETE_VALUE_ACCESSOR]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler, core_1.Renderer2, objectutils_1.ObjectUtils, core_1.ChangeDetectorRef, core_1.IterableDiffers])\r\n    ], AutoComplete);\r\n    return AutoComplete;\r\n}());\r\nexports.AutoComplete = AutoComplete;\r\nvar AutoCompleteModule = /** @class */ (function () {\r\n    function AutoCompleteModule() {\r\n    }\r\n    AutoCompleteModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule, inputtext_1.InputTextModule, button_1.ButtonModule, shared_1.SharedModule],\r\n            exports: [AutoComplete, shared_1.SharedModule],\r\n            declarations: [AutoComplete]\r\n        })\r\n    ], AutoCompleteModule);\r\n    return AutoCompleteModule;\r\n}());\r\nexports.AutoCompleteModule = AutoCompleteModule;\r\n//# sourceMappingURL=autocomplete.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/autocomplete/autocomplete.js\n// module id = 1446\n// module chunks = 0 1 2 4 6 7 8 9 10 11 12","/* Shorthand */\r\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./components/breadcrumb/breadcrumb\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/breadcrumb.js\n// module id = 1451\n// module chunks = 0 1 2 4 6 7 8 9 10 12","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar Breadcrumb = /** @class */ (function () {\r\n    function Breadcrumb() {\r\n    }\r\n    Breadcrumb.prototype.itemClick = function (event, item) {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        if (!item.url) {\r\n            event.preventDefault();\r\n        }\r\n        if (item.command) {\r\n            item.command({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n    };\r\n    Breadcrumb.prototype.onHomeClick = function (event) {\r\n        if (this.home) {\r\n            this.itemClick(event, this.home);\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], Breadcrumb.prototype, \"model\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Breadcrumb.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Breadcrumb.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Breadcrumb.prototype, \"home\", void 0);\r\n    Breadcrumb = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-breadcrumb',\r\n            template: \"\\n        <div [class]=\\\"styleClass\\\" [ngStyle]=\\\"style\\\" [ngClass]=\\\"'ui-breadcrumb ui-widget ui-widget-header ui-helper-clearfix ui-corner-all'\\\">\\n            <ul>\\n                <li class=\\\"ui-breadcrumb-home\\\" *ngIf=\\\"home\\\">\\n                    <a *ngIf=\\\"!home.routerLink\\\" [href]=\\\"home.url||'#'\\\" class=\\\"ui-menuitem-link\\\" (click)=\\\"itemClick($event, home)\\\" \\n                        [ngClass]=\\\"{'ui-state-disabled':home.disabled}\\\" [attr.target]=\\\"home.target\\\" [attr.title]=\\\"home.title\\\" [attr.id]=\\\"home.id\\\">\\n                        <span [ngClass]=\\\"home.icon||'pi pi-home'\\\"></span>\\n                    </a>\\n                    <a *ngIf=\\\"home.routerLink\\\" [routerLink]=\\\"home.routerLink\\\" [queryParams]=\\\"home.queryParams\\\" [routerLinkActive]=\\\"'ui-state-active'\\\" [routerLinkActiveOptions]=\\\"home.routerLinkActiveOptions||{exact:false}\\\" class=\\\"ui-menuitem-link\\\" (click)=\\\"itemClick($event, home)\\\" \\n                        [ngClass]=\\\"{'ui-state-disabled':home.disabled}\\\" [attr.target]=\\\"home.target\\\" [attr.title]=\\\"home.title\\\" [attr.id]=\\\"home.id\\\">\\n                        <span [ngClass]=\\\"home.icon||'pi pi-home'\\\"></span>\\n                    </a>\\n                </li>\\n                <li class=\\\"ui-breadcrumb-chevron pi pi-chevron-right\\\" *ngIf=\\\"model&&home\\\"></li>\\n                <ng-template ngFor let-item let-end=\\\"last\\\" [ngForOf]=\\\"model\\\">\\n                    <li role=\\\"menuitem\\\">\\n                        <a *ngIf=\\\"!item.routerLink\\\" [href]=\\\"item.url||'#'\\\" class=\\\"ui-menuitem-link\\\" (click)=\\\"itemClick($event, item)\\\" \\n                            [ngClass]=\\\"{'ui-state-disabled':item.disabled}\\\" [attr.target]=\\\"item.target\\\" [attr.title]=\\\"item.title\\\" [attr.id]=\\\"item.id\\\">\\n                            <span *ngIf=\\\"item.icon\\\" class=\\\"ui-menuitem-icon\\\" [ngClass]=\\\"item.icon\\\"></span>\\n                            <span class=\\\"ui-menuitem-text\\\">{{item.label}}</span>\\n                        </a>\\n                        <a *ngIf=\\\"item.routerLink\\\" [routerLink]=\\\"item.routerLink\\\" [queryParams]=\\\"item.queryParams\\\" [routerLinkActive]=\\\"'ui-state-active'\\\" [routerLinkActiveOptions]=\\\"item.routerLinkActiveOptions||{exact:false}\\\" class=\\\"ui-menuitem-link\\\" (click)=\\\"itemClick($event, item)\\\" \\n                            [ngClass]=\\\"{'ui-state-disabled':item.disabled}\\\" [attr.target]=\\\"item.target\\\" [attr.title]=\\\"item.title\\\" [attr.id]=\\\"item.id\\\">\\n                            <span *ngIf=\\\"item.icon\\\" class=\\\"ui-menuitem-icon\\\" [ngClass]=\\\"item.icon\\\"></span>\\n                            <span class=\\\"ui-menuitem-text\\\">{{item.label}}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"ui-breadcrumb-chevron pi pi-chevron-right\\\" *ngIf=\\\"!end\\\"></li>\\n                </ng-template>\\n            </ul>\\n        </div>\\n    \"\r\n        })\r\n    ], Breadcrumb);\r\n    return Breadcrumb;\r\n}());\r\nexports.Breadcrumb = Breadcrumb;\r\nvar BreadcrumbModule = /** @class */ (function () {\r\n    function BreadcrumbModule() {\r\n    }\r\n    BreadcrumbModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule, router_1.RouterModule],\r\n            exports: [Breadcrumb, router_1.RouterModule],\r\n            declarations: [Breadcrumb]\r\n        })\r\n    ], BreadcrumbModule);\r\n    return BreadcrumbModule;\r\n}());\r\nexports.BreadcrumbModule = BreadcrumbModule;\r\n//# sourceMappingURL=breadcrumb.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/breadcrumb/breadcrumb.js\n// module id = 1452\n// module chunks = 0 1 2 4 6 7 8 9 10 12","/* Shorthand */\r\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./components/checkbox/checkbox\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/checkbox.js\n// module id = 1455\n// module chunks = 0 1 6 7 8 9 10 11 12","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nexports.CHECKBOX_VALUE_ACCESSOR = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return Checkbox; }),\r\n    multi: true\r\n};\r\nvar Checkbox = /** @class */ (function () {\r\n    function Checkbox(cd) {\r\n        this.cd = cd;\r\n        this.onChange = new core_1.EventEmitter();\r\n        this.onModelChange = function () { };\r\n        this.onModelTouched = function () { };\r\n        this.focused = false;\r\n        this.checked = false;\r\n    }\r\n    Checkbox.prototype.onClick = function (event, checkbox, focus) {\r\n        event.preventDefault();\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        this.checked = !this.checked;\r\n        this.updateModel();\r\n        if (focus) {\r\n            checkbox.focus();\r\n        }\r\n    };\r\n    Checkbox.prototype.updateModel = function () {\r\n        if (!this.binary) {\r\n            if (this.checked)\r\n                this.addValue();\r\n            else\r\n                this.removeValue();\r\n            this.onModelChange(this.model);\r\n            if (this.formControl) {\r\n                this.formControl.setValue(this.model);\r\n            }\r\n        }\r\n        else {\r\n            this.onModelChange(this.checked);\r\n        }\r\n        this.onChange.emit(this.checked);\r\n    };\r\n    Checkbox.prototype.handleChange = function (event) {\r\n        this.checked = event.target.checked;\r\n        this.updateModel();\r\n    };\r\n    Checkbox.prototype.isChecked = function () {\r\n        if (this.binary)\r\n            return this.model;\r\n        else\r\n            return this.model && this.model.indexOf(this.value) > -1;\r\n    };\r\n    Checkbox.prototype.removeValue = function () {\r\n        var _this = this;\r\n        this.model = this.model.filter(function (val) { return val !== _this.value; });\r\n    };\r\n    Checkbox.prototype.addValue = function () {\r\n        if (this.model)\r\n            this.model = this.model.concat([this.value]);\r\n        else\r\n            this.model = [this.value];\r\n    };\r\n    Checkbox.prototype.onFocus = function (event) {\r\n        this.focused = true;\r\n    };\r\n    Checkbox.prototype.onBlur = function (event) {\r\n        this.focused = false;\r\n        this.onModelTouched();\r\n    };\r\n    Checkbox.prototype.writeValue = function (model) {\r\n        this.model = model;\r\n        this.checked = this.isChecked();\r\n        this.cd.markForCheck();\r\n    };\r\n    Checkbox.prototype.registerOnChange = function (fn) {\r\n        this.onModelChange = fn;\r\n    };\r\n    Checkbox.prototype.registerOnTouched = function (fn) {\r\n        this.onModelTouched = fn;\r\n    };\r\n    Checkbox.prototype.setDisabledState = function (val) {\r\n        this.disabled = val;\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Checkbox.prototype, \"value\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Checkbox.prototype, \"name\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Checkbox.prototype, \"disabled\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Checkbox.prototype, \"binary\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Checkbox.prototype, \"label\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Checkbox.prototype, \"tabindex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Checkbox.prototype, \"inputId\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Checkbox.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Checkbox.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Checkbox.prototype, \"labelStyleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", forms_1.FormControl)\r\n    ], Checkbox.prototype, \"formControl\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Checkbox.prototype, \"onChange\", void 0);\r\n    Checkbox = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-checkbox',\r\n            template: \"\\n        <div [ngStyle]=\\\"style\\\" [ngClass]=\\\"'ui-chkbox ui-widget'\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #cb type=\\\"checkbox\\\" [attr.id]=\\\"inputId\\\" [name]=\\\"name\\\" [value]=\\\"value\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\"\\n                [ngClass]=\\\"{'ui-state-focus':focused}\\\" (change)=\\\"handleChange($event)\\\" [disabled]=\\\"disabled\\\" [attr.tabindex]=\\\"tabindex\\\">\\n            </div>\\n            <div class=\\\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\\\" (click)=\\\"onClick($event,cb,true)\\\"\\n                        [ngClass]=\\\"{'ui-state-active':checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\\\">\\n                <span class=\\\"ui-chkbox-icon ui-clickable\\\" [ngClass]=\\\"{'pi pi-check':checked}\\\"></span>\\n            </div>\\n        </div>\\n        <label (click)=\\\"onClick($event,cb,true)\\\" [class]=\\\"labelStyleClass\\\"\\n                [ngClass]=\\\"{'ui-chkbox-label': true, 'ui-label-active':checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\\\"\\n                *ngIf=\\\"label\\\" [attr.for]=\\\"inputId\\\">{{label}}</label>\\n    \",\r\n            providers: [exports.CHECKBOX_VALUE_ACCESSOR]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])\r\n    ], Checkbox);\r\n    return Checkbox;\r\n}());\r\nexports.Checkbox = Checkbox;\r\nvar CheckboxModule = /** @class */ (function () {\r\n    function CheckboxModule() {\r\n    }\r\n    CheckboxModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule],\r\n            exports: [Checkbox],\r\n            declarations: [Checkbox]\r\n        })\r\n    ], CheckboxModule);\r\n    return CheckboxModule;\r\n}());\r\nexports.CheckboxModule = CheckboxModule;\r\n//# sourceMappingURL=checkbox.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/checkbox/checkbox.js\n// module id = 1456\n// module chunks = 0 1 6 7 8 9 10 11 12","/* Shorthand */\r\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./components/dialog/dialog\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/dialog.js\n// module id = 1457\n// module chunks = 0 1 2 4 5 6 7 8 9","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar animations_1 = require(\"@angular/animations\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar domhandler_1 = require(\"../dom/domhandler\");\r\nvar shared_1 = require(\"../common/shared\");\r\nvar idx = 0;\r\nvar Dialog = /** @class */ (function () {\r\n    function Dialog(el, domHandler, renderer, zone) {\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.renderer = renderer;\r\n        this.zone = zone;\r\n        this.draggable = true;\r\n        this.resizable = true;\r\n        this.minWidth = 150;\r\n        this.minHeight = 150;\r\n        this.closeOnEscape = true;\r\n        this.closable = true;\r\n        this.responsive = true;\r\n        this.showHeader = true;\r\n        this.breakpoint = 640;\r\n        this.blockScroll = false;\r\n        this.autoZIndex = true;\r\n        this.baseZIndex = 0;\r\n        this.minX = 0;\r\n        this.minY = 0;\r\n        this.focusOnShow = true;\r\n        this.transitionOptions = '400ms cubic-bezier(0.25, 0.8, 0.25, 1)';\r\n        this.onShow = new core_1.EventEmitter();\r\n        this.onHide = new core_1.EventEmitter();\r\n        this.visibleChange = new core_1.EventEmitter();\r\n        this.id = \"ui-dialog-\" + idx++;\r\n    }\r\n    Dialog.prototype.focus = function () {\r\n        var focusable = this.domHandler.findSingle(this.container, 'button');\r\n        if (focusable) {\r\n            this.zone.runOutsideAngular(function () {\r\n                setTimeout(function () { return focusable.focus(); }, 5);\r\n            });\r\n        }\r\n    };\r\n    Dialog.prototype.positionOverlay = function () {\r\n        var viewport = this.domHandler.getViewport();\r\n        if (this.domHandler.getOuterHeight(this.container) > viewport.height) {\r\n            this.contentViewChild.nativeElement.style.height = (viewport.height * .75) + 'px';\r\n            this.container.style.height = 'auto';\r\n        }\r\n        else {\r\n            this.contentViewChild.nativeElement.style.height = null;\r\n            if (this.height) {\r\n                this.container.style.height = this.height + 'px';\r\n            }\r\n        }\r\n        if (this.positionLeft >= 0 && this.positionTop >= 0) {\r\n            this.container.style.left = this.positionLeft + 'px';\r\n            this.container.style.top = this.positionTop + 'px';\r\n        }\r\n        else if (this.positionTop >= 0) {\r\n            this.center();\r\n            this.container.style.top = this.positionTop + 'px';\r\n        }\r\n        else {\r\n            this.center();\r\n        }\r\n    };\r\n    Dialog.prototype.close = function (event) {\r\n        this.visibleChange.emit(false);\r\n        event.preventDefault();\r\n    };\r\n    Dialog.prototype.center = function () {\r\n        var elementWidth = this.domHandler.getOuterWidth(this.container);\r\n        var elementHeight = this.domHandler.getOuterHeight(this.container);\r\n        if (elementWidth == 0 && elementHeight == 0) {\r\n            this.container.style.visibility = 'hidden';\r\n            this.container.style.display = 'block';\r\n            elementWidth = this.domHandler.getOuterWidth(this.container);\r\n            elementHeight = this.domHandler.getOuterHeight(this.container);\r\n            this.container.style.display = 'none';\r\n            this.container.style.visibility = 'visible';\r\n        }\r\n        var viewport = this.domHandler.getViewport();\r\n        var x = Math.max(Math.floor((viewport.width - elementWidth) / 2), 0);\r\n        var y = Math.max(Math.floor((viewport.height - elementHeight) / 2), 0);\r\n        this.container.style.left = x + 'px';\r\n        this.container.style.top = y + 'px';\r\n    };\r\n    Dialog.prototype.enableModality = function () {\r\n        var _this = this;\r\n        if (!this.mask) {\r\n            this.mask = document.createElement('div');\r\n            this.mask.style.zIndex = String(parseInt(this.container.style.zIndex) - 1);\r\n            var maskStyleClass = 'ui-widget-overlay ui-dialog-mask';\r\n            if (this.blockScroll) {\r\n                maskStyleClass += ' ui-dialog-mask-scrollblocker';\r\n            }\r\n            this.domHandler.addMultipleClasses(this.mask, maskStyleClass);\r\n            if (this.closable && this.dismissableMask) {\r\n                this.maskClickListener = this.renderer.listen(this.mask, 'click', function (event) {\r\n                    _this.close(event);\r\n                });\r\n            }\r\n            document.body.appendChild(this.mask);\r\n            if (this.blockScroll) {\r\n                this.domHandler.addClass(document.body, 'ui-overflow-hidden');\r\n            }\r\n        }\r\n    };\r\n    Dialog.prototype.disableModality = function () {\r\n        if (this.mask) {\r\n            this.unbindMaskClickListener();\r\n            document.body.removeChild(this.mask);\r\n            if (this.blockScroll) {\r\n                var bodyChildren = document.body.children;\r\n                var hasBlockerMasks = void 0;\r\n                for (var i = 0; i < bodyChildren.length; i++) {\r\n                    var bodyChild = bodyChildren[i];\r\n                    if (this.domHandler.hasClass(bodyChild, 'ui-dialog-mask-scrollblocker')) {\r\n                        hasBlockerMasks = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!hasBlockerMasks) {\r\n                    this.domHandler.removeClass(document.body, 'ui-overflow-hidden');\r\n                }\r\n            }\r\n            this.mask = null;\r\n        }\r\n    };\r\n    Dialog.prototype.toggleMaximize = function (event) {\r\n        if (this.maximized)\r\n            this.revertMaximize();\r\n        else\r\n            this.maximize();\r\n        event.preventDefault();\r\n    };\r\n    Dialog.prototype.maximize = function () {\r\n        this.domHandler.addClass(this.container, 'ui-dialog-maximized');\r\n        this.preMaximizePageX = parseFloat(this.container.style.top);\r\n        this.preMaximizePageY = parseFloat(this.container.style.left);\r\n        this.preMaximizeContainerWidth = this.domHandler.getOuterWidth(this.container);\r\n        this.preMaximizeContainerHeight = this.domHandler.getOuterHeight(this.container);\r\n        this.preMaximizeContentHeight = this.domHandler.getOuterHeight(this.contentViewChild.nativeElement);\r\n        this.container.style.top = '0px';\r\n        this.container.style.left = '0px';\r\n        this.container.style.width = '100vw';\r\n        this.container.style.height = '100vh';\r\n        var diffHeight = parseFloat(this.container.style.top);\r\n        if (this.headerViewChild && this.headerViewChild.nativeElement) {\r\n            diffHeight += this.domHandler.getOuterHeight(this.headerViewChild.nativeElement);\r\n        }\r\n        if (this.footerViewChild && this.footerViewChild.nativeElement) {\r\n            diffHeight += this.domHandler.getOuterHeight(this.footerViewChild.nativeElement);\r\n        }\r\n        this.contentViewChild.nativeElement.style.height = 'calc(100vh - ' + diffHeight + 'px)';\r\n        this.domHandler.addClass(document.body, 'ui-overflow-hidden');\r\n        this.maximized = true;\r\n    };\r\n    Dialog.prototype.revertMaximize = function () {\r\n        var _this = this;\r\n        this.container.style.top = this.preMaximizePageX + 'px';\r\n        this.container.style.left = this.preMaximizePageY + 'px';\r\n        this.container.style.width = this.preMaximizeContainerWidth + 'px';\r\n        this.container.style.height = this.preMaximizeContainerHeight + 'px';\r\n        this.contentViewChild.nativeElement.style.height = this.preMaximizeContentHeight + 'px';\r\n        this.domHandler.removeClass(document.body, 'ui-overflow-hidden');\r\n        this.maximized = false;\r\n        this.zone.runOutsideAngular(function () {\r\n            setTimeout(function () { return _this.domHandler.removeClass(_this.container, 'ui-dialog-maximized'); }, 300);\r\n        });\r\n    };\r\n    Dialog.prototype.unbindMaskClickListener = function () {\r\n        if (this.maskClickListener) {\r\n            this.maskClickListener();\r\n            this.maskClickListener = null;\r\n        }\r\n    };\r\n    Dialog.prototype.moveOnTop = function () {\r\n        if (this.autoZIndex) {\r\n            this.container.style.zIndex = String(this.baseZIndex + (++domhandler_1.DomHandler.zindex));\r\n        }\r\n    };\r\n    Dialog.prototype.onCloseMouseDown = function (event) {\r\n        this.closeIconMouseDown = true;\r\n    };\r\n    Dialog.prototype.initDrag = function (event) {\r\n        if (this.closeIconMouseDown) {\r\n            this.closeIconMouseDown = false;\r\n            return;\r\n        }\r\n        if (this.draggable) {\r\n            this.dragging = true;\r\n            this.lastPageX = event.pageX;\r\n            this.lastPageY = event.pageY;\r\n            this.domHandler.addClass(document.body, 'ui-unselectable-text');\r\n        }\r\n    };\r\n    Dialog.prototype.onDrag = function (event) {\r\n        if (this.dragging) {\r\n            var deltaX = event.pageX - this.lastPageX;\r\n            var deltaY = event.pageY - this.lastPageY;\r\n            var leftPos = parseInt(this.container.style.left) + deltaX;\r\n            var topPos = parseInt(this.container.style.top) + deltaY;\r\n            if (leftPos >= this.minX) {\r\n                this.container.style.left = leftPos + 'px';\r\n            }\r\n            if (topPos >= this.minY) {\r\n                this.container.style.top = topPos + 'px';\r\n            }\r\n            this.lastPageX = event.pageX;\r\n            this.lastPageY = event.pageY;\r\n        }\r\n    };\r\n    Dialog.prototype.endDrag = function (event) {\r\n        if (this.draggable) {\r\n            this.dragging = false;\r\n            this.domHandler.removeClass(document.body, 'ui-unselectable-text');\r\n        }\r\n    };\r\n    Dialog.prototype.initResize = function (event) {\r\n        if (this.resizable) {\r\n            this.preWidth = null;\r\n            this.resizing = true;\r\n            this.lastPageX = event.pageX;\r\n            this.lastPageY = event.pageY;\r\n            this.domHandler.addClass(document.body, 'ui-unselectable-text');\r\n        }\r\n    };\r\n    Dialog.prototype.onResize = function (event) {\r\n        if (this.resizing) {\r\n            var deltaX = event.pageX - this.lastPageX;\r\n            var deltaY = event.pageY - this.lastPageY;\r\n            var containerWidth = this.domHandler.getOuterWidth(this.container);\r\n            var containerHeight = this.domHandler.getOuterHeight(this.container);\r\n            var contentHeight = this.domHandler.getOuterHeight(this.contentViewChild.nativeElement);\r\n            var newWidth = containerWidth + deltaX;\r\n            var newHeight = containerHeight + deltaY;\r\n            if (newWidth > this.minWidth) {\r\n                this.container.style.width = newWidth + 'px';\r\n            }\r\n            if (newHeight > this.minHeight) {\r\n                this.container.style.height = newHeight + 'px';\r\n                this.contentViewChild.nativeElement.style.height = contentHeight + deltaY + 'px';\r\n            }\r\n            this.lastPageX = event.pageX;\r\n            this.lastPageY = event.pageY;\r\n        }\r\n    };\r\n    Dialog.prototype.onResizeEnd = function (event) {\r\n        if (this.resizing) {\r\n            this.resizing = false;\r\n            this.domHandler.removeClass(document.body, 'ui-unselectable-text');\r\n        }\r\n    };\r\n    Dialog.prototype.bindGlobalListeners = function () {\r\n        if (this.draggable) {\r\n            this.bindDocumentDragListener();\r\n            this.bindDocumentDragEndListener();\r\n        }\r\n        if (this.resizable) {\r\n            this.bindDocumentResizeListeners();\r\n        }\r\n        if (this.responsive) {\r\n            this.bindDocumentResponsiveListener();\r\n        }\r\n        if (this.closeOnEscape && this.closable) {\r\n            this.bindDocumentEscapeListener();\r\n        }\r\n    };\r\n    Dialog.prototype.unbindGlobalListeners = function () {\r\n        this.unbindDocumentDragListener();\r\n        this.unbindDocumentDragEndListener();\r\n        this.unbindDocumentResizeListeners();\r\n        this.unbindDocumentResponsiveListener();\r\n        this.unbindDocumentEscapeListener();\r\n    };\r\n    Dialog.prototype.bindDocumentDragListener = function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular(function () {\r\n            _this.documentDragListener = _this.onDrag.bind(_this);\r\n            window.document.addEventListener('mousemove', _this.documentDragListener);\r\n        });\r\n    };\r\n    Dialog.prototype.unbindDocumentDragListener = function () {\r\n        if (this.documentDragListener) {\r\n            window.document.removeEventListener('mousemove', this.documentDragListener);\r\n            this.documentDragListener = null;\r\n        }\r\n    };\r\n    Dialog.prototype.bindDocumentDragEndListener = function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular(function () {\r\n            _this.documentDragEndListener = _this.endDrag.bind(_this);\r\n            window.document.addEventListener('mouseup', _this.documentDragEndListener);\r\n        });\r\n    };\r\n    Dialog.prototype.unbindDocumentDragEndListener = function () {\r\n        if (this.documentDragEndListener) {\r\n            window.document.removeEventListener('mouseup', this.documentDragEndListener);\r\n            this.documentDragEndListener = null;\r\n        }\r\n    };\r\n    Dialog.prototype.bindDocumentResizeListeners = function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular(function () {\r\n            _this.documentResizeListener = _this.onResize.bind(_this);\r\n            _this.documentResizeEndListener = _this.onResizeEnd.bind(_this);\r\n            window.document.addEventListener('mousemove', _this.documentResizeListener);\r\n            window.document.addEventListener('mouseup', _this.documentResizeEndListener);\r\n        });\r\n    };\r\n    Dialog.prototype.unbindDocumentResizeListeners = function () {\r\n        if (this.documentResizeListener && this.documentResizeEndListener) {\r\n            window.document.removeEventListener('mouseup', this.documentResizeListener);\r\n            window.document.removeEventListener('mouseup', this.documentResizeEndListener);\r\n            this.documentResizeListener = null;\r\n            this.documentResizeEndListener = null;\r\n        }\r\n    };\r\n    Dialog.prototype.bindDocumentResponsiveListener = function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular(function () {\r\n            _this.documentResponsiveListener = _this.onWindowResize.bind(_this);\r\n            window.addEventListener('resize', _this.documentResponsiveListener);\r\n        });\r\n    };\r\n    Dialog.prototype.unbindDocumentResponsiveListener = function () {\r\n        if (this.documentResponsiveListener) {\r\n            window.removeEventListener('resize', this.documentResponsiveListener);\r\n            this.documentResponsiveListener = null;\r\n        }\r\n    };\r\n    Dialog.prototype.onWindowResize = function (event) {\r\n        if (this.maximized) {\r\n            return;\r\n        }\r\n        var viewport = this.domHandler.getViewport();\r\n        var width = this.domHandler.getOuterWidth(this.container);\r\n        if (viewport.width <= this.breakpoint) {\r\n            if (!this.preWidth) {\r\n                this.preWidth = width;\r\n            }\r\n            this.container.style.left = '0px';\r\n            this.container.style.width = '100%';\r\n        }\r\n        else {\r\n            this.container.style.width = this.preWidth + 'px';\r\n            this.positionOverlay();\r\n        }\r\n    };\r\n    Dialog.prototype.bindDocumentEscapeListener = function () {\r\n        var _this = this;\r\n        this.documentEscapeListener = this.renderer.listen('document', 'keydown', function (event) {\r\n            if (event.which == 27) {\r\n                if (parseInt(_this.container.style.zIndex) == domhandler_1.DomHandler.zindex) {\r\n                    _this.close(event);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Dialog.prototype.unbindDocumentEscapeListener = function () {\r\n        if (this.documentEscapeListener) {\r\n            this.documentEscapeListener();\r\n            this.documentEscapeListener = null;\r\n        }\r\n    };\r\n    Dialog.prototype.appendContainer = function () {\r\n        if (this.appendTo) {\r\n            if (this.appendTo === 'body')\r\n                document.body.appendChild(this.container);\r\n            else\r\n                this.domHandler.appendChild(this.container, this.appendTo);\r\n        }\r\n    };\r\n    Dialog.prototype.restoreAppend = function () {\r\n        if (this.container && this.appendTo) {\r\n            this.el.nativeElement.appendChild(this.container);\r\n        }\r\n    };\r\n    Dialog.prototype.onAnimationStart = function (event) {\r\n        switch (event.toState) {\r\n            case 'visible':\r\n                this.container = event.element;\r\n                this.onShow.emit({});\r\n                this.appendContainer();\r\n                this.moveOnTop();\r\n                this.positionOverlay();\r\n                this.bindGlobalListeners();\r\n                if (this.maximized) {\r\n                    this.domHandler.addClass(document.body, 'ui-overflow-hidden');\r\n                }\r\n                if (this.modal) {\r\n                    this.enableModality();\r\n                }\r\n                if (this.focusOnShow) {\r\n                    this.focus();\r\n                }\r\n                break;\r\n            case 'void':\r\n                this.onContainerDestroy();\r\n                this.onHide.emit({});\r\n                break;\r\n        }\r\n    };\r\n    Dialog.prototype.onContainerDestroy = function () {\r\n        this.unbindGlobalListeners();\r\n        this.dragging = false;\r\n        if (this.maximized) {\r\n            this.domHandler.removeClass(document.body, 'ui-overflow-hidden');\r\n            this.maximized = false;\r\n        }\r\n        if (this.modal) {\r\n            this.disableModality();\r\n        }\r\n        this.container = null;\r\n    };\r\n    Dialog.prototype.ngOnDestroy = function () {\r\n        if (this.container) {\r\n            this.restoreAppend();\r\n            this.onContainerDestroy();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"visible\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dialog.prototype, \"header\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"draggable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"resizable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Dialog.prototype, \"minWidth\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Dialog.prototype, \"minHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Dialog.prototype, \"width\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Dialog.prototype, \"height\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Dialog.prototype, \"positionLeft\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Dialog.prototype, \"positionTop\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Dialog.prototype, \"contentStyle\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"modal\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"closeOnEscape\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"dismissableMask\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"rtl\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"closable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"responsive\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Dialog.prototype, \"appendTo\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Dialog.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dialog.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"showHeader\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Dialog.prototype, \"breakpoint\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"blockScroll\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"autoZIndex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Dialog.prototype, \"baseZIndex\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Dialog.prototype, \"minX\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], Dialog.prototype, \"minY\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"focusOnShow\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Dialog.prototype, \"maximizable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Dialog.prototype, \"transitionOptions\", void 0);\r\n    __decorate([\r\n        core_1.ContentChildren(shared_1.Header, { descendants: false }),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], Dialog.prototype, \"headerFacet\", void 0);\r\n    __decorate([\r\n        core_1.ContentChildren(shared_1.Footer, { descendants: false }),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], Dialog.prototype, \"footerFacet\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('titlebar'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], Dialog.prototype, \"headerViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('content'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], Dialog.prototype, \"contentViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('footer'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], Dialog.prototype, \"footerViewChild\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Dialog.prototype, \"onShow\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Dialog.prototype, \"onHide\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Dialog.prototype, \"visibleChange\", void 0);\r\n    Dialog = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-dialog',\r\n            template: \"\\n        <div #container [ngClass]=\\\"{'ui-dialog ui-widget ui-widget-content ui-corner-all ui-shadow':true, 'ui-dialog-rtl':rtl,'ui-dialog-draggable':draggable}\\\"\\n            [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" [style.width.px]=\\\"width\\\" [style.height.px]=\\\"height\\\" [style.minWidth.px]=\\\"minWidth\\\" [style.minHeight.px]=\\\"minHeight\\\" (mousedown)=\\\"moveOnTop()\\\" \\n            [@animation]=\\\"{value: 'visible', params: {transitionParams: transitionOptions}}\\\" (@animation.start)=\\\"onAnimationStart($event)\\\" role=\\\"dialog\\\" [attr.aria-labelledby]=\\\"id + '-label'\\\" *ngIf=\\\"visible\\\">\\n            <div #titlebar class=\\\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\\\" (mousedown)=\\\"initDrag($event)\\\" *ngIf=\\\"showHeader\\\">\\n                <span [attr.id]=\\\"id + '-label'\\\" class=\\\"ui-dialog-title\\\" *ngIf=\\\"header\\\">{{header}}</span>\\n                <span [attr.id]=\\\"id + '-label'\\\" class=\\\"ui-dialog-title\\\" *ngIf=\\\"headerFacet && headerFacet.first\\\">\\n                    <ng-content select=\\\"p-header\\\"></ng-content>\\n                </span>\\n                <a *ngIf=\\\"closable\\\" [ngClass]=\\\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all':true}\\\" href=\\\"#\\\" role=\\\"button\\\" (click)=\\\"close($event)\\\" (mousedown)=\\\"onCloseMouseDown($event)\\\">\\n                    <span class=\\\"pi pi-times\\\"></span>\\n                </a>\\n                <a *ngIf=\\\"maximizable\\\" [ngClass]=\\\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-maximize ui-corner-all':true}\\\" href=\\\"#\\\" role=\\\"button\\\" (click)=\\\"toggleMaximize($event)\\\">\\n                    <span [ngClass]=\\\"maximized ? 'pi pi-window-minimize' : 'pi pi-window-maximize'\\\"></span>\\n                </a>\\n            </div>\\n            <div #content class=\\\"ui-dialog-content ui-widget-content\\\" [ngStyle]=\\\"contentStyle\\\">\\n                <ng-content></ng-content>\\n            </div>\\n            <div #footer class=\\\"ui-dialog-footer ui-widget-content\\\" *ngIf=\\\"footerFacet && footerFacet.first\\\">\\n                <ng-content select=\\\"p-footer\\\"></ng-content>\\n            </div>\\n            <div *ngIf=\\\"resizable\\\" class=\\\"ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se\\\" style=\\\"z-index: 90;\\\" (mousedown)=\\\"initResize($event)\\\"></div>\\n        </div>\\n    \",\r\n            animations: [\r\n                animations_1.trigger('animation', [\r\n                    animations_1.state('void', animations_1.style({\r\n                        transform: 'translate3d(0, 25%, 0) scale(0.9)',\r\n                        opacity: 0\r\n                    })),\r\n                    animations_1.state('visible', animations_1.style({\r\n                        transform: 'none',\r\n                        opacity: 1\r\n                    })),\r\n                    animations_1.transition('* => *', animations_1.animate('{{transitionParams}}'))\r\n                ])\r\n            ],\r\n            providers: [domhandler_1.DomHandler]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler, core_1.Renderer2, core_1.NgZone])\r\n    ], Dialog);\r\n    return Dialog;\r\n}());\r\nexports.Dialog = Dialog;\r\nvar DialogModule = /** @class */ (function () {\r\n    function DialogModule() {\r\n    }\r\n    DialogModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule],\r\n            exports: [Dialog, shared_1.SharedModule],\r\n            declarations: [Dialog]\r\n        })\r\n    ], DialogModule);\r\n    return DialogModule;\r\n}());\r\nexports.DialogModule = DialogModule;\r\n//# sourceMappingURL=dialog.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/dialog/dialog.js\n// module id = 1458\n// module chunks = 0 1 2 4 5 6 7 8 9","/* Shorthand */\r\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./components/treetable/treetable\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/treetable.js\n// module id = 1465\n// module chunks = 0 1 5 7 9 11","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar domhandler_1 = require(\"../dom/domhandler\");\r\nvar paginator_1 = require(\"../paginator/paginator\");\r\nvar shared_1 = require(\"../common/shared\");\r\nvar objectutils_1 = require(\"../utils/objectutils\");\r\nvar TreeTableService = /** @class */ (function () {\r\n    function TreeTableService() {\r\n        this.sortSource = new rxjs_1.Subject();\r\n        this.selectionSource = new rxjs_1.Subject();\r\n        this.contextMenuSource = new rxjs_1.Subject();\r\n        this.uiUpdateSource = new rxjs_1.Subject();\r\n        this.sortSource$ = this.sortSource.asObservable();\r\n        this.selectionSource$ = this.selectionSource.asObservable();\r\n        this.contextMenuSource$ = this.contextMenuSource.asObservable();\r\n        this.uiUpdateSource$ = this.uiUpdateSource.asObservable();\r\n    }\r\n    TreeTableService.prototype.onSort = function (sortMeta) {\r\n        this.sortSource.next(sortMeta);\r\n    };\r\n    TreeTableService.prototype.onSelectionChange = function () {\r\n        this.selectionSource.next();\r\n    };\r\n    TreeTableService.prototype.onContextMenu = function (node) {\r\n        this.contextMenuSource.next(node);\r\n    };\r\n    TreeTableService.prototype.onUIUpdate = function (value) {\r\n        this.uiUpdateSource.next(value);\r\n    };\r\n    TreeTableService = __decorate([\r\n        core_1.Injectable()\r\n    ], TreeTableService);\r\n    return TreeTableService;\r\n}());\r\nexports.TreeTableService = TreeTableService;\r\nvar TreeTable = /** @class */ (function () {\r\n    function TreeTable(el, domHandler, objectUtils, zone, tableService) {\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.objectUtils = objectUtils;\r\n        this.zone = zone;\r\n        this.tableService = tableService;\r\n        this.lazy = false;\r\n        this.first = 0;\r\n        this.totalRecords = 0;\r\n        this.pageLinks = 5;\r\n        this.alwaysShowPaginator = true;\r\n        this.paginatorPosition = 'bottom';\r\n        this.defaultSortOrder = 1;\r\n        this.sortMode = 'single';\r\n        this.resetPageOnSort = true;\r\n        this.selectionChange = new core_1.EventEmitter();\r\n        this.contextMenuSelectionChange = new core_1.EventEmitter();\r\n        this.contextMenuSelectionMode = \"separate\";\r\n        this.compareSelectionBy = 'deepEquals';\r\n        this.loadingIcon = 'pi pi-spinner';\r\n        this.columnResizeMode = 'fit';\r\n        this.rowTrackBy = function (index, item) { return item; };\r\n        this.onNodeExpand = new core_1.EventEmitter();\r\n        this.onNodeCollapse = new core_1.EventEmitter();\r\n        this.onPage = new core_1.EventEmitter();\r\n        this.onSort = new core_1.EventEmitter();\r\n        this.onLazyLoad = new core_1.EventEmitter();\r\n        this.sortFunction = new core_1.EventEmitter();\r\n        this.onColResize = new core_1.EventEmitter();\r\n        this.onColReorder = new core_1.EventEmitter();\r\n        this.onNodeSelect = new core_1.EventEmitter();\r\n        this.onNodeUnselect = new core_1.EventEmitter();\r\n        this.onContextMenuSelect = new core_1.EventEmitter();\r\n        this.onHeaderCheckboxToggle = new core_1.EventEmitter();\r\n        this.onEditInit = new core_1.EventEmitter();\r\n        this.onEditComplete = new core_1.EventEmitter();\r\n        this.onEditCancel = new core_1.EventEmitter();\r\n        this._value = [];\r\n        this._sortOrder = 1;\r\n        this.selectionKeys = {};\r\n    }\r\n    TreeTable.prototype.ngOnInit = function () {\r\n        if (this.lazy) {\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        }\r\n        this.initialized = true;\r\n    };\r\n    TreeTable.prototype.ngAfterContentInit = function () {\r\n        var _this = this;\r\n        this.templates.forEach(function (item) {\r\n            switch (item.getType()) {\r\n                case 'caption':\r\n                    _this.captionTemplate = item.template;\r\n                    break;\r\n                case 'header':\r\n                    _this.headerTemplate = item.template;\r\n                    break;\r\n                case 'body':\r\n                    _this.bodyTemplate = item.template;\r\n                    break;\r\n                case 'footer':\r\n                    _this.footerTemplate = item.template;\r\n                    break;\r\n                case 'summary':\r\n                    _this.summaryTemplate = item.template;\r\n                    break;\r\n                case 'colgroup':\r\n                    _this.colGroupTemplate = item.template;\r\n                    break;\r\n                case 'emptymessage':\r\n                    _this.emptyMessageTemplate = item.template;\r\n                    break;\r\n                case 'paginatorleft':\r\n                    _this.paginatorLeftTemplate = item.template;\r\n                    break;\r\n                case 'paginatorright':\r\n                    _this.paginatorRightTemplate = item.template;\r\n                    break;\r\n                case 'frozenheader':\r\n                    _this.frozenHeaderTemplate = item.template;\r\n                    break;\r\n                case 'frozenbody':\r\n                    _this.frozenBodyTemplate = item.template;\r\n                    break;\r\n                case 'frozenfooter':\r\n                    _this.frozenFooterTemplate = item.template;\r\n                    break;\r\n                case 'frozencolgroup':\r\n                    _this.frozenColGroupTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(TreeTable.prototype, \"value\", {\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        set: function (val) {\r\n            this._value = val;\r\n            if (!this.lazy) {\r\n                this.totalRecords = (this._value ? this._value.length : 0);\r\n                if (this.sortMode == 'single' && this.sortField)\r\n                    this.sortSingle();\r\n                else if (this.sortMode == 'multiple' && this.multiSortMeta)\r\n                    this.sortMultiple();\r\n            }\r\n            this.updateSerializedValue();\r\n            this.tableService.onUIUpdate(this.value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TreeTable.prototype.updateSerializedValue = function () {\r\n        this.serializedValue = [];\r\n        if (this.paginator)\r\n            this.serializePageNodes();\r\n        else\r\n            this.serializeNodes(null, this.value, 0, true);\r\n    };\r\n    TreeTable.prototype.serializeNodes = function (parent, nodes, level, visible) {\r\n        if (nodes && nodes.length) {\r\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\r\n                var node = nodes_1[_i];\r\n                node.parent = parent;\r\n                var rowNode = {\r\n                    node: node,\r\n                    parent: parent,\r\n                    level: level,\r\n                    visible: visible && (parent ? parent.expanded : true)\r\n                };\r\n                this.serializedValue.push(rowNode);\r\n                this.serializeNodes(node, node.children, level + 1, rowNode.visible);\r\n            }\r\n        }\r\n    };\r\n    TreeTable.prototype.serializePageNodes = function () {\r\n        this.serializedValue = [];\r\n        if (this.value && this.value.length) {\r\n            var first = this.lazy ? 0 : this.first;\r\n            for (var i = first; i < (first + this.rows); i++) {\r\n                var node = this.value[i];\r\n                if (node) {\r\n                    this.serializedValue.push({\r\n                        node: node,\r\n                        parent: null,\r\n                        level: 0,\r\n                        visible: true\r\n                    });\r\n                    this.serializeNodes(node, node.children, 1, true);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(TreeTable.prototype, \"sortField\", {\r\n        get: function () {\r\n            return this._sortField;\r\n        },\r\n        set: function (val) {\r\n            this._sortField = val;\r\n            //avoid triggering lazy load prior to lazy initialization at onInit\r\n            if (!this.lazy || this.initialized) {\r\n                if (this.sortMode === 'single') {\r\n                    this.sortSingle();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeTable.prototype, \"sortOrder\", {\r\n        get: function () {\r\n            return this._sortOrder;\r\n        },\r\n        set: function (val) {\r\n            this._sortOrder = val;\r\n            //avoid triggering lazy load prior to lazy initialization at onInit\r\n            if (!this.lazy || this.initialized) {\r\n                if (this.sortMode === 'single') {\r\n                    this.sortSingle();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeTable.prototype, \"multiSortMeta\", {\r\n        get: function () {\r\n            return this._multiSortMeta;\r\n        },\r\n        set: function (val) {\r\n            this._multiSortMeta = val;\r\n            if (this.sortMode === 'multiple') {\r\n                this.sortMultiple();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeTable.prototype, \"selection\", {\r\n        get: function () {\r\n            return this._selection;\r\n        },\r\n        set: function (val) {\r\n            this._selection = val;\r\n            if (!this.preventSelectionSetterPropagation) {\r\n                this.updateSelectionKeys();\r\n                this.tableService.onSelectionChange();\r\n            }\r\n            this.preventSelectionSetterPropagation = false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TreeTable.prototype.updateSelectionKeys = function () {\r\n        if (this.dataKey && this._selection) {\r\n            this.selectionKeys = {};\r\n            if (Array.isArray(this._selection)) {\r\n                for (var _i = 0, _a = this._selection; _i < _a.length; _i++) {\r\n                    var node = _a[_i];\r\n                    this.selectionKeys[String(this.objectUtils.resolveFieldData(node.data, this.dataKey))] = 1;\r\n                }\r\n            }\r\n            else {\r\n                this.selectionKeys[String(this.objectUtils.resolveFieldData(this._selection.data, this.dataKey))] = 1;\r\n            }\r\n        }\r\n    };\r\n    TreeTable.prototype.onPageChange = function (event) {\r\n        this.first = event.first;\r\n        this.rows = event.rows;\r\n        if (this.lazy)\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        else\r\n            this.serializePageNodes();\r\n        this.onPage.emit({\r\n            first: this.first,\r\n            rows: this.rows\r\n        });\r\n        this.tableService.onUIUpdate(this.value);\r\n    };\r\n    TreeTable.prototype.sort = function (event) {\r\n        var originalEvent = event.originalEvent;\r\n        if (this.sortMode === 'single') {\r\n            this._sortOrder = (this.sortField === event.field) ? this.sortOrder * -1 : this.defaultSortOrder;\r\n            this._sortField = event.field;\r\n            this.sortSingle();\r\n        }\r\n        if (this.sortMode === 'multiple') {\r\n            var metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\r\n            var sortMeta = this.getSortMeta(event.field);\r\n            if (sortMeta) {\r\n                if (!metaKey) {\r\n                    this._multiSortMeta = [{ field: event.field, order: sortMeta.order * -1 }];\r\n                }\r\n                else {\r\n                    sortMeta.order = sortMeta.order * -1;\r\n                }\r\n            }\r\n            else {\r\n                if (!metaKey || !this.multiSortMeta) {\r\n                    this._multiSortMeta = [];\r\n                }\r\n                this.multiSortMeta.push({ field: event.field, order: this.defaultSortOrder });\r\n            }\r\n            this.sortMultiple();\r\n        }\r\n    };\r\n    TreeTable.prototype.sortSingle = function () {\r\n        if (this.sortField && this.sortOrder) {\r\n            if (this.resetPageOnSort) {\r\n                this.first = 0;\r\n            }\r\n            if (this.lazy) {\r\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n            }\r\n            else if (this.value) {\r\n                this.sortNodes(this.value);\r\n            }\r\n            var sortMeta = {\r\n                field: this.sortField,\r\n                order: this.sortOrder\r\n            };\r\n            this.onSort.emit(sortMeta);\r\n            this.tableService.onSort(sortMeta);\r\n            this.updateSerializedValue();\r\n        }\r\n    };\r\n    TreeTable.prototype.sortNodes = function (nodes) {\r\n        var _this = this;\r\n        if (!nodes || nodes.length === 0) {\r\n            return;\r\n        }\r\n        if (this.customSort) {\r\n            this.sortFunction.emit({\r\n                data: nodes,\r\n                mode: this.sortMode,\r\n                field: this.sortField,\r\n                order: this.sortOrder\r\n            });\r\n        }\r\n        else {\r\n            nodes.sort(function (node1, node2) {\r\n                var value1 = _this.objectUtils.resolveFieldData(node1.data, _this.sortField);\r\n                var value2 = _this.objectUtils.resolveFieldData(node2.data, _this.sortField);\r\n                var result = null;\r\n                if (value1 == null && value2 != null)\r\n                    result = -1;\r\n                else if (value1 != null && value2 == null)\r\n                    result = 1;\r\n                else if (value1 == null && value2 == null)\r\n                    result = 0;\r\n                else if (typeof value1 === 'string' && typeof value2 === 'string')\r\n                    result = value1.localeCompare(value2, undefined, { numeric: true });\r\n                else\r\n                    result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\r\n                return (_this.sortOrder * result);\r\n            });\r\n        }\r\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\r\n            var node = nodes_2[_i];\r\n            this.sortNodes(node.children);\r\n        }\r\n    };\r\n    TreeTable.prototype.sortMultiple = function () {\r\n        if (this.multiSortMeta) {\r\n            if (this.lazy) {\r\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n            }\r\n            else if (this.value) {\r\n                this.sortMultipleNodes(this.value);\r\n            }\r\n            this.onSort.emit({\r\n                multisortmeta: this.multiSortMeta\r\n            });\r\n            this.tableService.onSort(this.multiSortMeta);\r\n            this.updateSerializedValue();\r\n        }\r\n    };\r\n    TreeTable.prototype.sortMultipleNodes = function (nodes) {\r\n        var _this = this;\r\n        if (!nodes || nodes.length === 0) {\r\n            return;\r\n        }\r\n        if (this.customSort) {\r\n            this.sortFunction.emit({\r\n                data: this.value,\r\n                mode: this.sortMode,\r\n                multiSortMeta: this.multiSortMeta\r\n            });\r\n        }\r\n        else {\r\n            this.value.sort(function (node1, node2) {\r\n                return _this.multisortField(node1, node2, _this.multiSortMeta, 0);\r\n            });\r\n        }\r\n        for (var _i = 0, nodes_3 = nodes; _i < nodes_3.length; _i++) {\r\n            var node = nodes_3[_i];\r\n            this.sortMultipleNodes(node.children);\r\n        }\r\n    };\r\n    TreeTable.prototype.multisortField = function (node1, node2, multiSortMeta, index) {\r\n        var value1 = this.objectUtils.resolveFieldData(node1.data, multiSortMeta[index].field);\r\n        var value2 = this.objectUtils.resolveFieldData(node2.data, multiSortMeta[index].field);\r\n        var result = null;\r\n        if (value1 == null && value2 != null)\r\n            result = -1;\r\n        else if (value1 != null && value2 == null)\r\n            result = 1;\r\n        else if (value1 == null && value2 == null)\r\n            result = 0;\r\n        if (typeof value1 == 'string' || value1 instanceof String) {\r\n            if (value1.localeCompare && (value1 != value2)) {\r\n                return (multiSortMeta[index].order * value1.localeCompare(value2, undefined, { numeric: true }));\r\n            }\r\n        }\r\n        else {\r\n            result = (value1 < value2) ? -1 : 1;\r\n        }\r\n        if (value1 == value2) {\r\n            return (multiSortMeta.length - 1) > (index) ? (this.multisortField(node1, node2, multiSortMeta, index + 1)) : 0;\r\n        }\r\n        return (multiSortMeta[index].order * result);\r\n    };\r\n    TreeTable.prototype.getSortMeta = function (field) {\r\n        if (this.multiSortMeta && this.multiSortMeta.length) {\r\n            for (var i = 0; i < this.multiSortMeta.length; i++) {\r\n                if (this.multiSortMeta[i].field === field) {\r\n                    return this.multiSortMeta[i];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    TreeTable.prototype.isSorted = function (field) {\r\n        if (this.sortMode === 'single') {\r\n            return (this.sortField && this.sortField === field);\r\n        }\r\n        else if (this.sortMode === 'multiple') {\r\n            var sorted = false;\r\n            if (this.multiSortMeta) {\r\n                for (var i = 0; i < this.multiSortMeta.length; i++) {\r\n                    if (this.multiSortMeta[i].field == field) {\r\n                        sorted = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return sorted;\r\n        }\r\n    };\r\n    TreeTable.prototype.createLazyLoadMetadata = function () {\r\n        return {\r\n            first: this.first,\r\n            rows: this.rows,\r\n            sortField: this.sortField,\r\n            sortOrder: this.sortOrder,\r\n            multiSortMeta: this.multiSortMeta\r\n        };\r\n    };\r\n    TreeTable.prototype.isEmpty = function () {\r\n        return this.value == null || this.value.length == 0;\r\n    };\r\n    TreeTable.prototype.getBlockableElement = function () {\r\n        return this.el.nativeElement.children[0];\r\n    };\r\n    TreeTable.prototype.onColumnResizeBegin = function (event) {\r\n        var containerLeft = this.domHandler.getOffset(this.containerViewChild.nativeElement).left;\r\n        this.lastResizerHelperX = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft);\r\n        event.preventDefault();\r\n    };\r\n    TreeTable.prototype.onColumnResize = function (event) {\r\n        var containerLeft = this.domHandler.getOffset(this.containerViewChild.nativeElement).left;\r\n        this.domHandler.addClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');\r\n        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\r\n        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\r\n        this.resizeHelperViewChild.nativeElement.style.left = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft) + 'px';\r\n        this.resizeHelperViewChild.nativeElement.style.display = 'block';\r\n    };\r\n    TreeTable.prototype.onColumnResizeEnd = function (event, column) {\r\n        var delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\r\n        var columnWidth = column.offsetWidth;\r\n        var newColumnWidth = columnWidth + delta;\r\n        var minWidth = column.style.minWidth || 15;\r\n        if (columnWidth + delta > parseInt(minWidth)) {\r\n            if (this.columnResizeMode === 'fit') {\r\n                var nextColumn = column.nextElementSibling;\r\n                while (!nextColumn.offsetParent) {\r\n                    nextColumn = nextColumn.nextElementSibling;\r\n                }\r\n                if (nextColumn) {\r\n                    var nextColumnWidth = nextColumn.offsetWidth - delta;\r\n                    var nextColumnMinWidth = nextColumn.style.minWidth || 15;\r\n                    if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {\r\n                        if (this.scrollable) {\r\n                            var scrollableView = this.findParentScrollableView(column);\r\n                            var scrollableBodyTable = this.domHandler.findSingle(scrollableView, 'table.ui-treetable-scrollable-body-table');\r\n                            var scrollableHeaderTable = this.domHandler.findSingle(scrollableView, 'table.ui-treetable-scrollable-header-table');\r\n                            var scrollableFooterTable = this.domHandler.findSingle(scrollableView, 'table.ui-treetable-scrollable-footer-table');\r\n                            var resizeColumnIndex = this.domHandler.index(column);\r\n                            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                        }\r\n                        else {\r\n                            column.style.width = newColumnWidth + 'px';\r\n                            if (nextColumn) {\r\n                                nextColumn.style.width = nextColumnWidth + 'px';\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (this.columnResizeMode === 'expand') {\r\n                if (this.scrollable) {\r\n                    var scrollableView = this.findParentScrollableView(column);\r\n                    var scrollableBodyTable = this.domHandler.findSingle(scrollableView, 'table.ui-treetable-scrollable-body-table');\r\n                    var scrollableHeaderTable = this.domHandler.findSingle(scrollableView, 'table.ui-treetable-scrollable-header-table');\r\n                    var scrollableFooterTable = this.domHandler.findSingle(scrollableView, 'table.ui-treetable-scrollable-footer-table');\r\n                    scrollableBodyTable.style.width = scrollableBodyTable.offsetWidth + delta + 'px';\r\n                    scrollableHeaderTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';\r\n                    if (scrollableFooterTable) {\r\n                        scrollableFooterTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';\r\n                    }\r\n                    var resizeColumnIndex = this.domHandler.index(column);\r\n                    this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\r\n                    this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\r\n                    this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\r\n                }\r\n                else {\r\n                    this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.offsetWidth + delta + 'px';\r\n                    column.style.width = newColumnWidth + 'px';\r\n                    var containerWidth = this.tableViewChild.nativeElement.style.width;\r\n                    this.containerViewChild.nativeElement.style.width = containerWidth + 'px';\r\n                }\r\n            }\r\n            this.onColResize.emit({\r\n                element: column,\r\n                delta: delta\r\n            });\r\n        }\r\n        this.resizeHelperViewChild.nativeElement.style.display = 'none';\r\n        this.domHandler.removeClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');\r\n    };\r\n    TreeTable.prototype.findParentScrollableView = function (column) {\r\n        if (column) {\r\n            var parent_1 = column.parentElement;\r\n            while (parent_1 && !this.domHandler.hasClass(parent_1, 'ui-treetable-scrollable-view')) {\r\n                parent_1 = parent_1.parentElement;\r\n            }\r\n            return parent_1;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    TreeTable.prototype.resizeColGroup = function (table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\r\n        if (table) {\r\n            var colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\r\n            if (colGroup) {\r\n                var col = colGroup.children[resizeColumnIndex];\r\n                var nextCol = col.nextElementSibling;\r\n                col.style.width = newColumnWidth + 'px';\r\n                if (nextCol && nextColumnWidth) {\r\n                    nextCol.style.width = nextColumnWidth + 'px';\r\n                }\r\n            }\r\n            else {\r\n                throw \"Scrollable tables require a colgroup to support resizable columns\";\r\n            }\r\n        }\r\n    };\r\n    TreeTable.prototype.onColumnDragStart = function (event, columnElement) {\r\n        this.reorderIconWidth = this.domHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\r\n        this.reorderIconHeight = this.domHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\r\n        this.draggedColumn = columnElement;\r\n        event.dataTransfer.setData('text', 'b'); // For firefox\r\n    };\r\n    TreeTable.prototype.onColumnDragEnter = function (event, dropHeader) {\r\n        if (this.reorderableColumns && this.draggedColumn && dropHeader) {\r\n            event.preventDefault();\r\n            var containerOffset = this.domHandler.getOffset(this.containerViewChild.nativeElement);\r\n            var dropHeaderOffset = this.domHandler.getOffset(dropHeader);\r\n            if (this.draggedColumn != dropHeader) {\r\n                var targetLeft = dropHeaderOffset.left - containerOffset.left;\r\n                var targetTop = containerOffset.top - dropHeaderOffset.top;\r\n                var columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\r\n                this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\r\n                this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\r\n                if (event.pageX > columnCenter) {\r\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\r\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\r\n                    this.dropPosition = 1;\r\n                }\r\n                else {\r\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\r\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\r\n                    this.dropPosition = -1;\r\n                }\r\n                this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\r\n                this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\r\n            }\r\n            else {\r\n                event.dataTransfer.dropEffect = 'none';\r\n            }\r\n        }\r\n    };\r\n    TreeTable.prototype.onColumnDragLeave = function (event) {\r\n        if (this.reorderableColumns && this.draggedColumn) {\r\n            event.preventDefault();\r\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\r\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\r\n        }\r\n    };\r\n    TreeTable.prototype.onColumnDrop = function (event, dropColumn) {\r\n        event.preventDefault();\r\n        if (this.draggedColumn) {\r\n            var dragIndex = this.domHandler.indexWithinGroup(this.draggedColumn, 'ttreorderablecolumn');\r\n            var dropIndex = this.domHandler.indexWithinGroup(dropColumn, 'ttreorderablecolumn');\r\n            var allowDrop = (dragIndex != dropIndex);\r\n            if (allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {\r\n                allowDrop = false;\r\n            }\r\n            if (allowDrop) {\r\n                this.objectUtils.reorderArray(this.columns, dragIndex, dropIndex);\r\n                this.onColReorder.emit({\r\n                    dragIndex: dragIndex,\r\n                    dropIndex: dropIndex,\r\n                    columns: this.columns\r\n                });\r\n            }\r\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\r\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\r\n            this.draggedColumn.draggable = false;\r\n            this.draggedColumn = null;\r\n            this.dropPosition = null;\r\n        }\r\n    };\r\n    TreeTable.prototype.handleRowClick = function (event) {\r\n        var targetNode = event.originalEvent.target.nodeName;\r\n        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || (this.domHandler.hasClass(event.originalEvent.target, 'ui-clickable'))) {\r\n            return;\r\n        }\r\n        if (this.selectionMode) {\r\n            this.preventSelectionSetterPropagation = true;\r\n            var rowNode = event.rowNode;\r\n            var selected = this.isSelected(rowNode.node);\r\n            var metaSelection = this.rowTouched ? false : this.metaKeySelection;\r\n            var dataKeyValue = this.dataKey ? String(this.objectUtils.resolveFieldData(rowNode.node.data, this.dataKey)) : null;\r\n            if (metaSelection) {\r\n                var metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\r\n                if (selected && metaKey) {\r\n                    if (this.isSingleSelectionMode()) {\r\n                        this._selection = null;\r\n                        this.selectionKeys = {};\r\n                        this.selectionChange.emit(null);\r\n                    }\r\n                    else {\r\n                        var selectionIndex_1 = this.findIndexInSelection(rowNode.node);\r\n                        this._selection = this.selection.filter(function (val, i) { return i != selectionIndex_1; });\r\n                        this.selectionChange.emit(this.selection);\r\n                        if (dataKeyValue) {\r\n                            delete this.selectionKeys[dataKeyValue];\r\n                        }\r\n                    }\r\n                    this.onNodeUnselect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row' });\r\n                }\r\n                else {\r\n                    if (this.isSingleSelectionMode()) {\r\n                        this._selection = rowNode.node;\r\n                        this.selectionChange.emit(rowNode.node);\r\n                        if (dataKeyValue) {\r\n                            this.selectionKeys = {};\r\n                            this.selectionKeys[dataKeyValue] = 1;\r\n                        }\r\n                    }\r\n                    else if (this.isMultipleSelectionMode()) {\r\n                        if (metaKey) {\r\n                            this._selection = this.selection || [];\r\n                        }\r\n                        else {\r\n                            this._selection = [];\r\n                            this.selectionKeys = {};\r\n                        }\r\n                        this._selection = this.selection.concat([rowNode.node]);\r\n                        this.selectionChange.emit(this.selection);\r\n                        if (dataKeyValue) {\r\n                            this.selectionKeys[dataKeyValue] = 1;\r\n                        }\r\n                    }\r\n                    this.onNodeSelect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row', index: event.rowIndex });\r\n                }\r\n            }\r\n            else {\r\n                if (this.selectionMode === 'single') {\r\n                    if (selected) {\r\n                        this._selection = null;\r\n                        this.selectionKeys = {};\r\n                        this.selectionChange.emit(this.selection);\r\n                        this.onNodeUnselect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row' });\r\n                    }\r\n                    else {\r\n                        this._selection = rowNode.node;\r\n                        this.selectionChange.emit(this.selection);\r\n                        this.onNodeSelect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row', index: event.rowIndex });\r\n                        if (dataKeyValue) {\r\n                            this.selectionKeys = {};\r\n                            this.selectionKeys[dataKeyValue] = 1;\r\n                        }\r\n                    }\r\n                }\r\n                else if (this.selectionMode === 'multiple') {\r\n                    if (selected) {\r\n                        var selectionIndex_2 = this.findIndexInSelection(rowNode.node);\r\n                        this._selection = this.selection.filter(function (val, i) { return i != selectionIndex_2; });\r\n                        this.selectionChange.emit(this.selection);\r\n                        this.onNodeUnselect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row' });\r\n                        if (dataKeyValue) {\r\n                            delete this.selectionKeys[dataKeyValue];\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._selection = this.selection ? this.selection.concat([rowNode.node]) : [rowNode.node];\r\n                        this.selectionChange.emit(this.selection);\r\n                        this.onNodeSelect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row', index: event.rowIndex });\r\n                        if (dataKeyValue) {\r\n                            this.selectionKeys[dataKeyValue] = 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.tableService.onSelectionChange();\r\n        }\r\n        this.rowTouched = false;\r\n    };\r\n    TreeTable.prototype.handleRowTouchEnd = function (event) {\r\n        this.rowTouched = true;\r\n    };\r\n    TreeTable.prototype.handleRowRightClick = function (event) {\r\n        if (this.contextMenu) {\r\n            var node = event.rowNode.node;\r\n            if (this.contextMenuSelectionMode === 'separate') {\r\n                this.contextMenuSelection = node;\r\n                this.contextMenuSelectionChange.emit(node);\r\n                this.onContextMenuSelect.emit({ originalEvent: event.originalEvent, node: node });\r\n                this.contextMenu.show(event.originalEvent);\r\n                this.tableService.onContextMenu(node);\r\n            }\r\n            else if (this.contextMenuSelectionMode === 'joint') {\r\n                this.preventSelectionSetterPropagation = true;\r\n                var selected = this.isSelected(node);\r\n                var dataKeyValue = this.dataKey ? String(this.objectUtils.resolveFieldData(node.data, this.dataKey)) : null;\r\n                if (!selected) {\r\n                    if (this.isSingleSelectionMode()) {\r\n                        this.selection = node;\r\n                        this.selectionChange.emit(node);\r\n                    }\r\n                    else if (this.isMultipleSelectionMode()) {\r\n                        this.selection = [node];\r\n                        this.selectionChange.emit(this.selection);\r\n                    }\r\n                    if (dataKeyValue) {\r\n                        this.selectionKeys[dataKeyValue] = 1;\r\n                    }\r\n                }\r\n                this.contextMenu.show(event.originalEvent);\r\n                this.onContextMenuSelect.emit({ originalEvent: event.originalEvent, node: node });\r\n            }\r\n        }\r\n    };\r\n    TreeTable.prototype.toggleNodeWithCheckbox = function (event) {\r\n        this.preventSelectionSetterPropagation = true;\r\n        var node = event.rowNode.node;\r\n        var selected = this.isSelected(node);\r\n        if (selected) {\r\n            this.propagateSelectionDown(node, false);\r\n            if (event.rowNode.parent) {\r\n                this.propagateSelectionUp(node.parent, false);\r\n            }\r\n            this.selectionChange.emit(this.selection);\r\n            this.onNodeUnselect.emit({ originalEvent: event, node: node });\r\n        }\r\n        else {\r\n            this.propagateSelectionDown(node, true);\r\n            if (event.rowNode.parent) {\r\n                this.propagateSelectionUp(node.parent, true);\r\n            }\r\n            this.selectionChange.emit(this.selection);\r\n            this.onNodeSelect.emit({ originalEvent: event, node: node });\r\n        }\r\n        this.tableService.onSelectionChange();\r\n    };\r\n    TreeTable.prototype.toggleNodesWithCheckbox = function (event, check) {\r\n        if (check) {\r\n            if (this.value && this.value.length) {\r\n                for (var _i = 0, _a = this.value; _i < _a.length; _i++) {\r\n                    var node = _a[_i];\r\n                    this.propagateSelectionDown(node, true);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._selection = [];\r\n            this.selectionKeys = {};\r\n        }\r\n        this.preventSelectionSetterPropagation = true;\r\n        this.selectionChange.emit(this._selection);\r\n        this.tableService.onSelectionChange();\r\n        this.onHeaderCheckboxToggle.emit({ originalEvent: event, checked: check });\r\n    };\r\n    TreeTable.prototype.propagateSelectionUp = function (node, select) {\r\n        if (node.children && node.children.length) {\r\n            var selectedChildCount = 0;\r\n            var childPartialSelected = false;\r\n            var dataKeyValue = this.dataKey ? String(this.objectUtils.resolveFieldData(node.data, this.dataKey)) : null;\r\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\r\n                var child = _a[_i];\r\n                if (this.isSelected(child))\r\n                    selectedChildCount++;\r\n                else if (child.partialSelected)\r\n                    childPartialSelected = true;\r\n            }\r\n            if (select && selectedChildCount == node.children.length) {\r\n                this._selection = (this.selection || []).concat([node]);\r\n                node.partialSelected = false;\r\n                if (dataKeyValue) {\r\n                    this.selectionKeys[dataKeyValue] = 1;\r\n                }\r\n            }\r\n            else {\r\n                if (!select) {\r\n                    var index_1 = this.findIndexInSelection(node);\r\n                    if (index_1 >= 0) {\r\n                        this._selection = this.selection.filter(function (val, i) { return i != index_1; });\r\n                        if (dataKeyValue) {\r\n                            delete this.selectionKeys[dataKeyValue];\r\n                        }\r\n                    }\r\n                }\r\n                if (childPartialSelected || selectedChildCount > 0 && selectedChildCount != node.children.length)\r\n                    node.partialSelected = true;\r\n                else\r\n                    node.partialSelected = false;\r\n            }\r\n        }\r\n        var parent = node.parent;\r\n        if (parent) {\r\n            this.propagateSelectionUp(parent, select);\r\n        }\r\n    };\r\n    TreeTable.prototype.propagateSelectionDown = function (node, select) {\r\n        var index = this.findIndexInSelection(node);\r\n        var dataKeyValue = this.dataKey ? String(this.objectUtils.resolveFieldData(node.data, this.dataKey)) : null;\r\n        if (select && index == -1) {\r\n            this._selection = (this.selection || []).concat([node]);\r\n            if (dataKeyValue) {\r\n                this.selectionKeys[dataKeyValue] = 1;\r\n            }\r\n        }\r\n        else if (!select && index > -1) {\r\n            this._selection = this.selection.filter(function (val, i) { return i != index; });\r\n            if (dataKeyValue) {\r\n                delete this.selectionKeys[dataKeyValue];\r\n            }\r\n        }\r\n        node.partialSelected = false;\r\n        if (node.children && node.children.length) {\r\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\r\n                var child = _a[_i];\r\n                this.propagateSelectionDown(child, select);\r\n            }\r\n        }\r\n    };\r\n    TreeTable.prototype.isSelected = function (node) {\r\n        if (node && this.selection) {\r\n            if (this.dataKey) {\r\n                return this.selectionKeys[this.objectUtils.resolveFieldData(node.data, this.dataKey)] !== undefined;\r\n            }\r\n            else {\r\n                if (this.selection instanceof Array)\r\n                    return this.findIndexInSelection(node) > -1;\r\n                else\r\n                    return this.equals(node, this.selection);\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    TreeTable.prototype.findIndexInSelection = function (node) {\r\n        var index = -1;\r\n        if (this.selection && this.selection.length) {\r\n            for (var i = 0; i < this.selection.length; i++) {\r\n                if (this.equals(node, this.selection[i])) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    };\r\n    TreeTable.prototype.isSingleSelectionMode = function () {\r\n        return this.selectionMode === 'single';\r\n    };\r\n    TreeTable.prototype.isMultipleSelectionMode = function () {\r\n        return this.selectionMode === 'multiple';\r\n    };\r\n    TreeTable.prototype.equals = function (node1, node2) {\r\n        return this.compareSelectionBy === 'equals' ? (node1 === node2) : this.objectUtils.equals(node1.data, node2.data, this.dataKey);\r\n    };\r\n    TreeTable.prototype.reset = function () {\r\n        this._sortField = null;\r\n        this._sortOrder = 1;\r\n        this._multiSortMeta = null;\r\n        this.tableService.onSort(null);\r\n        this.first = 0;\r\n        if (this.lazy) {\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        }\r\n        else {\r\n            this.totalRecords = (this._value ? this._value.length : 0);\r\n        }\r\n    };\r\n    TreeTable.prototype.ngOnDestroy = function () {\r\n        this.editingCell = null;\r\n        this.initialized = null;\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], TreeTable.prototype, \"columns\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], TreeTable.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TreeTable.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TreeTable.prototype, \"autoLayout\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TreeTable.prototype, \"lazy\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TreeTable.prototype, \"paginator\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], TreeTable.prototype, \"rows\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], TreeTable.prototype, \"first\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], TreeTable.prototype, \"totalRecords\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], TreeTable.prototype, \"pageLinks\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], TreeTable.prototype, \"rowsPerPageOptions\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TreeTable.prototype, \"alwaysShowPaginator\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TreeTable.prototype, \"paginatorPosition\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], TreeTable.prototype, \"paginatorDropdownAppendTo\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], TreeTable.prototype, \"defaultSortOrder\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TreeTable.prototype, \"sortMode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TreeTable.prototype, \"resetPageOnSort\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TreeTable.prototype, \"customSort\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TreeTable.prototype, \"selectionMode\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"selectionChange\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], TreeTable.prototype, \"contextMenuSelection\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"contextMenuSelectionChange\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TreeTable.prototype, \"contextMenuSelectionMode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TreeTable.prototype, \"dataKey\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TreeTable.prototype, \"metaKeySelection\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TreeTable.prototype, \"compareSelectionBy\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TreeTable.prototype, \"rowHover\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TreeTable.prototype, \"loading\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TreeTable.prototype, \"loadingIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TreeTable.prototype, \"scrollable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TreeTable.prototype, \"scrollHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TreeTable.prototype, \"frozenWidth\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], TreeTable.prototype, \"frozenColumns\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TreeTable.prototype, \"resizableColumns\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TreeTable.prototype, \"columnResizeMode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TreeTable.prototype, \"reorderableColumns\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], TreeTable.prototype, \"contextMenu\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], TreeTable.prototype, \"rowTrackBy\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onNodeExpand\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onNodeCollapse\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onPage\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onSort\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onLazyLoad\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"sortFunction\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onColResize\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onColReorder\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onNodeSelect\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onNodeUnselect\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onContextMenuSelect\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onHeaderCheckboxToggle\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onEditInit\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onEditComplete\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], TreeTable.prototype, \"onEditCancel\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('container'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TreeTable.prototype, \"containerViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('resizeHelper'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TreeTable.prototype, \"resizeHelperViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('reorderIndicatorUp'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TreeTable.prototype, \"reorderIndicatorUpViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('reorderIndicatorDown'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TreeTable.prototype, \"reorderIndicatorDownViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('table'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TreeTable.prototype, \"tableViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ContentChildren(shared_1.PrimeTemplate),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], TreeTable.prototype, \"templates\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], TreeTable.prototype, \"value\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], TreeTable.prototype, \"sortField\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], TreeTable.prototype, \"sortOrder\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], TreeTable.prototype, \"multiSortMeta\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], TreeTable.prototype, \"selection\", null);\r\n    TreeTable = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-treeTable',\r\n            template: \"\\n        <div #container [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\"\\n                [ngClass]=\\\"{'ui-treetable ui-widget': true, 'ui-treetable-auto-layout': autoLayout, 'ui-treetable-hoverable-rows': (rowHover||(selectionMode === 'single' || selectionMode === 'multiple')),\\n                'ui-treetable-resizable': resizableColumns, 'ui-treetable-resizable-fit': (resizableColumns && columnResizeMode === 'fit')}\\\">\\n            <div class=\\\"ui-treetable-loading ui-widget-overlay\\\" *ngIf=\\\"loading\\\"></div>\\n            <div class=\\\"ui-treetable-loading-content\\\" *ngIf=\\\"loading\\\">\\n                <i [class]=\\\"'ui-treetable-loading-icon pi-spin ' + loadingIcon\\\"></i>\\n            </div>\\n            <div *ngIf=\\\"captionTemplate\\\" class=\\\"ui-treetable-caption ui-widget-header\\\">\\n                <ng-container *ngTemplateOutlet=\\\"captionTemplate\\\"></ng-container>\\n            </div>\\n            <p-paginator [rows]=\\\"rows\\\" [first]=\\\"first\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinkSize]=\\\"pageLinks\\\" styleClass=\\\"ui-paginator-top\\\" [alwaysShow]=\\\"alwaysShowPaginator\\\"\\n                (onPageChange)=\\\"onPageChange($event)\\\" [rowsPerPageOptions]=\\\"rowsPerPageOptions\\\" *ngIf=\\\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\\\"\\n                [templateLeft]=\\\"paginatorLeftTemplate\\\" [templateRight]=\\\"paginatorRightTemplate\\\" [dropdownAppendTo]=\\\"paginatorDropdownAppendTo\\\"></p-paginator>\\n            \\n            <div class=\\\"ui-treetable-wrapper\\\" *ngIf=\\\"!scrollable\\\">\\n                <table #table class=\\\"ui-treetable-table\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <thead class=\\\"ui-treetable-thead\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"headerTemplate; context: {$implicit: columns}\\\"></ng-container>\\n                    </thead>\\n                    <tfoot class=\\\"ui-treetable-tfoot\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"footerTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    </tfoot>\\n                    <tbody class=\\\"ui-treetable-tbody\\\" [pTreeTableBody]=\\\"columns\\\" [pTreeTableBodyTemplate]=\\\"bodyTemplate\\\"></tbody>\\n                </table>\\n            </div>\\n\\n            <div class=\\\"ui-treetable-scrollable-wrapper\\\" *ngIf=\\\"scrollable\\\">\\n               <div class=\\\"ui-treetable-scrollable-view ui-treetable-frozen-view\\\" *ngIf=\\\"frozenColumns||frozenBodyTemplate\\\" [ttScrollableView]=\\\"frozenColumns\\\" [frozen]=\\\"true\\\" [ngStyle]=\\\"{width: frozenWidth}\\\" [scrollHeight]=\\\"scrollHeight\\\"></div>\\n               <div class=\\\"ui-treetable-scrollable-view\\\" [ttScrollableView]=\\\"columns\\\" [frozen]=\\\"false\\\" [scrollHeight]=\\\"scrollHeight\\\"></div>\\n            </div>\\n\\n            <p-paginator [rows]=\\\"rows\\\" [first]=\\\"first\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinkSize]=\\\"pageLinks\\\" styleClass=\\\"ui-paginator-bottom\\\" [alwaysShow]=\\\"alwaysShowPaginator\\\"\\n                (onPageChange)=\\\"onPageChange($event)\\\" [rowsPerPageOptions]=\\\"rowsPerPageOptions\\\" *ngIf=\\\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\\\"\\n                [templateLeft]=\\\"paginatorLeftTemplate\\\" [templateRight]=\\\"paginatorRightTemplate\\\" [dropdownAppendTo]=\\\"paginatorDropdownAppendTo\\\"></p-paginator>\\n            <div *ngIf=\\\"summaryTemplate\\\" class=\\\"ui-treetable-summary ui-widget-header\\\">\\n                <ng-container *ngTemplateOutlet=\\\"summaryTemplate\\\"></ng-container>\\n            </div>\\n\\n            <div #resizeHelper class=\\\"ui-column-resizer-helper ui-state-highlight\\\" style=\\\"display:none\\\" *ngIf=\\\"resizableColumns\\\"></div>\\n\\n            <span #reorderIndicatorUp class=\\\"pi pi-arrow-down ui-table-reorder-indicator-up\\\" *ngIf=\\\"reorderableColumns\\\"></span>\\n            <span #reorderIndicatorDown class=\\\"pi pi-arrow-up ui-table-reorder-indicator-down\\\" *ngIf=\\\"reorderableColumns\\\"></span>\\n        </div>\\n    \",\r\n            providers: [domhandler_1.DomHandler, objectutils_1.ObjectUtils, TreeTableService]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler, objectutils_1.ObjectUtils, core_1.NgZone, TreeTableService])\r\n    ], TreeTable);\r\n    return TreeTable;\r\n}());\r\nexports.TreeTable = TreeTable;\r\nvar TTBody = /** @class */ (function () {\r\n    function TTBody(tt) {\r\n        this.tt = tt;\r\n    }\r\n    __decorate([\r\n        core_1.Input(\"pTreeTableBody\"),\r\n        __metadata(\"design:type\", Array)\r\n    ], TTBody.prototype, \"columns\", void 0);\r\n    __decorate([\r\n        core_1.Input(\"pTreeTableBodyTemplate\"),\r\n        __metadata(\"design:type\", core_1.TemplateRef)\r\n    ], TTBody.prototype, \"template\", void 0);\r\n    TTBody = __decorate([\r\n        core_1.Component({\r\n            selector: '[pTreeTableBody]',\r\n            template: \"\\n        <ng-template ngFor let-serializedNode let-rowIndex=\\\"index\\\" [ngForOf]=\\\"tt.serializedValue\\\" [ngForTrackBy]=\\\"tt.rowTrackBy\\\">\\n            <ng-container *ngIf=\\\"serializedNode.visible\\\">\\n                <ng-container *ngTemplateOutlet=\\\"template; context: {$implicit: serializedNode, node: serializedNode.node, rowData: serializedNode.node.data, columns: columns}\\\"></ng-container>\\n            </ng-container>\\n        </ng-template>\\n        <ng-container *ngIf=\\\"tt.isEmpty()\\\">\\n            <ng-container *ngTemplateOutlet=\\\"tt.emptyMessageTemplate; context: {$implicit: columns}\\\"></ng-container>\\n        </ng-container>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable])\r\n    ], TTBody);\r\n    return TTBody;\r\n}());\r\nexports.TTBody = TTBody;\r\nvar TTScrollableView = /** @class */ (function () {\r\n    function TTScrollableView(tt, el, domHandler, zone) {\r\n        var _this = this;\r\n        this.tt = tt;\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.zone = zone;\r\n        this.subscription = this.tt.tableService.uiUpdateSource$.subscribe(function () {\r\n            _this.zone.runOutsideAngular(function () {\r\n                setTimeout(function () {\r\n                    _this.alignScrollBar();\r\n                }, 50);\r\n            });\r\n        });\r\n        this.initialized = false;\r\n    }\r\n    Object.defineProperty(TTScrollableView.prototype, \"scrollHeight\", {\r\n        get: function () {\r\n            return this._scrollHeight;\r\n        },\r\n        set: function (val) {\r\n            this._scrollHeight = val;\r\n            this.setScrollHeight();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TTScrollableView.prototype.ngAfterViewChecked = function () {\r\n        if (!this.initialized && this.el.nativeElement.offsetParent) {\r\n            this.alignScrollBar();\r\n            this.initialized = true;\r\n        }\r\n    };\r\n    TTScrollableView.prototype.ngAfterViewInit = function () {\r\n        this.bindEvents();\r\n        this.setScrollHeight();\r\n        this.alignScrollBar();\r\n        if (!this.frozen) {\r\n            if (this.tt.frozenColumns || this.tt.frozenBodyTemplate) {\r\n                this.domHandler.addClass(this.el.nativeElement, 'ui-treetable-unfrozen-view');\r\n            }\r\n            if (this.tt.frozenWidth) {\r\n                this.el.nativeElement.style.left = this.tt.frozenWidth;\r\n                this.el.nativeElement.style.width = 'calc(100% - ' + this.tt.frozenWidth + ')';\r\n            }\r\n            var frozenView = this.el.nativeElement.previousElementSibling;\r\n            if (frozenView) {\r\n                this.frozenSiblingBody = this.domHandler.findSingle(frozenView, '.ui-treetable-scrollable-body');\r\n            }\r\n        }\r\n        else {\r\n            this.scrollBodyViewChild.nativeElement.style.paddingBottom = this.domHandler.calculateScrollbarWidth() + 'px';\r\n        }\r\n    };\r\n    TTScrollableView.prototype.bindEvents = function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular(function () {\r\n            var scrollBarWidth = _this.domHandler.calculateScrollbarWidth();\r\n            if (_this.scrollHeaderViewChild && _this.scrollHeaderViewChild.nativeElement) {\r\n                _this.headerScrollListener = _this.onHeaderScroll.bind(_this);\r\n                _this.scrollHeaderBoxViewChild.nativeElement.addEventListener('scroll', _this.headerScrollListener);\r\n            }\r\n            if (_this.scrollFooterViewChild && _this.scrollFooterViewChild.nativeElement) {\r\n                _this.footerScrollListener = _this.onFooterScroll.bind(_this);\r\n                _this.scrollFooterViewChild.nativeElement.addEventListener('scroll', _this.footerScrollListener);\r\n            }\r\n            if (!_this.frozen) {\r\n                _this.bodyScrollListener = _this.onBodyScroll.bind(_this);\r\n                _this.scrollBodyViewChild.nativeElement.addEventListener('scroll', _this.bodyScrollListener);\r\n            }\r\n        });\r\n    };\r\n    TTScrollableView.prototype.unbindEvents = function () {\r\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\r\n            this.scrollHeaderBoxViewChild.nativeElement.removeEventListener('scroll', this.headerScrollListener);\r\n        }\r\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\r\n            this.scrollFooterViewChild.nativeElement.removeEventListener('scroll', this.footerScrollListener);\r\n        }\r\n        this.scrollBodyViewChild.nativeElement.addEventListener('scroll', this.bodyScrollListener);\r\n    };\r\n    TTScrollableView.prototype.onHeaderScroll = function (event) {\r\n        this.scrollHeaderViewChild.nativeElement.scrollLeft = 0;\r\n    };\r\n    TTScrollableView.prototype.onFooterScroll = function (event) {\r\n        this.scrollFooterViewChild.nativeElement.scrollLeft = 0;\r\n    };\r\n    TTScrollableView.prototype.onBodyScroll = function (event) {\r\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\r\n            this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * this.scrollBodyViewChild.nativeElement.scrollLeft + 'px';\r\n        }\r\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\r\n            this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * this.scrollBodyViewChild.nativeElement.scrollLeft + 'px';\r\n        }\r\n        if (this.frozenSiblingBody) {\r\n            this.frozenSiblingBody.scrollTop = this.scrollBodyViewChild.nativeElement.scrollTop;\r\n        }\r\n    };\r\n    TTScrollableView.prototype.setScrollHeight = function () {\r\n        if (this.scrollHeight && this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\r\n            if (this.scrollHeight.indexOf('%') !== -1) {\r\n                this.scrollBodyViewChild.nativeElement.style.visibility = 'hidden';\r\n                this.scrollBodyViewChild.nativeElement.style.height = '100px'; //temporary height to calculate static height\r\n                var containerHeight = this.domHandler.getOuterHeight(this.tt.el.nativeElement.children[0]);\r\n                var relativeHeight = this.domHandler.getOuterHeight(this.tt.el.nativeElement.parentElement) * parseInt(this.scrollHeight) / 100;\r\n                var staticHeight = containerHeight - 100; //total height of headers, footers, paginators\r\n                var scrollBodyHeight = (relativeHeight - staticHeight);\r\n                if (this.frozen) {\r\n                    scrollBodyHeight -= this.domHandler.calculateScrollbarWidth();\r\n                }\r\n                this.scrollBodyViewChild.nativeElement.style.height = 'auto';\r\n                this.scrollBodyViewChild.nativeElement.style.maxHeight = scrollBodyHeight + 'px';\r\n                this.scrollBodyViewChild.nativeElement.style.visibility = 'visible';\r\n            }\r\n            else {\r\n                if (this.frozen)\r\n                    this.scrollBodyViewChild.nativeElement.style.maxHeight = (parseInt(this.scrollHeight) - this.domHandler.calculateScrollbarWidth()) + 'px';\r\n                else\r\n                    this.scrollBodyViewChild.nativeElement.style.maxHeight = this.scrollHeight;\r\n            }\r\n        }\r\n    };\r\n    TTScrollableView.prototype.hasVerticalOverflow = function () {\r\n        return this.domHandler.getOuterHeight(this.scrollTableViewChild.nativeElement) > this.domHandler.getOuterHeight(this.scrollBodyViewChild.nativeElement);\r\n    };\r\n    TTScrollableView.prototype.alignScrollBar = function () {\r\n        if (!this.frozen) {\r\n            var scrollBarWidth = this.hasVerticalOverflow() ? this.domHandler.calculateScrollbarWidth() : 0;\r\n            this.scrollHeaderBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';\r\n            if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\r\n                this.scrollFooterBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';\r\n            }\r\n        }\r\n        this.initialized = false;\r\n    };\r\n    TTScrollableView.prototype.ngOnDestroy = function () {\r\n        this.unbindEvents();\r\n        this.frozenSiblingBody = null;\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n        this.initialized = false;\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"ttScrollableView\"),\r\n        __metadata(\"design:type\", Array)\r\n    ], TTScrollableView.prototype, \"columns\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TTScrollableView.prototype, \"frozen\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('scrollHeader'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TTScrollableView.prototype, \"scrollHeaderViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('scrollHeaderBox'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TTScrollableView.prototype, \"scrollHeaderBoxViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('scrollBody'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TTScrollableView.prototype, \"scrollBodyViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('scrollTable'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TTScrollableView.prototype, \"scrollTableViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('scrollFooter'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TTScrollableView.prototype, \"scrollFooterViewChild\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('scrollFooterBox'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TTScrollableView.prototype, \"scrollFooterBoxViewChild\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], TTScrollableView.prototype, \"scrollHeight\", null);\r\n    TTScrollableView = __decorate([\r\n        core_1.Component({\r\n            selector: '[ttScrollableView]',\r\n            template: \"\\n        <div #scrollHeader class=\\\"ui-treetable-scrollable-header ui-widget-header\\\">\\n            <div #scrollHeaderBox class=\\\"ui-treetable-scrollable-header-box\\\">\\n                <table class=\\\"ui-treetable-scrollable-header-table\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <thead class=\\\"ui-treetable-thead\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"frozen ? tt.frozenHeaderTemplate||tt.headerTemplate : tt.headerTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    </thead>\\n                </table>\\n            </div>\\n        </div>\\n        <div #scrollBody class=\\\"ui-treetable-scrollable-body\\\">\\n            <table #scrollTable class=\\\"ui-treetable-scrollable-body-table\\\">\\n                <ng-container *ngTemplateOutlet=\\\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                <tbody class=\\\"ui-treetable-tbody\\\" [pTreeTableBody]=\\\"columns\\\" [pTreeTableBodyTemplate]=\\\"frozen ? tt.frozenBodyTemplate||tt.bodyTemplate : tt.bodyTemplate\\\"></tbody>\\n            </table>\\n        </div>\\n        <div #scrollFooter *ngIf=\\\"tt.footerTemplate\\\" class=\\\"ui-treetable-scrollable-footer ui-widget-header\\\">\\n            <div #scrollFooterBox class=\\\"ui-treetable-scrollable-footer-box\\\">\\n                <table class=\\\"ui-treetable-scrollable-footer-table\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <tfoot class=\\\"ui-treetable-tfoot\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"frozen ? tt.frozenFooterTemplate||tt.footerTemplate : tt.footerTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    </tfoot>\\n                </table>\\n            </div>\\n        </div>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])\r\n    ], TTScrollableView);\r\n    return TTScrollableView;\r\n}());\r\nexports.TTScrollableView = TTScrollableView;\r\nvar TTSortableColumn = /** @class */ (function () {\r\n    function TTSortableColumn(tt, domHandler) {\r\n        var _this = this;\r\n        this.tt = tt;\r\n        this.domHandler = domHandler;\r\n        if (this.isEnabled()) {\r\n            this.subscription = this.tt.tableService.sortSource$.subscribe(function (sortMeta) {\r\n                _this.updateSortState();\r\n            });\r\n        }\r\n    }\r\n    TTSortableColumn.prototype.ngOnInit = function () {\r\n        if (this.isEnabled()) {\r\n            this.updateSortState();\r\n        }\r\n    };\r\n    TTSortableColumn.prototype.updateSortState = function () {\r\n        this.sorted = this.tt.isSorted(this.field);\r\n    };\r\n    TTSortableColumn.prototype.onClick = function (event) {\r\n        if (this.isEnabled()) {\r\n            this.updateSortState();\r\n            this.tt.sort({\r\n                originalEvent: event,\r\n                field: this.field\r\n            });\r\n            this.domHandler.clearSelection();\r\n        }\r\n    };\r\n    TTSortableColumn.prototype.isEnabled = function () {\r\n        return this.ttSortableColumnDisabled !== true;\r\n    };\r\n    TTSortableColumn.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"ttSortableColumn\"),\r\n        __metadata(\"design:type\", String)\r\n    ], TTSortableColumn.prototype, \"field\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TTSortableColumn.prototype, \"ttSortableColumnDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('click', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [MouseEvent]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], TTSortableColumn.prototype, \"onClick\", null);\r\n    TTSortableColumn = __decorate([\r\n        core_1.Directive({\r\n            selector: '[ttSortableColumn]',\r\n            providers: [domhandler_1.DomHandler],\r\n            host: {\r\n                '[class.ui-sortable-column]': 'isEnabled()',\r\n                '[class.ui-state-highlight]': 'sorted'\r\n            }\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable, domhandler_1.DomHandler])\r\n    ], TTSortableColumn);\r\n    return TTSortableColumn;\r\n}());\r\nexports.TTSortableColumn = TTSortableColumn;\r\nvar TTSortIcon = /** @class */ (function () {\r\n    function TTSortIcon(tt) {\r\n        var _this = this;\r\n        this.tt = tt;\r\n        this.subscription = this.tt.tableService.sortSource$.subscribe(function (sortMeta) {\r\n            _this.updateSortState();\r\n        });\r\n    }\r\n    TTSortIcon.prototype.ngOnInit = function () {\r\n        this.updateSortState();\r\n    };\r\n    TTSortIcon.prototype.onClick = function (event) {\r\n        event.preventDefault();\r\n    };\r\n    TTSortIcon.prototype.updateSortState = function () {\r\n        if (this.tt.sortMode === 'single') {\r\n            this.sortOrder = this.tt.isSorted(this.field) ? this.tt.sortOrder : 0;\r\n        }\r\n        else if (this.tt.sortMode === 'multiple') {\r\n            var sortMeta = this.tt.getSortMeta(this.field);\r\n            this.sortOrder = sortMeta ? sortMeta.order : 0;\r\n        }\r\n    };\r\n    TTSortIcon.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TTSortIcon.prototype, \"field\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TTSortIcon.prototype, \"ariaLabelDesc\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], TTSortIcon.prototype, \"ariaLabelAsc\", void 0);\r\n    TTSortIcon = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-treeTableSortIcon',\r\n            template: \"\\n        <a href=\\\"#\\\" (click)=\\\"onClick($event)\\\" class=\\\"ui-treetable-sort-icon\\\" [attr.aria-label]=\\\" sortOrder === 1 ? ariaLabelAsc : sortOrder === -1 ? ariaLabelDesc : '' \\\">\\n            <i class=\\\"ui-sortable-column-icon pi pi-fw\\\" [ngClass]=\\\"{'pi-sort-up': sortOrder === 1, 'pi-sort-down': sortOrder === -1, 'pi-sort': sortOrder === 0}\\\"></i>\\n        </a>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable])\r\n    ], TTSortIcon);\r\n    return TTSortIcon;\r\n}());\r\nexports.TTSortIcon = TTSortIcon;\r\nvar TTResizableColumn = /** @class */ (function () {\r\n    function TTResizableColumn(tt, el, domHandler, zone) {\r\n        this.tt = tt;\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.zone = zone;\r\n    }\r\n    TTResizableColumn.prototype.ngAfterViewInit = function () {\r\n        var _this = this;\r\n        if (this.isEnabled()) {\r\n            this.domHandler.addClass(this.el.nativeElement, 'ui-resizable-column');\r\n            this.resizer = document.createElement('span');\r\n            this.resizer.className = 'ui-column-resizer ui-clickable';\r\n            this.el.nativeElement.appendChild(this.resizer);\r\n            this.zone.runOutsideAngular(function () {\r\n                _this.resizerMouseDownListener = _this.onMouseDown.bind(_this);\r\n                _this.resizer.addEventListener('mousedown', _this.resizerMouseDownListener);\r\n            });\r\n        }\r\n    };\r\n    TTResizableColumn.prototype.bindDocumentEvents = function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular(function () {\r\n            _this.documentMouseMoveListener = _this.onDocumentMouseMove.bind(_this);\r\n            document.addEventListener('mousemove', _this.documentMouseMoveListener);\r\n            _this.documentMouseUpListener = _this.onDocumentMouseUp.bind(_this);\r\n            document.addEventListener('mouseup', _this.documentMouseUpListener);\r\n        });\r\n    };\r\n    TTResizableColumn.prototype.unbindDocumentEvents = function () {\r\n        if (this.documentMouseMoveListener) {\r\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\r\n            this.documentMouseMoveListener = null;\r\n        }\r\n        if (this.documentMouseUpListener) {\r\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\r\n            this.documentMouseUpListener = null;\r\n        }\r\n    };\r\n    TTResizableColumn.prototype.onMouseDown = function (event) {\r\n        this.tt.onColumnResizeBegin(event);\r\n        this.bindDocumentEvents();\r\n    };\r\n    TTResizableColumn.prototype.onDocumentMouseMove = function (event) {\r\n        this.tt.onColumnResize(event);\r\n    };\r\n    TTResizableColumn.prototype.onDocumentMouseUp = function (event) {\r\n        this.tt.onColumnResizeEnd(event, this.el.nativeElement);\r\n        this.unbindDocumentEvents();\r\n    };\r\n    TTResizableColumn.prototype.isEnabled = function () {\r\n        return this.ttResizableColumnDisabled !== true;\r\n    };\r\n    TTResizableColumn.prototype.ngOnDestroy = function () {\r\n        if (this.resizerMouseDownListener) {\r\n            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\r\n        }\r\n        this.unbindDocumentEvents();\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TTResizableColumn.prototype, \"ttResizableColumnDisabled\", void 0);\r\n    TTResizableColumn = __decorate([\r\n        core_1.Directive({\r\n            selector: '[ttResizableColumn]'\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])\r\n    ], TTResizableColumn);\r\n    return TTResizableColumn;\r\n}());\r\nexports.TTResizableColumn = TTResizableColumn;\r\nvar TTReorderableColumn = /** @class */ (function () {\r\n    function TTReorderableColumn(tt, el, domHandler, zone) {\r\n        this.tt = tt;\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.zone = zone;\r\n    }\r\n    TTReorderableColumn.prototype.ngAfterViewInit = function () {\r\n        if (this.isEnabled()) {\r\n            this.bindEvents();\r\n        }\r\n    };\r\n    TTReorderableColumn.prototype.bindEvents = function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular(function () {\r\n            _this.mouseDownListener = _this.onMouseDown.bind(_this);\r\n            _this.el.nativeElement.addEventListener('mousedown', _this.mouseDownListener);\r\n            _this.dragStartListener = _this.onDragStart.bind(_this);\r\n            _this.el.nativeElement.addEventListener('dragstart', _this.dragStartListener);\r\n            _this.dragOverListener = _this.onDragEnter.bind(_this);\r\n            _this.el.nativeElement.addEventListener('dragover', _this.dragOverListener);\r\n            _this.dragEnterListener = _this.onDragEnter.bind(_this);\r\n            _this.el.nativeElement.addEventListener('dragenter', _this.dragEnterListener);\r\n            _this.dragLeaveListener = _this.onDragLeave.bind(_this);\r\n            _this.el.nativeElement.addEventListener('dragleave', _this.dragLeaveListener);\r\n        });\r\n    };\r\n    TTReorderableColumn.prototype.unbindEvents = function () {\r\n        if (this.mouseDownListener) {\r\n            document.removeEventListener('mousedown', this.mouseDownListener);\r\n            this.mouseDownListener = null;\r\n        }\r\n        if (this.dragOverListener) {\r\n            document.removeEventListener('dragover', this.dragOverListener);\r\n            this.dragOverListener = null;\r\n        }\r\n        if (this.dragEnterListener) {\r\n            document.removeEventListener('dragenter', this.dragEnterListener);\r\n            this.dragEnterListener = null;\r\n        }\r\n        if (this.dragEnterListener) {\r\n            document.removeEventListener('dragenter', this.dragEnterListener);\r\n            this.dragEnterListener = null;\r\n        }\r\n        if (this.dragLeaveListener) {\r\n            document.removeEventListener('dragleave', this.dragLeaveListener);\r\n            this.dragLeaveListener = null;\r\n        }\r\n    };\r\n    TTReorderableColumn.prototype.onMouseDown = function (event) {\r\n        if (event.target.nodeName === 'INPUT' || this.domHandler.hasClass(event.target, 'ui-column-resizer'))\r\n            this.el.nativeElement.draggable = false;\r\n        else\r\n            this.el.nativeElement.draggable = true;\r\n    };\r\n    TTReorderableColumn.prototype.onDragStart = function (event) {\r\n        this.tt.onColumnDragStart(event, this.el.nativeElement);\r\n    };\r\n    TTReorderableColumn.prototype.onDragOver = function (event) {\r\n        event.preventDefault();\r\n    };\r\n    TTReorderableColumn.prototype.onDragEnter = function (event) {\r\n        this.tt.onColumnDragEnter(event, this.el.nativeElement);\r\n    };\r\n    TTReorderableColumn.prototype.onDragLeave = function (event) {\r\n        this.tt.onColumnDragLeave(event);\r\n    };\r\n    TTReorderableColumn.prototype.onDrop = function (event) {\r\n        if (this.isEnabled()) {\r\n            this.tt.onColumnDrop(event, this.el.nativeElement);\r\n        }\r\n    };\r\n    TTReorderableColumn.prototype.isEnabled = function () {\r\n        return this.ttReorderableColumnDisabled !== true;\r\n    };\r\n    TTReorderableColumn.prototype.ngOnDestroy = function () {\r\n        this.unbindEvents();\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TTReorderableColumn.prototype, \"ttReorderableColumnDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('drop', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], TTReorderableColumn.prototype, \"onDrop\", null);\r\n    TTReorderableColumn = __decorate([\r\n        core_1.Directive({\r\n            selector: '[ttReorderableColumn]'\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])\r\n    ], TTReorderableColumn);\r\n    return TTReorderableColumn;\r\n}());\r\nexports.TTReorderableColumn = TTReorderableColumn;\r\nvar TTSelectableRow = /** @class */ (function () {\r\n    function TTSelectableRow(tt, domHandler, tableService) {\r\n        var _this = this;\r\n        this.tt = tt;\r\n        this.domHandler = domHandler;\r\n        this.tableService = tableService;\r\n        if (this.isEnabled()) {\r\n            this.subscription = this.tt.tableService.selectionSource$.subscribe(function () {\r\n                _this.selected = _this.tt.isSelected(_this.rowNode.node);\r\n            });\r\n        }\r\n    }\r\n    TTSelectableRow.prototype.ngOnInit = function () {\r\n        if (this.isEnabled()) {\r\n            this.selected = this.tt.isSelected(this.rowNode.node);\r\n        }\r\n    };\r\n    TTSelectableRow.prototype.onClick = function (event) {\r\n        if (this.isEnabled()) {\r\n            this.tt.handleRowClick({\r\n                originalEvent: event,\r\n                rowNode: this.rowNode\r\n            });\r\n        }\r\n    };\r\n    TTSelectableRow.prototype.onTouchEnd = function (event) {\r\n        if (this.isEnabled()) {\r\n            this.tt.handleRowTouchEnd(event);\r\n        }\r\n    };\r\n    TTSelectableRow.prototype.isEnabled = function () {\r\n        return this.ttSelectableRowDisabled !== true;\r\n    };\r\n    TTSelectableRow.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"ttSelectableRow\"),\r\n        __metadata(\"design:type\", Object)\r\n    ], TTSelectableRow.prototype, \"rowNode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TTSelectableRow.prototype, \"ttSelectableRowDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('click', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Event]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], TTSelectableRow.prototype, \"onClick\", null);\r\n    __decorate([\r\n        core_1.HostListener('touchend', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Event]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], TTSelectableRow.prototype, \"onTouchEnd\", null);\r\n    TTSelectableRow = __decorate([\r\n        core_1.Directive({\r\n            selector: '[ttSelectableRow]',\r\n            providers: [domhandler_1.DomHandler],\r\n            host: {\r\n                '[class.ui-state-highlight]': 'selected'\r\n            }\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable, domhandler_1.DomHandler, TreeTableService])\r\n    ], TTSelectableRow);\r\n    return TTSelectableRow;\r\n}());\r\nexports.TTSelectableRow = TTSelectableRow;\r\nvar TTSelectableRowDblClick = /** @class */ (function () {\r\n    function TTSelectableRowDblClick(tt, domHandler, tableService) {\r\n        var _this = this;\r\n        this.tt = tt;\r\n        this.domHandler = domHandler;\r\n        this.tableService = tableService;\r\n        if (this.isEnabled()) {\r\n            this.subscription = this.tt.tableService.selectionSource$.subscribe(function () {\r\n                _this.selected = _this.tt.isSelected(_this.rowNode.node);\r\n            });\r\n        }\r\n    }\r\n    TTSelectableRowDblClick.prototype.ngOnInit = function () {\r\n        if (this.isEnabled()) {\r\n            this.selected = this.tt.isSelected(this.rowNode.node);\r\n        }\r\n    };\r\n    TTSelectableRowDblClick.prototype.onClick = function (event) {\r\n        if (this.isEnabled()) {\r\n            this.tt.handleRowClick({\r\n                originalEvent: event,\r\n                rowNode: this.rowNode\r\n            });\r\n        }\r\n    };\r\n    TTSelectableRowDblClick.prototype.isEnabled = function () {\r\n        return this.ttSelectableRowDisabled !== true;\r\n    };\r\n    TTSelectableRowDblClick.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"ttSelectableRowDblClick\"),\r\n        __metadata(\"design:type\", Object)\r\n    ], TTSelectableRowDblClick.prototype, \"rowNode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TTSelectableRowDblClick.prototype, \"ttSelectableRowDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('dblclick', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Event]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], TTSelectableRowDblClick.prototype, \"onClick\", null);\r\n    TTSelectableRowDblClick = __decorate([\r\n        core_1.Directive({\r\n            selector: '[ttSelectableRowDblClick]',\r\n            providers: [domhandler_1.DomHandler],\r\n            host: {\r\n                '[class.ui-state-highlight]': 'selected'\r\n            }\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable, domhandler_1.DomHandler, TreeTableService])\r\n    ], TTSelectableRowDblClick);\r\n    return TTSelectableRowDblClick;\r\n}());\r\nexports.TTSelectableRowDblClick = TTSelectableRowDblClick;\r\nvar TTContextMenuRow = /** @class */ (function () {\r\n    function TTContextMenuRow(tt, tableService) {\r\n        var _this = this;\r\n        this.tt = tt;\r\n        this.tableService = tableService;\r\n        if (this.isEnabled()) {\r\n            this.subscription = this.tt.tableService.contextMenuSource$.subscribe(function (node) {\r\n                _this.selected = _this.tt.equals(_this.rowNode.node, node);\r\n            });\r\n        }\r\n    }\r\n    TTContextMenuRow.prototype.onContextMenu = function (event) {\r\n        if (this.isEnabled()) {\r\n            this.tt.handleRowRightClick({\r\n                originalEvent: event,\r\n                rowNode: this.rowNode\r\n            });\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    TTContextMenuRow.prototype.isEnabled = function () {\r\n        return this.ttContextMenuRowDisabled !== true;\r\n    };\r\n    TTContextMenuRow.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"ttContextMenuRow\"),\r\n        __metadata(\"design:type\", Object)\r\n    ], TTContextMenuRow.prototype, \"rowNode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TTContextMenuRow.prototype, \"ttContextMenuRowDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('contextmenu', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Event]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], TTContextMenuRow.prototype, \"onContextMenu\", null);\r\n    TTContextMenuRow = __decorate([\r\n        core_1.Directive({\r\n            selector: '[ttContextMenuRow]',\r\n            host: {\r\n                '[class.ui-contextmenu-selected]': 'selected'\r\n            }\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable, TreeTableService])\r\n    ], TTContextMenuRow);\r\n    return TTContextMenuRow;\r\n}());\r\nexports.TTContextMenuRow = TTContextMenuRow;\r\nvar TTCheckbox = /** @class */ (function () {\r\n    function TTCheckbox(tt, domHandler, tableService) {\r\n        var _this = this;\r\n        this.tt = tt;\r\n        this.domHandler = domHandler;\r\n        this.tableService = tableService;\r\n        this.subscription = this.tt.tableService.selectionSource$.subscribe(function () {\r\n            _this.checked = _this.tt.isSelected(_this.rowNode.node);\r\n        });\r\n    }\r\n    TTCheckbox.prototype.ngOnInit = function () {\r\n        this.checked = this.tt.isSelected(this.rowNode.node);\r\n    };\r\n    TTCheckbox.prototype.onClick = function (event) {\r\n        if (!this.disabled) {\r\n            this.tt.toggleNodeWithCheckbox({\r\n                originalEvent: event,\r\n                rowNode: this.rowNode\r\n            });\r\n        }\r\n        this.domHandler.clearSelection();\r\n    };\r\n    TTCheckbox.prototype.onFocus = function () {\r\n        this.domHandler.addClass(this.boxViewChild.nativeElement, 'ui-state-focus');\r\n    };\r\n    TTCheckbox.prototype.onBlur = function () {\r\n        this.domHandler.removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');\r\n    };\r\n    TTCheckbox.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TTCheckbox.prototype, \"disabled\", void 0);\r\n    __decorate([\r\n        core_1.Input(\"value\"),\r\n        __metadata(\"design:type\", Object)\r\n    ], TTCheckbox.prototype, \"rowNode\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('box'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TTCheckbox.prototype, \"boxViewChild\", void 0);\r\n    TTCheckbox = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-treeTableCheckbox',\r\n            template: \"\\n        <div class=\\\"ui-chkbox ui-treetable-chkbox ui-widget\\\" (click)=\\\"onClick($event)\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input type=\\\"checkbox\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\">\\n            </div>\\n            <div #box [ngClass]=\\\"{'ui-chkbox-box ui-widget ui-state-default':true,\\n                'ui-state-active':checked, 'ui-state-disabled':disabled}\\\">\\n                <span class=\\\"ui-chkbox-icon ui-clickable pi\\\" [ngClass]=\\\"{'pi-check':checked, 'pi-minus': rowNode.node.partialSelected}\\\"></span>\\n            </div>\\n        </div>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable, domhandler_1.DomHandler, TreeTableService])\r\n    ], TTCheckbox);\r\n    return TTCheckbox;\r\n}());\r\nexports.TTCheckbox = TTCheckbox;\r\nvar TTHeaderCheckbox = /** @class */ (function () {\r\n    function TTHeaderCheckbox(tt, domHandler, tableService) {\r\n        var _this = this;\r\n        this.tt = tt;\r\n        this.domHandler = domHandler;\r\n        this.tableService = tableService;\r\n        this.valueChangeSubscription = this.tt.tableService.uiUpdateSource$.subscribe(function () {\r\n            _this.checked = _this.updateCheckedState();\r\n        });\r\n        this.selectionChangeSubscription = this.tt.tableService.selectionSource$.subscribe(function () {\r\n            _this.checked = _this.updateCheckedState();\r\n        });\r\n    }\r\n    TTHeaderCheckbox.prototype.ngOnInit = function () {\r\n        this.checked = this.updateCheckedState();\r\n    };\r\n    TTHeaderCheckbox.prototype.onClick = function (event, checked) {\r\n        if (this.tt.value && this.tt.value.length > 0) {\r\n            this.tt.toggleNodesWithCheckbox(event, !checked);\r\n        }\r\n        this.domHandler.clearSelection();\r\n    };\r\n    TTHeaderCheckbox.prototype.onFocus = function () {\r\n        this.domHandler.addClass(this.boxViewChild.nativeElement, 'ui-state-focus');\r\n    };\r\n    TTHeaderCheckbox.prototype.onBlur = function () {\r\n        this.domHandler.removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');\r\n    };\r\n    TTHeaderCheckbox.prototype.ngOnDestroy = function () {\r\n        if (this.selectionChangeSubscription) {\r\n            this.selectionChangeSubscription.unsubscribe();\r\n        }\r\n        if (this.valueChangeSubscription) {\r\n            this.valueChangeSubscription.unsubscribe();\r\n        }\r\n    };\r\n    TTHeaderCheckbox.prototype.updateCheckedState = function () {\r\n        var checked;\r\n        if (this.tt.value) {\r\n            for (var _i = 0, _a = this.tt.value; _i < _a.length; _i++) {\r\n                var node = _a[_i];\r\n                if (this.tt.isSelected(node)) {\r\n                    checked = true;\r\n                }\r\n                else {\r\n                    checked = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            checked = false;\r\n        }\r\n        return checked;\r\n    };\r\n    __decorate([\r\n        core_1.ViewChild('box'),\r\n        __metadata(\"design:type\", core_1.ElementRef)\r\n    ], TTHeaderCheckbox.prototype, \"boxViewChild\", void 0);\r\n    TTHeaderCheckbox = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-treeTableHeaderCheckbox',\r\n            template: \"\\n        <div class=\\\"ui-chkbox ui-treetable-header-chkbox ui-widget\\\" (click)=\\\"onClick($event, cb.checked)\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #cb type=\\\"checkbox\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\" [disabled]=\\\"!tt.value||tt.value.length === 0\\\">\\n            </div>\\n            <div #box [ngClass]=\\\"{'ui-chkbox-box ui-widget ui-state-default':true,\\n                'ui-state-active':checked, 'ui-state-disabled': (!tt.value || tt.value.length === 0)}\\\">\\n                <span class=\\\"ui-chkbox-icon ui-clickable\\\" [ngClass]=\\\"{'pi pi-check':checked}\\\"></span>\\n            </div>\\n        </div>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable, domhandler_1.DomHandler, TreeTableService])\r\n    ], TTHeaderCheckbox);\r\n    return TTHeaderCheckbox;\r\n}());\r\nexports.TTHeaderCheckbox = TTHeaderCheckbox;\r\nvar TTEditableColumn = /** @class */ (function () {\r\n    function TTEditableColumn(tt, el, domHandler, zone) {\r\n        this.tt = tt;\r\n        this.el = el;\r\n        this.domHandler = domHandler;\r\n        this.zone = zone;\r\n    }\r\n    TTEditableColumn.prototype.ngAfterViewInit = function () {\r\n        if (this.isEnabled()) {\r\n            this.domHandler.addClass(this.el.nativeElement, 'ui-editable-column');\r\n        }\r\n    };\r\n    TTEditableColumn.prototype.isValid = function () {\r\n        return (this.tt.editingCell && this.domHandler.find(this.tt.editingCell, '.ng-invalid.ng-dirty').length === 0);\r\n    };\r\n    TTEditableColumn.prototype.onClick = function (event) {\r\n        if (this.isEnabled()) {\r\n            if (this.tt.editingCell) {\r\n                if (this.tt.editingCell !== this.el.nativeElement) {\r\n                    if (!this.isValid()) {\r\n                        return;\r\n                    }\r\n                    this.domHandler.removeClass(this.tt.editingCell, 'ui-editing-cell');\r\n                    this.openCell();\r\n                }\r\n            }\r\n            else {\r\n                this.openCell();\r\n            }\r\n        }\r\n    };\r\n    TTEditableColumn.prototype.openCell = function () {\r\n        var _this = this;\r\n        this.tt.editingCell = this.el.nativeElement;\r\n        this.domHandler.addClass(this.el.nativeElement, 'ui-editing-cell');\r\n        this.tt.onEditInit.emit({ field: this.field, data: this.data });\r\n        this.zone.runOutsideAngular(function () {\r\n            setTimeout(function () {\r\n                var focusable = _this.domHandler.findSingle(_this.el.nativeElement, 'input, textarea');\r\n                if (focusable) {\r\n                    focusable.focus();\r\n                }\r\n            }, 50);\r\n        });\r\n    };\r\n    TTEditableColumn.prototype.onKeyDown = function (event) {\r\n        if (this.isEnabled()) {\r\n            //enter\r\n            if (event.keyCode == 13) {\r\n                if (this.isValid()) {\r\n                    this.domHandler.removeClass(this.tt.editingCell, 'ui-editing-cell');\r\n                    this.tt.editingCell = null;\r\n                    this.tt.onEditComplete.emit({ field: this.field, data: this.data });\r\n                }\r\n                event.preventDefault();\r\n            }\r\n            else if (event.keyCode == 27) {\r\n                if (this.isValid()) {\r\n                    this.domHandler.removeClass(this.tt.editingCell, 'ui-editing-cell');\r\n                    this.tt.editingCell = null;\r\n                    this.tt.onEditCancel.emit({ field: this.field, data: this.data });\r\n                }\r\n                event.preventDefault();\r\n            }\r\n            else if (event.keyCode == 9) {\r\n                this.tt.onEditComplete.emit({ field: this.field, data: this.data });\r\n                if (event.shiftKey)\r\n                    this.moveToPreviousCell(event);\r\n                else\r\n                    this.moveToNextCell(event);\r\n            }\r\n        }\r\n    };\r\n    TTEditableColumn.prototype.findCell = function (element) {\r\n        if (element) {\r\n            var cell = element;\r\n            while (cell && !this.domHandler.hasClass(cell, 'ui-editing-cell')) {\r\n                cell = cell.parentElement;\r\n            }\r\n            return cell;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    TTEditableColumn.prototype.moveToPreviousCell = function (event) {\r\n        var currentCell = this.findCell(event.target);\r\n        var row = currentCell.parentElement;\r\n        var targetCell = this.findPreviousEditableColumn(currentCell);\r\n        if (targetCell) {\r\n            this.domHandler.invokeElementMethod(targetCell, 'click');\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    TTEditableColumn.prototype.moveToNextCell = function (event) {\r\n        var currentCell = this.findCell(event.target);\r\n        var row = currentCell.parentElement;\r\n        var targetCell = this.findNextEditableColumn(currentCell);\r\n        if (targetCell) {\r\n            this.domHandler.invokeElementMethod(targetCell, 'click');\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    TTEditableColumn.prototype.findPreviousEditableColumn = function (cell) {\r\n        var prevCell = cell.previousElementSibling;\r\n        if (!prevCell) {\r\n            var previousRow = cell.parentElement.previousElementSibling;\r\n            if (previousRow) {\r\n                prevCell = previousRow.lastElementChild;\r\n            }\r\n        }\r\n        if (prevCell) {\r\n            if (this.domHandler.hasClass(prevCell, 'ui-editable-column'))\r\n                return prevCell;\r\n            else\r\n                return this.findPreviousEditableColumn(prevCell);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    TTEditableColumn.prototype.findNextEditableColumn = function (cell) {\r\n        var nextCell = cell.nextElementSibling;\r\n        if (!nextCell) {\r\n            var nextRow = cell.parentElement.nextElementSibling;\r\n            if (nextRow) {\r\n                nextCell = nextRow.firstElementChild;\r\n            }\r\n        }\r\n        if (nextCell) {\r\n            if (this.domHandler.hasClass(nextCell, 'ui-editable-column'))\r\n                return nextCell;\r\n            else\r\n                return this.findNextEditableColumn(nextCell);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    TTEditableColumn.prototype.isEnabled = function () {\r\n        return this.ttEditableColumnDisabled !== true;\r\n    };\r\n    __decorate([\r\n        core_1.Input(\"ttEditableColumn\"),\r\n        __metadata(\"design:type\", Object)\r\n    ], TTEditableColumn.prototype, \"data\", void 0);\r\n    __decorate([\r\n        core_1.Input(\"ttEditableColumnField\"),\r\n        __metadata(\"design:type\", Object)\r\n    ], TTEditableColumn.prototype, \"field\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], TTEditableColumn.prototype, \"ttEditableColumnDisabled\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('click', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [MouseEvent]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], TTEditableColumn.prototype, \"onClick\", null);\r\n    __decorate([\r\n        core_1.HostListener('keydown', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [KeyboardEvent]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], TTEditableColumn.prototype, \"onKeyDown\", null);\r\n    TTEditableColumn = __decorate([\r\n        core_1.Directive({\r\n            selector: '[ttEditableColumn]'\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])\r\n    ], TTEditableColumn);\r\n    return TTEditableColumn;\r\n}());\r\nexports.TTEditableColumn = TTEditableColumn;\r\nvar TreeTableCellEditor = /** @class */ (function () {\r\n    function TreeTableCellEditor(tt, editableColumn) {\r\n        this.tt = tt;\r\n        this.editableColumn = editableColumn;\r\n    }\r\n    TreeTableCellEditor.prototype.ngAfterContentInit = function () {\r\n        var _this = this;\r\n        this.templates.forEach(function (item) {\r\n            switch (item.getType()) {\r\n                case 'input':\r\n                    _this.inputTemplate = item.template;\r\n                    break;\r\n                case 'output':\r\n                    _this.outputTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    __decorate([\r\n        core_1.ContentChildren(shared_1.PrimeTemplate),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], TreeTableCellEditor.prototype, \"templates\", void 0);\r\n    TreeTableCellEditor = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-treeTableCellEditor',\r\n            template: \"\\n        <ng-container *ngIf=\\\"tt.editingCell === editableColumn.el.nativeElement\\\">\\n            <ng-container *ngTemplateOutlet=\\\"inputTemplate\\\"></ng-container>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"!tt.editingCell || tt.editingCell !== editableColumn.el.nativeElement\\\">\\n            <ng-container *ngTemplateOutlet=\\\"outputTemplate\\\"></ng-container>\\n        </ng-container>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable, TTEditableColumn])\r\n    ], TreeTableCellEditor);\r\n    return TreeTableCellEditor;\r\n}());\r\nexports.TreeTableCellEditor = TreeTableCellEditor;\r\nvar TreeTableToggler = /** @class */ (function () {\r\n    function TreeTableToggler(tt) {\r\n        this.tt = tt;\r\n    }\r\n    TreeTableToggler.prototype.onClick = function (event) {\r\n        this.rowNode.node.expanded = !this.rowNode.node.expanded;\r\n        if (this.rowNode.node.expanded) {\r\n            this.tt.onNodeExpand.emit({\r\n                originalEvent: event,\r\n                node: this.rowNode.node\r\n            });\r\n        }\r\n        else {\r\n            this.tt.onNodeCollapse.emit({\r\n                originalEvent: event,\r\n                node: this.rowNode.node\r\n            });\r\n        }\r\n        this.tt.updateSerializedValue();\r\n        this.tt.tableService.onUIUpdate(this.tt.value);\r\n        event.preventDefault();\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], TreeTableToggler.prototype, \"rowNode\", void 0);\r\n    TreeTableToggler = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-treeTableToggler',\r\n            template: \"\\n        <a href=\\\"#\\\" class=\\\"ui-treetable-toggler\\\" *ngIf=\\\"rowNode.node.leaf === false || rowNode.level !== 0 || rowNode.node.children && rowNode.node.children.length\\\" (click)=\\\"onClick($event)\\\" [style.visibility]=\\\"rowNode.node.leaf === false || (rowNode.node.children && rowNode.node.children.length) ? 'visible' : 'hidden'\\\" [style.marginLeft]=\\\"rowNode.level * 16 + 'px'\\\">\\n            <i [ngClass]=\\\"rowNode.node.expanded ? 'pi pi-fw pi-chevron-down' : 'pi pi-fw pi-chevron-right'\\\"></i>\\n        </a>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeTable])\r\n    ], TreeTableToggler);\r\n    return TreeTableToggler;\r\n}());\r\nexports.TreeTableToggler = TreeTableToggler;\r\nvar TreeTableModule = /** @class */ (function () {\r\n    function TreeTableModule() {\r\n    }\r\n    TreeTableModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule, paginator_1.PaginatorModule],\r\n            exports: [TreeTable, shared_1.SharedModule, TreeTableToggler, TTSortableColumn, TTSortIcon, TTResizableColumn, TTReorderableColumn, TTSelectableRow, TTSelectableRowDblClick, TTContextMenuRow, TTCheckbox, TTHeaderCheckbox, TTEditableColumn, TreeTableCellEditor],\r\n            declarations: [TreeTable, TreeTableToggler, TTScrollableView, TTBody, TTSortableColumn, TTSortIcon, TTResizableColumn, TTReorderableColumn, TTSelectableRow, TTSelectableRowDblClick, TTContextMenuRow, TTCheckbox, TTHeaderCheckbox, TTEditableColumn, TreeTableCellEditor]\r\n        })\r\n    ], TreeTableModule);\r\n    return TreeTableModule;\r\n}());\r\nexports.TreeTableModule = TreeTableModule;\r\n//# sourceMappingURL=treetable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/treetable/treetable.js\n// module id = 1466\n// module chunks = 0 1 5 7 9 11","/* Shorthand */\r\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./components/tree/tree\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/tree.js\n// module id = 1467\n// module chunks = 0 1 5 7 9 11","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar core_2 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar shared_1 = require(\"../common/shared\");\r\nvar shared_2 = require(\"../common/shared\");\r\nvar treedragdropservice_1 = require(\"../common/treedragdropservice\");\r\nvar domhandler_1 = require(\"../dom/domhandler\");\r\nvar UITreeNode = /** @class */ (function () {\r\n    function UITreeNode(tree, domHandler) {\r\n        this.tree = tree;\r\n        this.domHandler = domHandler;\r\n    }\r\n    UITreeNode_1 = UITreeNode;\r\n    UITreeNode.prototype.ngOnInit = function () {\r\n        this.node.parent = this.parentNode;\r\n    };\r\n    UITreeNode.prototype.getIcon = function () {\r\n        var icon;\r\n        if (this.node.icon)\r\n            icon = this.node.icon;\r\n        else\r\n            icon = this.node.expanded && this.node.children && this.node.children.length ? this.node.expandedIcon : this.node.collapsedIcon;\r\n        return UITreeNode_1.ICON_CLASS + ' ' + icon;\r\n    };\r\n    UITreeNode.prototype.isLeaf = function () {\r\n        return this.node.leaf == false ? false : !(this.node.children && this.node.children.length);\r\n    };\r\n    UITreeNode.prototype.toggle = function (event) {\r\n        if (this.node.expanded)\r\n            this.collapse(event);\r\n        else\r\n            this.expand(event);\r\n    };\r\n    UITreeNode.prototype.expand = function (event) {\r\n        this.node.expanded = true;\r\n        this.tree.onNodeExpand.emit({ originalEvent: event, node: this.node });\r\n    };\r\n    UITreeNode.prototype.collapse = function (event) {\r\n        this.node.expanded = false;\r\n        this.tree.onNodeCollapse.emit({ originalEvent: event, node: this.node });\r\n    };\r\n    UITreeNode.prototype.onNodeClick = function (event) {\r\n        this.tree.onNodeClick(event, this.node);\r\n    };\r\n    UITreeNode.prototype.onNodeTouchEnd = function () {\r\n        this.tree.onNodeTouchEnd();\r\n    };\r\n    UITreeNode.prototype.onNodeRightClick = function (event) {\r\n        this.tree.onNodeRightClick(event, this.node);\r\n    };\r\n    UITreeNode.prototype.isSelected = function () {\r\n        return this.tree.isSelected(this.node);\r\n    };\r\n    UITreeNode.prototype.onDropPoint = function (event, position) {\r\n        event.preventDefault();\r\n        var dragNode = this.tree.dragNode;\r\n        var dragNodeIndex = this.tree.dragNodeIndex;\r\n        var dragNodeScope = this.tree.dragNodeScope;\r\n        var isValidDropPointIndex = this.tree.dragNodeTree === this.tree ? (position === 1 || dragNodeIndex !== this.index - 1) : true;\r\n        if (this.tree.allowDrop(dragNode, this.node, dragNodeScope) && isValidDropPointIndex) {\r\n            var newNodeList = this.node.parent ? this.node.parent.children : this.tree.value;\r\n            this.tree.dragNodeSubNodes.splice(dragNodeIndex, 1);\r\n            var dropIndex = this.index;\r\n            if (position < 0) {\r\n                dropIndex = (this.tree.dragNodeSubNodes === newNodeList) ? ((this.tree.dragNodeIndex > this.index) ? this.index : this.index - 1) : this.index;\r\n                newNodeList.splice(dropIndex, 0, dragNode);\r\n            }\r\n            else {\r\n                dropIndex = newNodeList.length;\r\n                newNodeList.push(dragNode);\r\n            }\r\n            this.tree.dragDropService.stopDrag({\r\n                node: dragNode,\r\n                subNodes: this.node.parent ? this.node.parent.children : this.tree.value,\r\n                index: dragNodeIndex\r\n            });\r\n            this.tree.onNodeDrop.emit({\r\n                originalEvent: event,\r\n                dragNode: dragNode,\r\n                dropNode: this.node,\r\n                dropIndex: dropIndex\r\n            });\r\n        }\r\n        this.draghoverPrev = false;\r\n        this.draghoverNext = false;\r\n    };\r\n    UITreeNode.prototype.onDropPointDragOver = function (event) {\r\n        event.dataTransfer.dropEffect = 'move';\r\n        event.preventDefault();\r\n    };\r\n    UITreeNode.prototype.onDropPointDragEnter = function (event, position) {\r\n        if (this.tree.allowDrop(this.tree.dragNode, this.node, this.tree.dragNodeScope)) {\r\n            if (position < 0)\r\n                this.draghoverPrev = true;\r\n            else\r\n                this.draghoverNext = true;\r\n        }\r\n    };\r\n    UITreeNode.prototype.onDropPointDragLeave = function (event) {\r\n        this.draghoverPrev = false;\r\n        this.draghoverNext = false;\r\n    };\r\n    UITreeNode.prototype.onDragStart = function (event) {\r\n        if (this.tree.draggableNodes && this.node.draggable !== false) {\r\n            event.dataTransfer.setData(\"text\", \"data\");\r\n            this.tree.dragDropService.startDrag({\r\n                tree: this,\r\n                node: this.node,\r\n                subNodes: this.node.parent ? this.node.parent.children : this.tree.value,\r\n                index: this.index,\r\n                scope: this.tree.draggableScope\r\n            });\r\n        }\r\n        else {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    UITreeNode.prototype.onDragStop = function (event) {\r\n        this.tree.dragDropService.stopDrag({\r\n            node: this.node,\r\n            subNodes: this.node.parent ? this.node.parent.children : this.tree.value,\r\n            index: this.index\r\n        });\r\n    };\r\n    UITreeNode.prototype.onDropNodeDragOver = function (event) {\r\n        event.dataTransfer.dropEffect = 'move';\r\n        if (this.tree.droppableNodes) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n    UITreeNode.prototype.onDropNode = function (event) {\r\n        if (this.tree.droppableNodes && this.node.droppable !== false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            var dragNode = this.tree.dragNode;\r\n            if (this.tree.allowDrop(dragNode, this.node, this.tree.dragNodeScope)) {\r\n                var dragNodeIndex = this.tree.dragNodeIndex;\r\n                this.tree.dragNodeSubNodes.splice(dragNodeIndex, 1);\r\n                if (this.node.children)\r\n                    this.node.children.push(dragNode);\r\n                else\r\n                    this.node.children = [dragNode];\r\n                this.tree.dragDropService.stopDrag({\r\n                    node: dragNode,\r\n                    subNodes: this.node.parent ? this.node.parent.children : this.tree.value,\r\n                    index: this.tree.dragNodeIndex\r\n                });\r\n                this.tree.onNodeDrop.emit({\r\n                    originalEvent: event,\r\n                    dragNode: dragNode,\r\n                    dropNode: this.node,\r\n                    index: this.index\r\n                });\r\n            }\r\n        }\r\n        this.draghoverNode = false;\r\n    };\r\n    UITreeNode.prototype.onDropNodeDragEnter = function (event) {\r\n        if (this.tree.droppableNodes && this.node.droppable !== false && this.tree.allowDrop(this.tree.dragNode, this.node, this.tree.dragNodeScope)) {\r\n            this.draghoverNode = true;\r\n        }\r\n    };\r\n    UITreeNode.prototype.onDropNodeDragLeave = function (event) {\r\n        if (this.tree.droppableNodes) {\r\n            var rect = event.currentTarget.getBoundingClientRect();\r\n            if (event.x > rect.left + rect.width || event.x < rect.left || event.y >= Math.floor(rect.top + rect.height) || event.y < rect.top) {\r\n                this.draghoverNode = false;\r\n            }\r\n        }\r\n    };\r\n    UITreeNode.prototype.onKeyDown = function (event) {\r\n        var nodeElement = event.target.parentElement.parentElement;\r\n        switch (event.which) {\r\n            //down arrow\r\n            case 40:\r\n                var listElement = nodeElement.children[0].children[1];\r\n                if (listElement) {\r\n                    this.focusNode(listElement.children[0]);\r\n                }\r\n                else {\r\n                    var nextNodeElement = nodeElement.nextElementSibling;\r\n                    if (nextNodeElement) {\r\n                        this.focusNode(nextNodeElement);\r\n                    }\r\n                    else {\r\n                        var nextSiblingAncestor = this.findNextSiblingOfAncestor(nodeElement);\r\n                        if (nextSiblingAncestor) {\r\n                            this.focusNode(nextSiblingAncestor);\r\n                        }\r\n                    }\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            //up arrow\r\n            case 38:\r\n                if (nodeElement.previousElementSibling) {\r\n                    this.focusNode(this.findLastVisibleDescendant(nodeElement.previousElementSibling));\r\n                }\r\n                else {\r\n                    var parentNodeElement = this.getParentNodeElement(nodeElement);\r\n                    if (parentNodeElement) {\r\n                        this.focusNode(parentNodeElement);\r\n                    }\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            //right arrow\r\n            case 39:\r\n                if (!this.node.expanded) {\r\n                    this.expand(event);\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            //left arrow\r\n            case 37:\r\n                if (this.node.expanded) {\r\n                    this.collapse(event);\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 13:\r\n                this.tree.onNodeClick(event, this.node);\r\n                event.preventDefault();\r\n                break;\r\n            default:\r\n                //no op\r\n                break;\r\n        }\r\n    };\r\n    UITreeNode.prototype.findNextSiblingOfAncestor = function (nodeElement) {\r\n        var parentNodeElement = this.getParentNodeElement(nodeElement);\r\n        if (parentNodeElement) {\r\n            if (parentNodeElement.nextElementSibling)\r\n                return parentNodeElement.nextElementSibling;\r\n            else\r\n                return this.findNextSiblingOfAncestor(parentNodeElement);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    UITreeNode.prototype.findLastVisibleDescendant = function (nodeElement) {\r\n        var childrenListElement = nodeElement.children[0].children[1];\r\n        if (childrenListElement) {\r\n            var lastChildElement = childrenListElement.children[childrenListElement.children.length - 1];\r\n            return this.findLastVisibleDescendant(lastChildElement);\r\n        }\r\n        else {\r\n            return nodeElement;\r\n        }\r\n    };\r\n    UITreeNode.prototype.getParentNodeElement = function (nodeElement) {\r\n        var parentNodeElement = nodeElement.parentElement.parentElement.parentElement;\r\n        return parentNodeElement.tagName === 'P-TREENODE' ? parentNodeElement : null;\r\n    };\r\n    UITreeNode.prototype.focusNode = function (element) {\r\n        element.children[0].children[0].focus();\r\n    };\r\n    UITreeNode.ICON_CLASS = 'ui-treenode-icon ';\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], UITreeNode.prototype, \"node\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], UITreeNode.prototype, \"parentNode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], UITreeNode.prototype, \"root\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], UITreeNode.prototype, \"index\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], UITreeNode.prototype, \"firstChild\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], UITreeNode.prototype, \"lastChild\", void 0);\r\n    UITreeNode = UITreeNode_1 = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-treeNode',\r\n            template: \"\\n        <ng-template [ngIf]=\\\"node\\\">\\n            <li *ngIf=\\\"tree.droppableNodes\\\" class=\\\"ui-treenode-droppoint\\\" [ngClass]=\\\"{'ui-treenode-droppoint-active ui-state-highlight':draghoverPrev}\\\"\\n            (drop)=\\\"onDropPoint($event,-1)\\\" (dragover)=\\\"onDropPointDragOver($event)\\\" (dragenter)=\\\"onDropPointDragEnter($event,-1)\\\" (dragleave)=\\\"onDropPointDragLeave($event)\\\"></li>\\n            <li *ngIf=\\\"!tree.horizontal\\\" [ngClass]=\\\"['ui-treenode',node.styleClass||'', isLeaf() ? 'ui-treenode-leaf': '']\\\">\\n                <div class=\\\"ui-treenode-content\\\" role=\\\"treeitem\\\" (click)=\\\"onNodeClick($event)\\\" (contextmenu)=\\\"onNodeRightClick($event)\\\" (touchend)=\\\"onNodeTouchEnd()\\\"\\n                    (drop)=\\\"onDropNode($event)\\\" (dragover)=\\\"onDropNodeDragOver($event)\\\" (dragenter)=\\\"onDropNodeDragEnter($event)\\\" (dragleave)=\\\"onDropNodeDragLeave($event)\\\"\\n                    [draggable]=\\\"tree.draggableNodes\\\" (dragstart)=\\\"onDragStart($event)\\\" (dragend)=\\\"onDragStop($event)\\\" tabIndex=\\\"0\\\"\\n                    [ngClass]=\\\"{'ui-treenode-selectable':tree.selectionMode && node.selectable !== false,'ui-treenode-dragover':draghoverNode, 'ui-treenode-content-selected':isSelected()}\\\" \\n                    (keydown)=\\\"onKeyDown($event)\\\" [attr.aria-posinset]=\\\"this.index + 1\\\" [attr.aria-expanded]=\\\"this.node.expanded\\\" [attr.aria-selected]=\\\"isSelected()\\\">\\n                    <span class=\\\"ui-tree-toggler pi pi-fw\\\" [ngClass]=\\\"{'pi-caret-right':!node.expanded,'pi-caret-down':node.expanded}\\\"\\n                            (click)=\\\"toggle($event)\\\"></span\\n                    ><div class=\\\"ui-chkbox\\\" *ngIf=\\\"tree.selectionMode == 'checkbox' && node.selectable !== false\\\"><div class=\\\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\\\">\\n                        <span class=\\\"ui-chkbox-icon ui-clickable pi\\\"\\n                            [ngClass]=\\\"{'pi-check':isSelected(),'pi-minus':node.partialSelected}\\\"></span></div></div\\n                    ><span [class]=\\\"getIcon()\\\" *ngIf=\\\"node.icon||node.expandedIcon||node.collapsedIcon\\\"></span\\n                    ><span class=\\\"ui-treenode-label ui-corner-all\\\"\\n                        [ngClass]=\\\"{'ui-state-highlight':isSelected()}\\\">\\n                            <span *ngIf=\\\"!tree.getTemplateForNode(node)\\\">{{node.label}}</span>\\n                            <span *ngIf=\\\"tree.getTemplateForNode(node)\\\">\\n                                <ng-container *ngTemplateOutlet=\\\"tree.getTemplateForNode(node); context: {$implicit: node}\\\"></ng-container>\\n                            </span>\\n                    </span>\\n                </div>\\n                <ul class=\\\"ui-treenode-children\\\" style=\\\"display: none;\\\" *ngIf=\\\"node.children && node.expanded\\\" [style.display]=\\\"node.expanded ? 'block' : 'none'\\\" role=\\\"group\\\">\\n                    <p-treeNode *ngFor=\\\"let childNode of node.children;let firstChild=first;let lastChild=last; let index=index; trackBy: tree.nodeTrackBy\\\" [node]=\\\"childNode\\\" [parentNode]=\\\"node\\\"\\n                        [firstChild]=\\\"firstChild\\\" [lastChild]=\\\"lastChild\\\" [index]=\\\"index\\\"></p-treeNode>\\n                </ul>\\n            </li>\\n            <li *ngIf=\\\"tree.droppableNodes&&lastChild\\\" class=\\\"ui-treenode-droppoint\\\" [ngClass]=\\\"{'ui-treenode-droppoint-active ui-state-highlight':draghoverNext}\\\"\\n            (drop)=\\\"onDropPoint($event,1)\\\" (dragover)=\\\"onDropPointDragOver($event)\\\" (dragenter)=\\\"onDropPointDragEnter($event,1)\\\" (dragleave)=\\\"onDropPointDragLeave($event)\\\"></li>\\n            <table *ngIf=\\\"tree.horizontal\\\" [class]=\\\"node.styleClass\\\">\\n                <tbody>\\n                    <tr>\\n                        <td class=\\\"ui-treenode-connector\\\" *ngIf=\\\"!root\\\">\\n                            <table class=\\\"ui-treenode-connector-table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <td [ngClass]=\\\"{'ui-treenode-connector-line':!firstChild}\\\"></td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td [ngClass]=\\\"{'ui-treenode-connector-line':!lastChild}\\\"></td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </td>\\n                        <td class=\\\"ui-treenode\\\" [ngClass]=\\\"{'ui-treenode-collapsed':!node.expanded}\\\">\\n                            <div class=\\\"ui-treenode-content ui-state-default ui-corner-all\\\"\\n                                [ngClass]=\\\"{'ui-treenode-selectable':tree.selectionMode,'ui-state-highlight':isSelected()}\\\" (click)=\\\"onNodeClick($event)\\\" (contextmenu)=\\\"onNodeRightClick($event)\\\"\\n                                (touchend)=\\\"onNodeTouchEnd()\\\">\\n                                <span class=\\\"ui-tree-toggler pi pi-fw\\\" [ngClass]=\\\"{'pi-plus':!node.expanded,'pi-minus':node.expanded}\\\" *ngIf=\\\"!isLeaf()\\\"\\n                                        (click)=\\\"toggle($event)\\\"></span\\n                                ><span [class]=\\\"getIcon()\\\" *ngIf=\\\"node.icon||node.expandedIcon||node.collapsedIcon\\\"></span\\n                                ><span class=\\\"ui-treenode-label ui-corner-all\\\">\\n                                        <span *ngIf=\\\"!tree.getTemplateForNode(node)\\\">{{node.label}}</span>\\n                                        <span *ngIf=\\\"tree.getTemplateForNode(node)\\\">\\n                                        <ng-container *ngTemplateOutlet=\\\"tree.getTemplateForNode(node); context: {$implicit: node}\\\"></ng-container>\\n                                        </span>\\n                                </span>\\n                            </div>\\n                        </td>\\n                        <td class=\\\"ui-treenode-children-container\\\" *ngIf=\\\"node.children && node.expanded\\\" [style.display]=\\\"node.expanded ? 'table-cell' : 'none'\\\">\\n                            <div class=\\\"ui-treenode-children\\\">\\n                                <p-treeNode *ngFor=\\\"let childNode of node.children;let firstChild=first;let lastChild=last; trackBy: tree.nodeTrackBy\\\" [node]=\\\"childNode\\\"\\n                                        [firstChild]=\\\"firstChild\\\" [lastChild]=\\\"lastChild\\\"></p-treeNode>\\n                            </div>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </ng-template>\\n    \",\r\n            providers: [domhandler_1.DomHandler]\r\n        }),\r\n        __param(0, core_1.Inject(core_1.forwardRef(function () { return Tree; }))),\r\n        __metadata(\"design:paramtypes\", [Tree, domhandler_1.DomHandler])\r\n    ], UITreeNode);\r\n    return UITreeNode;\r\n    var UITreeNode_1;\r\n}());\r\nexports.UITreeNode = UITreeNode;\r\nvar Tree = /** @class */ (function () {\r\n    function Tree(el, dragDropService) {\r\n        this.el = el;\r\n        this.dragDropService = dragDropService;\r\n        this.selectionChange = new core_1.EventEmitter();\r\n        this.onNodeSelect = new core_1.EventEmitter();\r\n        this.onNodeUnselect = new core_1.EventEmitter();\r\n        this.onNodeExpand = new core_1.EventEmitter();\r\n        this.onNodeCollapse = new core_1.EventEmitter();\r\n        this.onNodeContextMenuSelect = new core_1.EventEmitter();\r\n        this.onNodeDrop = new core_1.EventEmitter();\r\n        this.layout = 'vertical';\r\n        this.metaKeySelection = true;\r\n        this.propagateSelectionUp = true;\r\n        this.propagateSelectionDown = true;\r\n        this.loadingIcon = 'pi pi-spinner';\r\n        this.emptyMessage = 'No records found';\r\n        this.nodeTrackBy = function (index, item) { return item; };\r\n    }\r\n    Tree.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        if (this.droppableNodes) {\r\n            this.dragStartSubscription = this.dragDropService.dragStart$.subscribe(function (event) {\r\n                _this.dragNodeTree = event.tree;\r\n                _this.dragNode = event.node;\r\n                _this.dragNodeSubNodes = event.subNodes;\r\n                _this.dragNodeIndex = event.index;\r\n                _this.dragNodeScope = event.scope;\r\n            });\r\n            this.dragStopSubscription = this.dragDropService.dragStop$.subscribe(function (event) {\r\n                _this.dragNodeTree = null;\r\n                _this.dragNode = null;\r\n                _this.dragNodeSubNodes = null;\r\n                _this.dragNodeIndex = null;\r\n                _this.dragNodeScope = null;\r\n                _this.dragHover = false;\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Tree.prototype, \"horizontal\", {\r\n        get: function () {\r\n            return this.layout == 'horizontal';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Tree.prototype.ngAfterContentInit = function () {\r\n        var _this = this;\r\n        if (this.templates.length) {\r\n            this.templateMap = {};\r\n        }\r\n        this.templates.forEach(function (item) {\r\n            _this.templateMap[item.name] = item.template;\r\n        });\r\n    };\r\n    Tree.prototype.onNodeClick = function (event, node) {\r\n        var eventTarget = event.target;\r\n        if (eventTarget.className && eventTarget.className.indexOf('ui-tree-toggler') === 0) {\r\n            return;\r\n        }\r\n        else if (this.selectionMode) {\r\n            if (node.selectable === false) {\r\n                return;\r\n            }\r\n            var index_1 = this.findIndexInSelection(node);\r\n            var selected = (index_1 >= 0);\r\n            if (this.isCheckboxSelectionMode()) {\r\n                if (selected) {\r\n                    if (this.propagateSelectionDown)\r\n                        this.propagateDown(node, false);\r\n                    else\r\n                        this.selection = this.selection.filter(function (val, i) { return i != index_1; });\r\n                    if (this.propagateSelectionUp && node.parent) {\r\n                        this.propagateUp(node.parent, false);\r\n                    }\r\n                    this.selectionChange.emit(this.selection);\r\n                    this.onNodeUnselect.emit({ originalEvent: event, node: node });\r\n                }\r\n                else {\r\n                    if (this.propagateSelectionDown)\r\n                        this.propagateDown(node, true);\r\n                    else\r\n                        this.selection = (this.selection || []).concat([node]);\r\n                    if (this.propagateSelectionUp && node.parent) {\r\n                        this.propagateUp(node.parent, true);\r\n                    }\r\n                    this.selectionChange.emit(this.selection);\r\n                    this.onNodeSelect.emit({ originalEvent: event, node: node });\r\n                }\r\n            }\r\n            else {\r\n                var metaSelection = this.nodeTouched ? false : this.metaKeySelection;\r\n                if (metaSelection) {\r\n                    var metaKey = (event.metaKey || event.ctrlKey);\r\n                    if (selected && metaKey) {\r\n                        if (this.isSingleSelectionMode()) {\r\n                            this.selectionChange.emit(null);\r\n                        }\r\n                        else {\r\n                            this.selection = this.selection.filter(function (val, i) { return i != index_1; });\r\n                            this.selectionChange.emit(this.selection);\r\n                        }\r\n                        this.onNodeUnselect.emit({ originalEvent: event, node: node });\r\n                    }\r\n                    else {\r\n                        if (this.isSingleSelectionMode()) {\r\n                            this.selectionChange.emit(node);\r\n                        }\r\n                        else if (this.isMultipleSelectionMode()) {\r\n                            this.selection = (!metaKey) ? [] : this.selection || [];\r\n                            this.selection = this.selection.concat([node]);\r\n                            this.selectionChange.emit(this.selection);\r\n                        }\r\n                        this.onNodeSelect.emit({ originalEvent: event, node: node });\r\n                    }\r\n                }\r\n                else {\r\n                    if (this.isSingleSelectionMode()) {\r\n                        if (selected) {\r\n                            this.selection = null;\r\n                            this.onNodeUnselect.emit({ originalEvent: event, node: node });\r\n                        }\r\n                        else {\r\n                            this.selection = node;\r\n                            this.onNodeSelect.emit({ originalEvent: event, node: node });\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (selected) {\r\n                            this.selection = this.selection.filter(function (val, i) { return i != index_1; });\r\n                            this.onNodeUnselect.emit({ originalEvent: event, node: node });\r\n                        }\r\n                        else {\r\n                            this.selection = (this.selection || []).concat([node]);\r\n                            this.onNodeSelect.emit({ originalEvent: event, node: node });\r\n                        }\r\n                    }\r\n                    this.selectionChange.emit(this.selection);\r\n                }\r\n            }\r\n        }\r\n        this.nodeTouched = false;\r\n    };\r\n    Tree.prototype.onNodeTouchEnd = function () {\r\n        this.nodeTouched = true;\r\n    };\r\n    Tree.prototype.onNodeRightClick = function (event, node) {\r\n        if (this.contextMenu) {\r\n            var eventTarget = event.target;\r\n            if (eventTarget.className && eventTarget.className.indexOf('ui-tree-toggler') === 0) {\r\n                return;\r\n            }\r\n            else {\r\n                var index = this.findIndexInSelection(node);\r\n                var selected = (index >= 0);\r\n                if (!selected) {\r\n                    if (this.isSingleSelectionMode())\r\n                        this.selectionChange.emit(node);\r\n                    else\r\n                        this.selectionChange.emit([node]);\r\n                }\r\n                this.contextMenu.show(event);\r\n                this.onNodeContextMenuSelect.emit({ originalEvent: event, node: node });\r\n            }\r\n        }\r\n    };\r\n    Tree.prototype.findIndexInSelection = function (node) {\r\n        var index = -1;\r\n        if (this.selectionMode && this.selection) {\r\n            if (this.isSingleSelectionMode()) {\r\n                index = (this.selection == node) ? 0 : -1;\r\n            }\r\n            else {\r\n                for (var i = 0; i < this.selection.length; i++) {\r\n                    if (this.selection[i] == node) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    };\r\n    Tree.prototype.propagateUp = function (node, select) {\r\n        if (node.children && node.children.length) {\r\n            var selectedCount = 0;\r\n            var childPartialSelected = false;\r\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\r\n                var child = _a[_i];\r\n                if (this.isSelected(child)) {\r\n                    selectedCount++;\r\n                }\r\n                else if (child.partialSelected) {\r\n                    childPartialSelected = true;\r\n                }\r\n            }\r\n            if (select && selectedCount == node.children.length) {\r\n                this.selection = (this.selection || []).concat([node]);\r\n                node.partialSelected = false;\r\n            }\r\n            else {\r\n                if (!select) {\r\n                    var index_2 = this.findIndexInSelection(node);\r\n                    if (index_2 >= 0) {\r\n                        this.selection = this.selection.filter(function (val, i) { return i != index_2; });\r\n                    }\r\n                }\r\n                if (childPartialSelected || selectedCount > 0 && selectedCount != node.children.length)\r\n                    node.partialSelected = true;\r\n                else\r\n                    node.partialSelected = false;\r\n            }\r\n        }\r\n        var parent = node.parent;\r\n        if (parent) {\r\n            this.propagateUp(parent, select);\r\n        }\r\n    };\r\n    Tree.prototype.propagateDown = function (node, select) {\r\n        var index = this.findIndexInSelection(node);\r\n        if (select && index == -1) {\r\n            this.selection = (this.selection || []).concat([node]);\r\n        }\r\n        else if (!select && index > -1) {\r\n            this.selection = this.selection.filter(function (val, i) { return i != index; });\r\n        }\r\n        node.partialSelected = false;\r\n        if (node.children && node.children.length) {\r\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\r\n                var child = _a[_i];\r\n                this.propagateDown(child, select);\r\n            }\r\n        }\r\n    };\r\n    Tree.prototype.isSelected = function (node) {\r\n        return this.findIndexInSelection(node) != -1;\r\n    };\r\n    Tree.prototype.isSingleSelectionMode = function () {\r\n        return this.selectionMode && this.selectionMode == 'single';\r\n    };\r\n    Tree.prototype.isMultipleSelectionMode = function () {\r\n        return this.selectionMode && this.selectionMode == 'multiple';\r\n    };\r\n    Tree.prototype.isCheckboxSelectionMode = function () {\r\n        return this.selectionMode && this.selectionMode == 'checkbox';\r\n    };\r\n    Tree.prototype.getTemplateForNode = function (node) {\r\n        if (this.templateMap)\r\n            return node.type ? this.templateMap[node.type] : this.templateMap['default'];\r\n        else\r\n            return null;\r\n    };\r\n    Tree.prototype.onDragOver = function (event) {\r\n        if (this.droppableNodes && (!this.value || this.value.length === 0)) {\r\n            event.dataTransfer.dropEffect = 'move';\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    Tree.prototype.onDrop = function (event) {\r\n        if (this.droppableNodes && (!this.value || this.value.length === 0)) {\r\n            event.preventDefault();\r\n            var dragNode = this.dragNode;\r\n            if (this.allowDrop(dragNode, null, this.dragNodeScope)) {\r\n                var dragNodeIndex = this.dragNodeIndex;\r\n                this.dragNodeSubNodes.splice(dragNodeIndex, 1);\r\n                this.value = this.value || [];\r\n                this.value.push(dragNode);\r\n                this.dragDropService.stopDrag({\r\n                    node: dragNode\r\n                });\r\n            }\r\n        }\r\n    };\r\n    Tree.prototype.onDragEnter = function (event) {\r\n        if (this.droppableNodes && this.allowDrop(this.dragNode, null, this.dragNodeScope)) {\r\n            this.dragHover = true;\r\n        }\r\n    };\r\n    Tree.prototype.onDragLeave = function (event) {\r\n        if (this.droppableNodes) {\r\n            var rect = event.currentTarget.getBoundingClientRect();\r\n            if (event.x > rect.left + rect.width || event.x < rect.left || event.y > rect.top + rect.height || event.y < rect.top) {\r\n                this.dragHover = false;\r\n            }\r\n        }\r\n    };\r\n    Tree.prototype.allowDrop = function (dragNode, dropNode, dragNodeScope) {\r\n        if (!dragNode) {\r\n            //prevent random html elements to be dragged\r\n            return false;\r\n        }\r\n        else if (this.isValidDragScope(dragNodeScope)) {\r\n            var allow = true;\r\n            if (dropNode) {\r\n                if (dragNode === dropNode) {\r\n                    allow = false;\r\n                }\r\n                else {\r\n                    var parent_1 = dropNode.parent;\r\n                    while (parent_1 != null) {\r\n                        if (parent_1 === dragNode) {\r\n                            allow = false;\r\n                            break;\r\n                        }\r\n                        parent_1 = parent_1.parent;\r\n                    }\r\n                }\r\n            }\r\n            return allow;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    Tree.prototype.isValidDragScope = function (dragScope) {\r\n        var dropScope = this.droppableScope;\r\n        if (dropScope) {\r\n            if (typeof dropScope === 'string') {\r\n                if (typeof dragScope === 'string')\r\n                    return dropScope === dragScope;\r\n                else if (dragScope instanceof Array)\r\n                    return dragScope.indexOf(dropScope) != -1;\r\n            }\r\n            else if (dropScope instanceof Array) {\r\n                if (typeof dragScope === 'string') {\r\n                    return dropScope.indexOf(dragScope) != -1;\r\n                }\r\n                else if (dragScope instanceof Array) {\r\n                    for (var _i = 0, dropScope_1 = dropScope; _i < dropScope_1.length; _i++) {\r\n                        var s = dropScope_1[_i];\r\n                        for (var _a = 0, dragScope_1 = dragScope; _a < dragScope_1.length; _a++) {\r\n                            var ds = dragScope_1[_a];\r\n                            if (s === ds) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    Tree.prototype.getBlockableElement = function () {\r\n        return this.el.nativeElement.children[0];\r\n    };\r\n    Tree.prototype.ngOnDestroy = function () {\r\n        if (this.dragStartSubscription) {\r\n            this.dragStartSubscription.unsubscribe();\r\n        }\r\n        if (this.dragStopSubscription) {\r\n            this.dragStopSubscription.unsubscribe();\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], Tree.prototype, \"value\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Tree.prototype, \"selectionMode\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Tree.prototype, \"selection\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Tree.prototype, \"selectionChange\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Tree.prototype, \"onNodeSelect\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Tree.prototype, \"onNodeUnselect\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Tree.prototype, \"onNodeExpand\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Tree.prototype, \"onNodeCollapse\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Tree.prototype, \"onNodeContextMenuSelect\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], Tree.prototype, \"onNodeDrop\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Tree.prototype, \"style\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Tree.prototype, \"styleClass\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Tree.prototype, \"contextMenu\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Tree.prototype, \"layout\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Tree.prototype, \"draggableScope\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], Tree.prototype, \"droppableScope\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Tree.prototype, \"draggableNodes\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Tree.prototype, \"droppableNodes\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Tree.prototype, \"metaKeySelection\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Tree.prototype, \"propagateSelectionUp\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Tree.prototype, \"propagateSelectionDown\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], Tree.prototype, \"loading\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Tree.prototype, \"loadingIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Tree.prototype, \"emptyMessage\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Tree.prototype, \"ariaLabel\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], Tree.prototype, \"ariaLabelledBy\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], Tree.prototype, \"nodeTrackBy\", void 0);\r\n    __decorate([\r\n        core_1.ContentChildren(shared_2.PrimeTemplate),\r\n        __metadata(\"design:type\", core_1.QueryList)\r\n    ], Tree.prototype, \"templates\", void 0);\r\n    Tree = __decorate([\r\n        core_1.Component({\r\n            selector: 'p-tree',\r\n            template: \"\\n        <div [ngClass]=\\\"{'ui-tree ui-widget ui-widget-content ui-corner-all':true,'ui-tree-selectable':selectionMode,'ui-treenode-dragover':dragHover,'ui-tree-loading': loading}\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" *ngIf=\\\"!horizontal\\\"\\n            (drop)=\\\"onDrop($event)\\\" (dragover)=\\\"onDragOver($event)\\\" (dragenter)=\\\"onDragEnter($event)\\\" (dragleave)=\\\"onDragLeave($event)\\\">\\n            <div class=\\\"ui-tree-loading-mask ui-widget-overlay\\\" *ngIf=\\\"loading\\\"></div>\\n            <div class=\\\"ui-tree-loading-content\\\" *ngIf=\\\"loading\\\">\\n                <i [class]=\\\"'ui-tree-loading-icon pi-spin ' + loadingIcon\\\"></i>\\n            </div>\\n            <ul class=\\\"ui-tree-container\\\" *ngIf=\\\"value\\\" role=\\\"tree\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledBy\\\">\\n                <p-treeNode *ngFor=\\\"let node of value;let firstChild=first;let lastChild=last; let index=index; trackBy: nodeTrackBy\\\" [node]=\\\"node\\\"\\n                [firstChild]=\\\"firstChild\\\" [lastChild]=\\\"lastChild\\\" [index]=\\\"index\\\"></p-treeNode>\\n            </ul>\\n            <div class=\\\"ui-tree-empty-message\\\" *ngIf=\\\"!loading && !value\\\">{{emptyMessage}}</div>\\n        </div>\\n        <div [ngClass]=\\\"{'ui-tree ui-tree-horizontal ui-widget ui-widget-content ui-corner-all':true,'ui-tree-selectable':selectionMode}\\\"  [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" *ngIf=\\\"horizontal\\\">\\n            <div class=\\\"ui-tree-loading ui-widget-overlay\\\" *ngIf=\\\"loading\\\"></div>\\n            <div class=\\\"ui-tree-loading-content\\\" *ngIf=\\\"loading\\\">\\n                <i [class]=\\\"'ui-tree-loading-icon pi-spin ' + loadingIcon\\\"></i>\\n            </div>\\n            <table *ngIf=\\\"value&&value[0]\\\">\\n                <p-treeNode [node]=\\\"value[0]\\\" [root]=\\\"true\\\"></p-treeNode>\\n            </table>\\n            <div class=\\\"ui-tree-empty-message\\\" *ngIf=\\\"!loading && !value\\\">{{emptyMessage}}</div>\\n        </div>\\n    \"\r\n        }),\r\n        __param(1, core_2.Optional()),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, treedragdropservice_1.TreeDragDropService])\r\n    ], Tree);\r\n    return Tree;\r\n}());\r\nexports.Tree = Tree;\r\nvar TreeModule = /** @class */ (function () {\r\n    function TreeModule() {\r\n    }\r\n    TreeModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule],\r\n            exports: [Tree, shared_1.SharedModule],\r\n            declarations: [Tree, UITreeNode]\r\n        })\r\n    ], TreeModule);\r\n    return TreeModule;\r\n}());\r\nexports.TreeModule = TreeModule;\r\n//# sourceMappingURL=tree.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/primeng/components/tree/tree.js\n// module id = 1468\n// module chunks = 0 1 5 7 9 11","import { MasterCompany } from './mastercompany.model';\r\nexport class Currency {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, currencyId?: number, code?: string, symbol?: string, displayName?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n        this.currencyId = currencyId;\r\n        this.code = code;\r\n        this.symbol = symbol;\r\n        this.displayName = displayName;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public currencyId: number;\r\n    public code: string;\r\n    public symbol: string;\r\n    public displayName: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/currency.model.ts","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class VendorClassification {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, vendorClassificationId?: number, classificationName?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n        this.vendorClassificationId = vendorClassificationId;\r\n        this.classificationName = classificationName;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public vendorClassificationId: number;\r\n    public classificationName: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/vendorclassification.model.ts","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class CreditTerms {\r\n\tconstructor(masterCompany?: MasterCompany, creditTermsId?: number, isActive?: boolean, name?: string, percentage?: number, days?: number, netDays?: number, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, memo?: string) {\r\n\r\n        this.creditTermsId = creditTermsId;\r\n        this.name = name;\r\n        this.percentage = percentage;\r\n        this.days = days;\r\n        this.netDays = netDays;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.updatedBy = updatedBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public creditTermsId: number;\r\n    public name: string;\r\n    public percentage: number;\r\n    public days: number;\r\n    public netDays: number;\r\n    public masterCompany: MasterCompany;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n\tpublic isActive?: boolean;\r\n\tpublic memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/credit-terms.model.ts","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class ItemClassificationModel {\r\n   \r\n   \r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, itemClassificationId?: number, itemClassificationCode?: string, itemType?: string, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string,\r\n\t\tisActive?: boolean, memo?: string) {\r\n\r\n        this.itemClassificationId = itemClassificationId;\r\n        this.itemClassificationCode = itemClassificationCode;\r\n        this.description = description;\r\n\t\tthis.itemType = itemType;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public itemClassificationId: number;\r\n    public itemClassificationCode: string;\r\n    public description: string;\r\n\tpublic itemType: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/item-classification.model.ts","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Itemgroup {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, itemGroupId?: number, itemGroupCode?: string, Sequence?: string, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n        this.itemGroupId = itemGroupId;\r\n        this.itemGroupCode = itemGroupCode;\r\n        this.description = description;\r\n        this.Sequence = Sequence;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public itemGroupId: number;\r\n    public itemGroupCode: string;\r\n    public description: string;\r\n    public Sequence: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/item-group.model.ts","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Priority {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, priorityId?: number, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean\r\n\t\t, memo?: string) {\r\n        this.priorityId = priorityId;\r\n        this.description = description;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public priorityId: number;\r\n    public description: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/priority.model.ts","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Provision {\r\n    ataChapterName: string;\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, provisionId?: number, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n        this.provisionId = provisionId;\r\n        this.description = description;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public provisionId: number;\r\n    public description: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/provision.model.ts","import { MasterCompany } from './mastercompany.model';\r\nexport class UnitOfMeasure {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, unitOfMeasureId?: number, description?: string, shortName?: string, standard?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n        this.unitOfMeasureId = unitOfMeasureId;\r\n        this.description = description;\r\n        this.shortName = shortName;\r\n        this.standard = standard;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public unitOfMeasureId: number;\r\n    public description: string;\r\n    public shortName: string;\r\n    public standard: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/unitofmeasure.model.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { VendorClassificationService } from '../../services/vendorclassification.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { VendorClassification } from '../../models/vendorclassification.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { VendorService } from '../../services/vendor.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-vendor-classification',\r\n    template: require('./vendor-classification.component.html'),\r\n    styles: [require('./vendor-classification.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class VendorClassificationComponent implements OnInit, AfterViewInit {\r\n    selectedActionName: any;\r\n    disableSave: boolean = false;\r\n    actionamecolle: any[]=[];\r\n    classificationName: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n\r\n    isSaving: boolean;\r\n    ngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-vendor-classification';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n    }\r\n    Active: string = \"Active\";\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    displayedColumns = ['vendorclassificationId', 'classificationName', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<VendorClassification>;\r\n    allVendorClassInfo: VendorClassification[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    public auditHisory: AuditHistory[] = [];\r\n    sourceAction: VendorClassification;\r\n    loadingIndicator: boolean;\r\n    actionForm: FormGroup;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    modal: NgbModalRef;\r\n    selectedColumn: VendorClassification[];\r\n\r\n    vendorName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n    subscription: Subscription;\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService,private venService: VendorService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public vendorclassificationService: VendorClassificationService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new VendorClassification();\r\n\t\tthis.loadData();\r\n        \r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: VendorClassification[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.vendorclassificationService.getVendorClassificationEndpointList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n        this.cols = [\r\n            //{ field: 'vendorClassificationId', header: 'Vendor Classification Id' },\r\n            { field: 'classificationName', header: 'Classification Name' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n          //  { field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'Created Date' }\r\n        ];\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n\tprivate onDataLoadSuccessful(getVendorClassificationList: VendorClassification[]) {\r\n\t\t//debugger;\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getVendorClassificationList;\r\n        this.allVendorClassInfo = getVendorClassificationList;\r\n    }\r\n\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n        \r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new VendorClassification();\r\n        this.sourceAction.isActive = true;\r\n        this.vendorName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.classificationName = row.classificationName; \r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\t\tthis.disableSave = false;\r\n        this.isEditMode = true;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.vendorName = this.sourceAction.classificationName;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].classificationName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    filterVendors(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allVendorClassInfo.length; i++) {\r\n            let vendorName = this.allVendorClassInfo[i].classificationName;\r\n            if (vendorName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\r\n                this.actionamecolle.push([{\r\n                    \"vendorClassificationId\": this.allVendorClassInfo[i].vendorClassificationId,\r\n                    \"classificationName\": vendorName\r\n                }]),\r\n\r\n                this.localCollection.push(vendorName);\r\n            }\r\n        }\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        //this.isSaving = true;\r\n        // debugger;\r\n        this.vendorclassificationService.historyVendorClassification(this.sourceAction.vendorClassificationId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.classificationName = this.vendorName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.vendorclassificationService.newVendorClassification(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.classificationName = this.vendorName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.vendorclassificationService.updateVendorClassification(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.vendorclassificationService.updateVendorClassification(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.vendorclassificationService.updateVendorClassification(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.vendorclassificationService.deleteVendorClassification(this.sourceAction.vendorClassificationId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: VendorClassification) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: VendorClassification) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/vendor-classification/vendor-classification.component.ts","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class CustomerClassification {\r\n    CustomerClassificationId: any;\r\n\tconstructor(masterCompany?: MasterCompany, customerClassificationId?: number, isActive?: boolean, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, memo?: string) {\r\n\r\n        this.customerClassificationId = customerClassificationId;\r\n        this.description = description;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.updatedBy = updatedBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public customerClassificationId: number;\r\n    public description: string;\r\n   \r\n    public masterCompany: MasterCompany;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n\tpublic isActive?: boolean;\r\n\tpublic memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/customer-classification.model.ts","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class EmployeeExpertise {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, employeeExpertiseId?: number, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n        this.employeeExpertiseId = employeeExpertiseId;\r\n        this.description = description;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public employeeExpertiseId: number;\r\n    public description: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/employeeexpertise.model.ts","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class JobTitle {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, jobTitleId?: number, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean\r\n\t\t, memo?: string) {\r\n\r\n        this.jobTitleId = jobTitleId;\r\n        this.description = description;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public jobTitleId: number;\r\n    public description: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/jobtitle.model.ts","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class TaxRate {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, taxRateId?: number, taxTypeId?: string, taxRate?: number, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n        this.taxRateId = taxRateId;\r\n        this.taxTypeId = taxTypeId;\r\n        this.taxRate = taxRate;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public taxRateId: number;\r\n    public taxTypeId: string;\r\n    public taxRate: number;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/taxrate.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">VendorClassification</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Vendor Classification</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\r\\n\\r\\n                <p-table #dt [value]=\\\"allVendorClassInfo\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Vendor Classification\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Delete Contact Modal -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Vendor Classification</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Vendor Classification</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"classificationName\\\" class=\\\"control-label\\\">Classification Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"classificationName\\\" class=\\\"form-control\\\" #classificationName=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.classificationName\\\">\\r\\n\\r\\n\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete [(ngModel)]=\\\"vendorName\\\" (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterVendors($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-vendorName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{vendorName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Vendor-Classification</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>VCID</th>\\r\\n                        <th>Classification Name</th>\\r\\n                        <th>previousValue</th>\\r\\n                        <th>newValue</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Classification Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Vendor Classification Name: </b></span><span class=\\\"value\\\">{{ classificationName}}</span></p>          \\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/vendor-classification/vendor-classification.component.html\n// module id = 1487\n// module chunks = 0 1","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./vendor-classification.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/vendor-classification/vendor-classification.component.scss\n// module id = 1488\n// module chunks = 0 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/vendor-classification/vendor-classification.component.scss\n// module id = 1489\n// module chunks = 0 1","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class CertificationType {\r\n\r\n\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, CertificationTypeId?: number, CertificationName?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean) {\r\n\r\n\t\tthis.CertificationTypeId = CertificationTypeId;\r\n\t\t\r\n\t\tthis.CertificationName = CertificationName;\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\t\r\n\r\n\t}\r\n\r\n\tpublic CertificationTypeId: number;\r\n\tpublic CertificationName: string;\r\n\tpublic masterCompanyId: number;\r\n\tpublic createdBy: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/certificationtype.model.ts","// ===============================\r\n// info@ebenmonney.com\r\n// www.ebenmonney.com/quickapp-pro\r\n// ===============================\r\n\r\nimport { Component } from \"@angular/core\";\r\nimport { MenuItem } from 'primeng/api';\r\nimport { Message } from 'primeng/components/common/message';\r\nimport { Router, ActivatedRoute, Params, NavigationExtras } from '@angular/router';\r\nimport { BreadcrumbModule } from 'primeng/breadcrumb'; //Bread Crumb\r\nimport { SingleScreenBreadcrumbService } from \"../services/single-screens-breadcrumb.service\";\r\n@Component({\r\n\tselector: \"quickapp-pro-singlepages\",\r\n\ttemplate: require('./singlepages.component.html')\r\n})\r\nexport class SingleComponent {\r\n\totherurl: any;\r\n\tcurrentUrl: string;\r\n\r\n\tpublic items: MenuItem[];\r\n\thome: MenuItem;\r\n\r\n\tconstructor(private router: ActivatedRoute, private route: Router, private singleScreenBreadCrumb: SingleScreenBreadcrumbService) {\r\n\r\n\t\tthis.singleScreenBreadCrumb.bredcrumbObjChangeObject$.subscribe(value => {\r\n\t\t\t//debugger\r\n\t\t\tthis.otherurl = value;\r\n\t\t\tthis.loadmethod(this.otherurl);\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tngOnInit() {\r\n\r\n\r\n\r\n\t\tthis.currentUrl = this.route.url;\r\n\t\t//debugger\r\n\t\tthis.loadmethod(this.currentUrl)\r\n\r\n\t}\r\n\r\n\tloadmethod(url) {\r\n\r\n\t\tthis.currentUrl = url;\r\n\t\tif (this.currentUrl) {\r\n\t\t\tif (this.currentUrl == '/singlepages/singlepages/app-actions') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Actions' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-manufacturer') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Manufacturer' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-vendorcapabilities') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Vendor Capabilities' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-labor-and-overhead-cost-setup') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Labor And Overhead Cost Setup' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-glaccount-category') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Expenditure Type' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-certification-type') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Certification Type' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-action-attributes') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Actions Attributes' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-ata-main') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'ATA Chapter' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-charges') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Charges' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-conditions') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Condition' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-credit-terms') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Credit Terms' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-currency') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Currency' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-customer-classification') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Customer Classification' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-documents') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Documents' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-default-message') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Default Message' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-employee-expertise') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'EmployeeExpertise' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-expenditure') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Expenditure' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-findings') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Finding' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-gate-code') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Status Code' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-integration') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Integration' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-item-classification') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Item Classification' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-item-group') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Item Group' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-job-title') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Job Titles' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-priority') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Priority' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-provision') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Provision' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-publication') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Publication' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-reason') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Reason' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-tax-type') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'TaxType' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-tax-rate') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'TaxRate' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-unit-of-measure') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'UnitOf Measure' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-vendor-classification') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'VendorClassification' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-work-performed') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'WorkPerformed' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-work-scope') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'WorkScope' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-action-attribute-mapping') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Action Attribute Mapping' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-ata-sub-chapter1') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'ATA Sub Chapter' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-ata-sub-chapter2') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'ATA Sub Chapter 2' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-capabilities') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Capabilities' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-financial-statement-mapping') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Financial Statement Mapping' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-gl-account-class') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'GL Account Class' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-gl-cash-flow-classification') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'GlCashFlowClassification' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-gl-financial-statement') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'GL Financial Statement' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-journal-approvals') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Journal Approvals' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-rfq-engine') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'RFQ Engine' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-site') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Site' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-warehouse') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'WareHouse' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-location') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Location' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-shelf') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Shelf' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-bin') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Bin' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t\r\n\t\tif (this.otherurl) {\r\n\t\t\tif (this.currentUrl == '/singlepages/singlepages/app-actions') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Actions' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-action-attributes') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Actions Attributes' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-ata-main') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'ATA Chapter' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-charges') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Charges' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-conditions') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Condition' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-credit-terms') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Credit Terms' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-currency') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Currency' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-customer-classification') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Customer Classification' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-documents') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Documents' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-default-message') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Default Message' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-employee-expertise') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'EmployeeExpertise' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-expenditure') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Expenditure' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-findings') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Finding' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-gate-code') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Gate Code' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-integration') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Integration' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-item-classification') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Item Classification' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-item-group') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Item Group' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-job-title') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Job Titles' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-priority') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Priority' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-provision') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Provision' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-publication') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Publication' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-reason') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Reason' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-tax-type') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'TaxType' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-tax-rate') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'TaxRate' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-unit-of-measure') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'UnitOf Measure' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-vendor-classification') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'VendorClassification' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-work-performed') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'WorkPerformed' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-work-scope') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'WorkScope' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-action-attribute-mapping') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Action Attribute Mapping' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-ata-sub-chapter1') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'ATA Sub Chapter' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-ata-sub-chapter2') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'ATA Sub Chapter 2' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-capabilities') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Capabilities' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-financial-statement-mapping') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Financial Statement Mapping' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-gl-account-class') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'GL Account Class' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-glaccount-category') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Expenditure Type' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-app-certification-type') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Certification Type' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-gl-cash-flow-classification') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'GlCashFlowClassification' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-gl-financial-statement') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'GL Financial Statement' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-journal-approvals') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Journal Approvals' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-rfq-engine') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'RFQ Engine' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-site') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Site' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-labor-and-overhead-cost-setup') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Labor And Overhead Cost Setup' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-warehouse') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Warehouse' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-manufacturer') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Manufacturer' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-vendorcapabilities') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Vendor Capabilities' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-shelf') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Shelf' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-bin') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Bin' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\telse if (this.currentUrl == '/singlepages/singlepages/app-location') {\r\n\t\t\t\tthis.items = [\r\n\t\t\t\t\t{ label: 'Single Screens' },\r\n\t\t\t\t\t{ label: 'Location' }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/singlepages/singlepages.component.ts","import { Component,ViewChild,OnInit,AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';  \r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { ActionService } from '../../services/action.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { Action } from '../../models/action.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n@Component({\r\n    selector: 'app-actions',\r\n    template: require('./actions.component.html'),\r\n    styles: [require('./actions.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class ActionsComponent implements OnInit, AfterViewInit {\r\n    selectedActionName: any;\r\n    disableSave: boolean=false;\r\n    actionamecolle: any[]=[];\r\n    action_name: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createddate: any = \"\";\r\n    updatedDate: any = \"\";\r\n   \r\n    ngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-actions';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n    }\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    filteredBrands: any[];\r\n\tdisplayedColumns = ['actionId', 'companyName', 'description', 'memo', 'createdBy', 'updatedBy', 'updatedDate','createdDate'];\r\n    dataSource: MatTableDataSource<Action>;\r\n    allActions: Action[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n\tprivate isSaving: boolean;\r\n\tpublic sourceAction: Action;\r\n    public auditHisory:any;\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n    selectedColumn: any[];\r\n    selectedColumns: any[];\r\n    cols: any[];\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n    actionName: string;\r\n    Active: string = \"Active\";\r\n    length: number;\r\n    localCollection: any[] = [];\r\n\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService,private authService: AuthService,private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: ActionService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n      \r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new Action();\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: Action[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.workFlowtService.getWorkFlows().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n        this.cols = [\r\n            //{ field: 'actionId', header: 'Action Id' },\r\n\t\t\t{ field: 'description', header: 'Action Name' },\r\n\t\t\t{ field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'Created Date' }\r\n            \r\n        ];\r\n\r\n        this.selectedColumns = this.cols;\r\n\r\n    }\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    handleChange(rowData, e)\r\n    {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        \r\n    }\r\n\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n        \r\n        \r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].actionName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(allWorkFlows: Action[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = allWorkFlows;\r\n        this.allActions = allWorkFlows;\r\n        this.length = this.allActions.length;\r\n       \r\n    }\r\n   \r\n    filterActions(event) {\r\n      \r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allActions.length; i++) {\r\n            let actionName = this.allActions[i].description;\r\n           \r\n            if (actionName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"actionId\": this.allActions[i].actionId,\r\n                    \"actionName\": actionName\r\n                }]),\r\n            \r\n               this.localCollection.push(actionName);\r\n\r\n               \r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    private onHistoryLoadSuccessful(auditHistory: any,content) {\r\n\r\n       // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n     \r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n      \r\n    }\r\n \r\n    private onDataLoadFailed(error: any) {\r\n       // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new Action();\r\n\t\tthis.sourceAction.isActive = true;\r\n        this.actionName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' } );\r\n        this.modal.result.then(() => {\r\n           console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    \r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.sourceAction = row;\r\n        this.loadMasterCompanies();\r\n        this.actionName = this.sourceAction.description;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.action_name = row.description;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createddate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\topenHist(contentHist, rowData) {\r\n        //this.alertService.startLoadingMessage();\r\n        //this.loadingIndicator = true;\r\n\r\n\r\n\t\tthis.sourceAction = rowData;\r\n    \r\n\r\n        //this.isSaving = true;\r\n       // debugger;\r\n\t\tthis.workFlowtService.historyAcion(this.sourceAction.actionId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], contentHist),\r\n            error => this.saveFailedHelper(error));\r\n       \r\n\r\n    }\r\n    \r\n\r\n    editItemAndCloseModel() {\r\n\r\n       // debugger;\r\n\r\n        this.isSaving = true;\r\n       \r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.actionName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.workFlowtService.newAction(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n           \r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.actionName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n    \r\n    deleteItemAndCloseModel() {\r\n            this.isSaving = true;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.workFlowtService.deleteAcion(this.sourceAction.actionId).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: Action) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n       \r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: Action) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n       \r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/actions/actions.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { ActionService } from '../../services/action.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { ActionAttribute } from '../../models/actionattribute.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { ActionAttributeService } from '../../services/actionattribute.service';\r\nimport { DataTableModule } from 'primeng/datatable';\r\nimport { TableModule } from 'primeng/table'\r\nimport { ButtonModule } from 'primeng/button'\r\nimport { SelectButtonModule } from 'primeng/selectbutton'\r\nimport { InputTextModule } from 'primeng/inputtext'\r\nimport { MultiSelectModule } from 'primeng/multiselect'\r\nimport { Action } from 'rxjs/scheduler/Action';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n@Component({\r\n    selector: 'app-action-attributes',\r\n    template: require('./action-attributes.component.html'),\r\n    styles: [require('./action-attributes.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** ActionsAttribute component*/\r\nexport class ActionAttributesComponent implements OnInit, AfterViewInit {\r\n\tsourceView: any = {};\r\n    disableSave: boolean;\r\n    selectedActionName: any;\r\n    actionamecolle: any[]=[];\r\n    auditHisory: any[];\r\n   \r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    displayedColumns = ['actionattributeid', 'description', 'createdDate','companyName'];\r\n    dataSource: MatTableDataSource<ActionAttribute>;\r\n    allActionAttribute: ActionAttribute[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    private isSaving: boolean;\r\n    public sourceAction: ActionAttribute;\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n    /** Actions ctor */\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n    actionAttributeName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n    selectedColumn: ActionAttribute[];\r\n    Active: string = \"Active\";\r\n    description: any;\r\n    memo: any;\r\n    updatedBy: any;\r\n    createdBy: any;\r\n    updatedDate: any;\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: ActionAttributeService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new ActionAttribute();\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        \r\n        this.loadData();\r\n        this.cols = [\r\n            //{ field: 'actionAttributeId', header: 'ACID' },\r\n\t\t\t{ field: 'description', header: 'Action Attribute Name' },\r\n\t\t\t{ field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'createdDate', header: 'Created Date' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' }\r\n          \r\n        \r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-action-attributes';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n        this.selectedColumns = this.cols;\r\n    }\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: ActionAttribute[] = [];\r\n    private loadData() {\r\n       this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n        this.workFlowtService.getWorkFlows().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n       );\r\n    }\r\n\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n\t}\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourceView = row;\r\n\t\t\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n    private onDataLoadSuccessful(allWorkFlows: ActionAttribute[]) {\r\n       \r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = allWorkFlows;\r\n        this.allActionAttribute = allWorkFlows;\r\n       \r\n    }\r\n\r\n  \r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n    \r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n        this.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = new ActionAttribute();\r\n        this.actionAttributeName = \"\";\r\n\t\tthis.sourceAction.isActive = true;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.disableSave = false;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.actionAttributeName = this.sourceAction.description;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n\r\n        this.sourceAction = row;\r\n           \r\n        this.workFlowtService.historyAcion(this.sourceAction.actionAttributeId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\t\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < this.actionamecolle.length; i++) {\r\n                if (value == this.actionamecolle[i][0].actionAttributeName.toLowerCase()) {\r\n                    //alert(\"Action Name already Exists\");\r\n                    this.disableSave = true;\r\n                    this.selectedActionName = event;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].actionAttributeName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n    filterActionAttributes(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allActionAttribute.length; i++) {\r\n            let actionAttributeName = this.allActionAttribute[i].description;\r\n            if (actionAttributeName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"actionAttributeId\": this.allActionAttribute[i].actionAttributeId,\r\n                    \"actionAttributeName\": actionAttributeName\r\n                }]),\r\n                this.localCollection.push(actionAttributeName)\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n   \r\n\r\n    editItemAndCloseModel() {\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.sourceAction.description = this.actionAttributeName;\r\n            this.workFlowtService.newAction(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.actionAttributeName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.workFlowtService.deleteAcion(this.sourceAction.actionAttributeId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: ActionAttribute) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: ActionAttribute) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\r\n\r\n   \r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/action-attributes/action-attributes.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { AtaMainService } from '../../services/atamain.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { ATAMain } from '../../models/atamain.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { ATAChapter } from '../../models/atachapter.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-ata-main',\r\n    template: require('./ata-main.component.html'),\r\n    styles: [require('./ata-main.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class AtaMainComponent implements OnInit, AfterViewInit {\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    actionamecolle: any[]=[];\r\n    ataChapter_Name: any = \"\";\r\n    ataChapterCategory = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n    capabilityNamecolle: any[]=[];\r\n\r\n\r\n    ngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-ata-main';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n    }\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n\tdisplayedColumns = ['ataChapterId','ataChapterCode', 'ataChapterName', 'ataChapterCategory', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n\tdataSource: MatTableDataSource<ATAChapter>;\r\n\tallATAMaininfo: any[];\r\n    allComapnies: MasterCompany[] = [];\r\n\tprivate isSaving: boolean;\r\n\tpublic sourceAction: any;\r\n    public auditHisory: AuditHistory[] = [];\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n\tcloseResult: string;\r\n\tselectedColumn: any[];\r\n    selectedColumns: any[];\r\n    cols: any[];\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n\tataChapterName: string;\r\n\tataChapterCode: any;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n    Active: string = \"Active\";\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public ataMainService : AtaMainService,  private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\t\tthis.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n\t\tthis.sourceAction = new ATAChapter();\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n\tpublic allWorkFlows: ATAChapter[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.ataMainService.getAtaMainList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n        this.cols = [\r\n            { field: 'ataChapterCode', header: 'ATA Chapter Code' },\r\n            { field: 'ataChapterName', header: 'ATA Chapter Name' }, \r\n            { field: 'ataChapterCategory', header: 'ATA Chapter Category' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'createdDate' }\r\n        ];\r\n\r\n        this.selectedColumns = this.cols;\r\n\r\n    }\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n\t}\r\n\tprivate onDataLoadSuccessful(getAtaMainList: ATAChapter[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n       // this.dataSource.data = getAtaMainList;\r\n        this.allATAMaininfo = getAtaMainList;\r\n    }\r\n\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.ataMainService.updateATAMain(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.ataMainService.updateATAMain(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new ATAChapter();\r\n\t\tthis.sourceAction.isActive = true;\r\n\t\tthis.ataChapterName = \"\";\r\n\t\tthis.ataChapterCode = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\r\n\t\tthis.isSaving = true;\r\n\t\tthis.disableSave = false;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n\t\tthis.ataChapterName = this.sourceAction.ataChapterName;\r\n\t\tthis.ataChapterCode = this.sourceAction.ataChapterCode;\r\n\t\tthis.ataChapterCategory = this.sourceAction.ataChapterCategory;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n\t\tthis.ataChapter_Name = row.ataChapterName;\r\n\t\tthis.ataChapterCode = row.ataChapterCode;\r\n        this.ataChapterCategory = row.ataChapterCategory;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        //this.isSaving = true;\r\n\t\t// debugger;\r\n\t\tthis.ataMainService.historyATAMain(this.sourceAction.ataCahpterId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n\t\t\tthis.sourceAction.ataChapterName = this.ataChapterName;\r\n\t\t\t//this.sourceAction.ataChapterCode = this.ataChapterCode;\r\n            this.ataMainService.newATAMain(this.sourceAction).subscribe(\r\n                //role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n\t\t\tthis.sourceAction.ataChapterName = this.ataChapterName;\r\n\t\t\t//this.sourceAction.ataChapterCode = this.ataChapterCode;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.ataMainService.updateATAMain(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n\t\tthis.sourceAction.updatedBy = this.userName;\r\n\t\tthis.ataMainService.deleteATAMain(this.sourceAction.ataChapterId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    partnmId(event) {\r\n    //    for (let i = 0; i < this.actionamecolle.length; i++) {\r\n    //        if (event == this.actionamecolle[i][0].ataChapterName) {\r\n    //            this.disableSave = true;\r\n    //            this.selectedActionName = event;\r\n    //        }\r\n    //    }\r\n    //}\r\n\t\tif (this.allATAMaininfo) {\r\n\r\n\t\t\tfor (let i = 0; i < this.allATAMaininfo.length; i++) {\r\n\t\t\t\tif (event == this.allATAMaininfo[i].capabilityName) {\r\n\t\t\t\t\tthis.sourceAction.ataChapterName = this.allATAMaininfo[i].ataChapterName;\r\n\t\t\t\t\tthis.disableSave = true;\r\n\r\n\t\t\t\t\tthis.selectedActionName = event;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n    filterAtamains(event) {\r\n\r\n   //     this.localCollection = [];\r\n   //     for (let i = 0; i < this.allATAMaininfo.length; i++) {\r\n\t\t\t//let ataChapterName = this.allATAMaininfo[i].ataChapterName;\r\n   //         if (ataChapterName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t//\tthis.allATAMaininfo.push([{\r\n\t\t\t//\t\t\"ataChapterId\": this.allATAMaininfo[i].ataChapterId,\r\n   //                 \"ataChapterName\": ataChapterName\r\n   //             }]),\r\n   //             this.localCollection.push(ataChapterName);\r\n   //         }\r\n   //     }\r\n\t\tthis.localCollection = [];\r\n\t\tfor (let i = 0; i < this.allATAMaininfo.length; i++) {\r\n\t\t\tlet ataChapterName = this.allATAMaininfo[i].ataChapterName;\r\n\t\t\tif (ataChapterName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\tthis.capabilityNamecolle.push([{\r\n\t\t\t\t\t\"ataChapterId\": this.allATAMaininfo[i].ataChapterId,\r\n\t\t\t\t\t\"ataChapterName\": ataChapterName\r\n\t\t\t\t}]),\r\n\t\t\t\t\tthis.localCollection.push(ataChapterName)\r\n\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: ATAMain) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: ATAMain) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/ata-main/ata-main.component.ts","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { CreditTermsService } from '../../services/Credit Terms.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { CreditTerms } from '../../models/credit-terms.model';\r\nimport * as $ from 'jquery';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSort, MatPaginator, MatDialog, MatTableDataSource } from '@angular/material';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { NgbModalRef, NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-credit-terms',\r\n    template: require('./credit-terms.component.html'),\r\n    styles: [require('./credit-terms.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** CreditTerms component*/\r\nexport class CreditTermsComponent implements OnInit, AfterViewInit{\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    actionamecolle: any[] = [];\r\n    creditTerm_Name: any = \"\";\r\n    percentage: any = \"\";\r\n    days: any = \"\";\r\n    netDays: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n    auditHisory: AuditHistory[];\r\n    Active: string = \"Active\";\r\n    /** CreditTerms ctor */\r\n   \r\n@ViewChild(MatPaginator) paginator: MatPaginator;\r\n@ViewChild(MatSort) sort: MatSort;\r\n\r\ndisplayedColumns = ['creditTermsId', 'name', 'percentage', 'days', 'netDays', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\ndataSource: MatTableDataSource<CreditTerms>;\r\nallcreditTermInfo: any[] = [];\r\nsourceAction: CreditTerms;\r\nloadingIndicator: boolean;\r\n allComapnies: MasterCompany[];\r\nactionForm: FormGroup;\r\ntitle: string = \"Create\";\r\nid: number;\r\nerrorMessage: any;\r\ncols: any[];\r\n selectedColumns: any[];\r\n selectedColumn: CreditTerms[];\r\n private isEditMode: boolean = false;\r\n private isDeleteMode: boolean = false;\r\n private isSaving: boolean;\r\n creditTermName: string;\r\nfilteredBrands: any[];\r\nlocalCollection: any[] = [];\r\n modal: NgbModalRef;\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService:AuthService,private _fb: FormBuilder, private alertService: AlertService, private masterComapnyService:MasterComapnyService, private modalService: NgbModal,public CreditTermsService: CreditTermsService, private dialog: MatDialog) {\r\n    this.displayedColumns.push('action');\r\n    this.dataSource = new MatTableDataSource();\r\n\r\n    }\r\n\tngOnInit(): void {\r\n\t\tthis.loadData();\r\n       \r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-credit-terms';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n       \r\n        \r\n    }\r\n\r\nngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n}\r\n\r\n    private loadData() {\r\n    // debugger;\r\n    this.alertService.startLoadingMessage();\r\n    this.loadingIndicator = true;\r\n\r\n    this.CreditTermsService.getCreditTermsList().subscribe(\r\n        results => this.onDataLoadSuccessful(results[0]),\r\n        error => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t\tthis.cols = [\r\n\t\t\t//{ field: 'creditTermsId', header: 'CreditTerm ID' },\r\n\t\t\t{ field: 'name', header: ' Credit Terms Name' },\r\n\t\t\t{ field: 'percentage', header: 'Percentage' },\r\n\t\t\t{ field: 'days', header: 'Days' },\r\n\t\t\t{ field: 'netDays', header: 'Net Days' },\r\n\t\t\t{ field: 'memo', header: 'Memo' },\r\n\t\t\t{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t\t//{ field: 'updatedDate', header: 'Updated Date' },\r\n\t\t\t//{ field: 'createdDate', header: 'Created Date' }\r\n\t\t];\r\n\t\tthis.selectedColumns = this.cols;\r\n}\r\n    public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue;\r\n}\r\n\r\n    private refresh() {\r\n    // Causes the filter to refresh there by updating with recently added data.\r\n    this.applyFilter(this.dataSource.filter);\r\n}\r\n    private onDataLoadSuccessful(getCreditTermsList: any[]) {\r\n    // alert('success');\r\n    this.alertService.stopLoadingMessage();\r\n    this.loadingIndicator = false;\r\n    this.dataSource.data = getCreditTermsList;\r\n\tthis.allcreditTermInfo = getCreditTermsList;\r\n\tconsole.log(this.allcreditTermInfo);\r\n}\r\n\r\n    private onDataLoadFailed(error: any){\r\n    // alert(error);\r\n    this.alertService.stopLoadingMessage();\r\n    this.loadingIndicator = false;\r\n\r\n    }\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n  \r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = new CreditTerms();\r\n        this.sourceAction.isActive = true;\r\n        this.creditTermName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n    openEdit(content, row) {\r\n\t\tthis.disableSave = false;\r\n        this.isEditMode = true;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.creditTermName = this.sourceAction.name;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n        this.sourceAction = row;\r\n        this.isSaving = true;  \r\n        this.CreditTermsService.historycreditterms(this.sourceAction.creditTermsId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.creditTerm_Name = row.name;\r\n        this.percentage = row.percentage;\r\n        this.days = row.days;\r\n        this.netDays = row.netDays;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].creditTermName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n    filtercreditTerms(event) {\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allcreditTermInfo.length; i++) {\r\n            let creditTermName  = this.allcreditTermInfo[i].name;\r\n            if (creditTermName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"creditTermsId\": this.allcreditTermInfo[i].creditTermsId,\r\n                    \"creditTermName\": creditTermName\r\n                }]),\r\n                this.localCollection.push(creditTermName);\r\n            }\r\n        }\r\n    }\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n      \r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.auditHisory = auditHistory;\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.CreditTermsService.updatecreditterms(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.CreditTermsService.updatecreditterms(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n        this.isSaving = true;\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.name = this.creditTermName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.CreditTermsService.newAddcreditterms(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.name = this.creditTermName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.CreditTermsService.updatecreditterms(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.CreditTermsService.deletecreditterms(this.sourceAction.creditTermsId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: CreditTerms) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: CreditTerms) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/credit-terms/credit-terms.component.ts","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\n\r\nimport { CurrencyService } from '../../services/currency.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { Currency } from '../../models/currency.model';\r\nimport * as $ from 'jquery';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSort, MatPaginator, MatDialog, MatTableDataSource } from '@angular/material';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, NgbModalRef, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-currency',\r\n    template: require('./currency.component.html'),\r\n    styles: [require('./currency.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Currency component*/\r\nexport class CurrencyComponent implements OnInit, AfterViewInit {\r\n    currency_Name: any = \"\";\r\n    symbol: any =  \"\";\r\n    displayName: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    actionamecolle: any[] = [];\r\n\r\n\r\n    auditHisory: AuditHistory[];\r\n    Active: string = \"Active\";\r\n    /** Currency ctor */\r\n   \r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    displayedColumns = ['currencyId', 'code', 'symbol', 'displayName', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<Currency>;\r\n    allCurrencyInfo: Currency[] = [];\r\n    sourceAction: Currency;\r\n\r\n    loadingIndicator: boolean;\r\n   \r\n    actionForm: FormGroup;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n    allComapnies: MasterCompany[];\r\n    private isSaving: boolean;\r\n    modal: NgbModalRef;\r\n    selectedColumn: Currency[];\r\n    currencyName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n    /** Currency ctor */\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private _fb: FormBuilder, private alertService: AlertService, private masterComapnyService: MasterComapnyService, private modalService: NgbModal, public currencyService: CurrencyService, private dialog: MatDialog) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        this.loadData();\r\n        this.cols = [\r\n            //{ field: 'currencyId', header: 'Currency ID' },\r\n            { field: 'code', header: 'CurrencyCode' },\r\n            { field: 'symbol', header: 'Currency Symbol' },\r\n            { field: 'displayName', header: ' Currency Name' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n           //{ field: 'createdDate', header: 'Created Date' }\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-currency';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n        this.selectedColumns = this.cols;\r\n\r\n    }\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    private loadData() {\r\n        // debugger;\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.currencyService.getCurrencyList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(getCreditTermsList: Currency[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getCreditTermsList;\r\n       \r\n        this.allCurrencyInfo = getCreditTermsList;\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.currencyService.updatecurrency(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.currencyService.updatecurrency(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n   \r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = new Currency();\r\n        this.sourceAction.isActive = true;\r\n        this.currencyName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.disableSave = false;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.currencyName = this.sourceAction.code;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        this.isSaving = true;\r\n      \r\n        this.currencyService.historycurrency(this.sourceAction.currencyId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        \r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.currency_Name = row.code;\r\n        this.symbol = row.symbol;\r\n        this.displayName = row.displayName;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].currencyName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    filterCurrency(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allCurrencyInfo.length; i++) {\r\n            let currencyName = this.allCurrencyInfo[i].code;\r\n            if (currencyName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"currencyId\": this.allCurrencyInfo[i].currencyId,\r\n                    \"currencyName\": currencyName\r\n                }]),\r\n                this.localCollection.push(currencyName);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.code = this.currencyName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.currencyService.newAddcurrency(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.code = this.currencyName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.currencyService.updatecurrency(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.currencyService.deletecurrency(this.sourceAction.currencyId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: Currency) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: Currency) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/currency/currency.component.ts","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\n\r\nimport { CustomerClassificationService } from '../../services/CustomerClassification.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { CustomerClassification } from '../../models/customer-classification.model';\r\nimport * as $ from 'jquery';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSort, MatPaginator, MatDialog, MatTableDataSource } from '@angular/material';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { NgbModalRef, NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-customer-classification',\r\n    template: require('./customer-classification.component.html'),\r\n    styles: [require('./customer-classification.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** CustomerClassification component*/\r\nexport class CustomerClassificationComponent implements OnInit, AfterViewInit {\r\n    customerClassification_Name: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n\r\n    auditHisory: AuditHistory[];\r\n    Active: string = \"Active\";\r\n    /** CustomerClassification ctor */\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    actionamecolle: any[] = [];\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    displayedColumns = ['customerClassificationId', 'description',  'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<CustomerClassification>;\r\n    allcustomerclassificationInfo: CustomerClassification[] = [];\r\n    sourceAction: CustomerClassification;\r\n    loadingIndicator: boolean;\r\n    actionForm: FormGroup;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n    allComapnies: MasterCompany[];\r\n    private isSaving: boolean;\r\n    modal: NgbModalRef; \r\n    selectedColumn: CustomerClassification[];\r\n    classificationName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n    /** Currency ctor */\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private _fb: FormBuilder, private alertService: AlertService, private masterComapnyService: MasterComapnyService, private modalService: NgbModal,  public CustomerClassificationService: CustomerClassificationService, private dialog: MatDialog) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        this.loadData();\r\n        this.cols = [\r\n            //{ field: 'customerClassificationId', header: 'Customer Classification ID' },\r\n            { field: 'description', header: 'Classification Name' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n           //{ field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'Created Date' }\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-customer-classification';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n        this.selectedColumns = this.cols;\r\n    }\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    private loadData() {\r\n        // debugger;\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.CustomerClassificationService.getCustomerClassificationList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(getCustomerClassificationList: CustomerClassification[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getCustomerClassificationList;\r\n      \r\n        this.allcustomerclassificationInfo = getCustomerClassificationList;\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new CustomerClassification();\r\n        this.sourceAction.isActive = true;\r\n        this.classificationName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n          console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n    openEdit(content, row) {\r\n\t\tthis.disableSave = false;\r\n        this.isEditMode = true;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.classificationName = this.sourceAction.description;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n        this.sourceAction = row;\r\n        this.isSaving = true;\r\n        this.CustomerClassificationService.historycustomerclass(this.sourceAction.customerClassificationId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.customerClassification_Name = row.description;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].classificationName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n    filterclassifications(event) {\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allcustomerclassificationInfo.length; i++) {\r\n            let classificationName = this.allcustomerclassificationInfo[i].description;\r\n            if (classificationName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"customerClassificationId\": this.allcustomerclassificationInfo[i].customerClassificationId,\r\n                    \"classificationName\": classificationName\r\n                }]),\r\n                this.localCollection.push(classificationName);\r\n            }\r\n        }\r\n    }\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n      \r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.auditHisory = auditHistory;\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.CustomerClassificationService.updatecustomerclass(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.CustomerClassificationService.updatecustomerclass(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n   \r\n\r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n        this.isSaving = true;\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.classificationName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.CustomerClassificationService.newAddcustomerclass(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.classificationName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.CustomerClassificationService.updatecustomerclass(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.CustomerClassificationService.deletecustomerclass(this.sourceAction.customerClassificationId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: CustomerClassification) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: CustomerClassification) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/customer-classification/customer-classification.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { ActionService } from '../../services/action.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { Action } from '../../models/action.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { DocumentService } from '../../services/document.service';\r\nimport { DocumentModel } from '../../models/document.model';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-documents',\r\n    template: require('./documents.component.html'),\r\n    styles: [require('./documents.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class DocumentsComponent implements OnInit, AfterViewInit {\r\n\r\n    allreasn: any[]=[];\r\n    disableSave: boolean=false;\r\n    selectedreason: any;\r\n    document_Name: any = \"\";\r\n    description: any = \"\";\r\n    customer: any = \"\";\r\n    itemMaster: any = \"\";\r\n    purchaseOrder: any = \"\";\r\n    repairOrder: any = \"\";\r\n    sl: any = \"\";\r\n    salesOrder: any = \"\";\r\n    workOrder: any = \"\";\r\n    vendor: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n\r\n    ngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-documents';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n    }\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    localCollection: any[] = [];\r\n    documentName: string;\r\n    displayedColumns = ['actionId', 'companyName', 'description', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<DocumentModel>;\r\n    alldocuments: DocumentModel[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    private isSaving: boolean;\r\n    public sourceAction: DocumentModel;\r\n    public auditHisory: AuditHistory[] = [];\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n    selectedColumn: any[];\r\n    selectedColumns: any[];\r\n    cols: any[];\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService,private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: DocumentService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        //this.sourceAction = new Action();\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: any[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.workFlowtService.getWorkFlows().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n        this.cols = [\r\n            //{ field: 'actionId', header: 'Action Id' },\r\n\t\t\t{ field: 'documentCode', header: 'Document Code' },\r\n\t\t\t//{ field: 'memo', header: 'Memo' },\r\n            { field: 'description', header: 'Description' },\r\n            { field: 'customer', header: 'Cust' },\r\n            { field: 'itemMaster', header: 'Item Master' },\r\n            { field: 'purchaseOrder', header: 'PO' },\r\n            { field: 'repairOrder', header: 'RO' },\r\n            { field: 'sl', header: 'SL #' },\r\n            { field: 'salesOrder', header: 'SO' },\r\n            { field: 'workOrder', header: 'WO' },\r\n            { field: 'vendor',header:'Vendor'},\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'createdDate' }\r\n        ];\r\n\r\n        this.selectedColumns = this.cols;\r\n\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n           \r\n            this.sourceAction.isActive == false;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            \r\n            this.sourceAction.isActive == true;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n    //eventHandler(event) {\r\n    //    let value = event.target.value.toLowerCase()\r\n    //    if (value == this.selectedreason.toLowerCase()) {\r\n    //        this.disableSave = true;\r\n    //    }\r\n    //    else {\r\n    //        this.disableSave = false;\r\n    //    }\r\n    //}\r\n\r\n\teventHandler(event) {\r\n\t\tif (event.target.value != \"\") {\r\n\t\t\tlet value = event.target.value.toLowerCase();\r\n\t\t\tif (this.selectedreason) {\r\n\t\t\t\tif (value == this.selectedreason.toLowerCase()) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disableSave = true;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.disableSave = false;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tdocumentId(event) {\r\n\t\tif (this.allreasn){\r\n\t\t\tfor (let i = 0; i < this.allreasn.length; i++) {\r\n\t\t\t\tif (event == this.allreasn[i][0].documentName) {\r\n\t\t\t\t\tthis.sourceAction.documentCode = this.allreasn[i][0].documentName;\r\n\t\t\t\t\tthis.disableSave = true;\r\n\t\t\t\t\tthis.selectedreason = event;\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    filterDocuments(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.alldocuments.length; i++) {\r\n            let documentName = this.alldocuments[i].documentCode;\r\n            if (documentName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.allreasn.push([{\r\n                    \"documentId\": this.alldocuments[i].documentId,\r\n                    \"documentName\": documentName\r\n                }]),\r\n                this.localCollection.push(documentName);\r\n            }\r\n        }\r\n    }\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(allWorkFlows: any[]) {\r\n      \r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = allWorkFlows;\r\n        this.alldocuments = allWorkFlows;\r\n       // console.log(allWorkFlows);\r\n    }\r\n\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new DocumentModel();\r\n\t\tthis.sourceAction.isActive = true;\r\n        this.documentName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\r\n\t\tthis.disableSave = false;\r\n\r\n        this.sourceAction = row;\r\n        this.documentName = this.sourceAction.documentCode;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        //this.isSaving = true;\r\n        // debugger;\r\n        this.workFlowtService.historyAcion(this.sourceAction.documentId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.document_Name = row.documentCode;\r\n        this.description = row.description;\r\n        this.customer = row.customer;\r\n        this.itemMaster = row.itemMaster;\r\n        this.purchaseOrder = row.purchaseOrder;\r\n        this.repairOrder = row.repairOrder;\r\n        this.sl = row.sl;\r\n        this.salesOrder = row.salesOrder;\r\n        this.workOrder = row.workOrder;\r\n        this.vendor = row.vendor;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.documentCode = this.documentName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.workFlowtService.newAction(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.documentCode = this.documentName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.workFlowtService.deleteAcion(this.sourceAction.documentId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: any) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: any) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/documents/documents.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { EmployeeExpertiseService } from '../../services/employeeexpertise.service';\r\nimport { EmployeeExpertise } from '../../models/employeeexpertise.model';\r\nimport { EmployeeExpertiseEndpointService } from '../../services/employeeexpertise-endpoint.service';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-employee-expertise',\r\n    template: require('./employee-expertise.component.html'),\r\n    styles: [require('./employee-expertise.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** EmployeeExpertise component*/\r\nexport class EmployeeExpertiseComponent implements OnInit, AfterViewInit {\r\n    employeeExpertise_Name: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n\r\n\r\n    auditHisory: AuditHistory[];\r\n    Active: string = \"Active\";\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    actionamecolle: any[] = [];\r\n    displayedColumns = ['employeeexpertiseId', 'description'];\r\n    //, 'Sequence', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'\r\n    dataSource: MatTableDataSource<EmployeeExpertise>;\r\n    allEmployeeExpertiseInfo: EmployeeExpertise[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    private isSaving: boolean;\r\n    public sourceAction: EmployeeExpertise;\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n    selectedColumn: EmployeeExpertise[];\r\n    employeeName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: EmployeeExpertiseService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new EmployeeExpertise();\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        this.loadData();\r\n        this.cols = [\r\n            //{ field: 'employeeExpertiseId', header: 'EmployeeExpertise Id' },\r\n            { field: 'description', header: 'Employee Expertise' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n           //{ field: 'updatedDate', header: 'Updated Date' },\r\n           //{ field: 'createdDate', header: 'Created Date' }\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-employee-expertise';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: EmployeeExpertise[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.workFlowtService.getWorkFlows().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(allWorkFlows: EmployeeExpertise[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = allWorkFlows;\r\n        this.allEmployeeExpertiseInfo = allWorkFlows;\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new EmployeeExpertise();\r\n        this.sourceAction.isActive = true;\r\n        this.employeeName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.employeeName = this.sourceAction.description;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.employeeExpertise_Name = row.description;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].employeeName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    filterEmployeeNames(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allEmployeeExpertiseInfo.length; i++) {\r\n            let employeeName = this.allEmployeeExpertiseInfo[i].description;\r\n            if (employeeName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"employeeExpertiseId\": this.allEmployeeExpertiseInfo[i].employeeExpertiseId,\r\n                    \"employeeName\": employeeName\r\n                }]),\r\n                this.localCollection.push(employeeName);\r\n            }\r\n        }\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        this.isSaving = true;\r\n\r\n        this.workFlowtService.historyAcion(this.sourceAction.employeeExpertiseId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.employeeName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.workFlowtService.newAction(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.employeeName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.workFlowtService.deleteAcion(this.sourceAction.employeeExpertiseId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: EmployeeExpertise) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: EmployeeExpertise) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/employee-expertise/employee-expertise.component.ts","\r\nimport { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { ExpenditureCategoryService } from '../../services/expenditurecategory.service';\r\nimport { ExpenditureCategory } from '../../models/expenditurecategory.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-expenditure',\r\n    template: require('./expenditure.component.html'),\r\n    styles: [require('./expenditure.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class ExpenditureComponent implements OnInit, AfterViewInit {\r\n    expenditure_Name: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    actionamecolle: any[] = [];\r\n    currencyService: any;\r\n    Active: string = \"Active\";\r\n    ngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-expenditure';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n    }\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    displayedColumns = ['expenditurecategoryId', 'description'];\r\n    //, 'Sequence', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'\r\n    dataSource: MatTableDataSource<ExpenditureCategory>;\r\n    allExpenditureCategoryInfo: ExpenditureCategory[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    public auditHisory: AuditHistory[] = [];\r\n    private isSaving: boolean;\r\n    public sourceAction: ExpenditureCategory;\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n    expenditureName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n\r\n    /** Actions ctor */\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n\r\n    selectedColumn: ExpenditureCategory[];\r\n\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService,private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public expenditurecategoryService: ExpenditureCategoryService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new ExpenditureCategory();\r\n\r\n    }\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: ExpenditureCategory[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.expenditurecategoryService.getExpenditureCategoryList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n\r\n        this.cols = [\r\n            //{ field: 'expenditurecategoryId', header: 'ExpenditureCategory ID' },\r\n            { field: 'description', header: 'Expediture Name' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n           //{ field: 'updatedDate', header: 'Updated Date' },\r\n           //{ field: 'createdDate', header: 'Created Date' }\r\n        ];\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(getExpenditureCategoryList: ExpenditureCategory[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getExpenditureCategoryList;\r\n        this.allExpenditureCategoryInfo = getExpenditureCategoryList;\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new ExpenditureCategory();\r\n        this.sourceAction.isActive = true;\r\n        this.expenditureName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\t\tthis.disableSave = false;\r\n        this.isEditMode = true;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.expenditureName = this.sourceAction.description;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\topenHist(content, row) {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.sourceAction = row;\r\n    \tthis.isSaving = true;\r\n        this.expenditurecategoryService.historyExpenditureCategory(this.sourceAction.expenditureCategoryId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\r\n    }\r\n\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.expenditure_Name = row.description;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].expenditureName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    filterExpenditures(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allExpenditureCategoryInfo.length; i++) {\r\n            let expenditureName = this.allExpenditureCategoryInfo[i].description;\r\n            if (expenditureName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"expenditureCategoryId\": this.allExpenditureCategoryInfo[i].expenditureCategoryId,\r\n                    \"expenditureName\": expenditureName\r\n                }]),\r\n\r\n                this.localCollection.push(expenditureName);\r\n            }\r\n        }\r\n    }\r\n\t\r\n\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.expenditurecategoryService.updateExpenditureCategory(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.expenditurecategoryService.updateExpenditureCategory(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n    editItemAndCloseModel() {\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.expenditureName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.expenditurecategoryService.newExpenditureCategory(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.expenditureName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.expenditurecategoryService.updateExpenditureCategory(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.expenditurecategoryService.deleteExpenditureCategory(this.sourceAction.expenditureCategoryId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: ExpenditureCategory) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: ExpenditureCategory) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/expenditure/expenditure.component.ts","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\n\r\nimport { FindingService } from '../../services/finding.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { Finding } from '../../models/finding.model';\r\nimport * as $ from 'jquery';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSort, MatPaginator, MatDialog, MatTableDataSource } from '@angular/material';\r\nimport { NgbModalRef, NgbModal, NgbActiveModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n@Component({\r\n    selector: 'app-findings',\r\n    template: require('./findings.component.html'),\r\n    styles: [require('./findings.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Findings component*/\r\nexport class FindingsComponent {\r\n    finding_Name: any = \"\";\r\n    description: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    actionamecolle: any[] = [];\r\n\r\n    auditHisory: AuditHistory[];\r\n    Active: string = \"Active\";\r\n    /** Findings ctor */\r\n   \r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    displayedColumns = ['findingId', 'findingCode', 'discription', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<Finding>;\r\n    allFindingsInfo: Finding[] = [];\r\n    sourceAction: Finding;\r\n\r\n    loadingIndicator: boolean;\r\n    selectedColumn: Finding[];\r\n    actionForm: FormGroup;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    private isSaving: boolean;\r\n    allComapnies: MasterCompany[];\r\n    private bodyText: string;\r\n    findingName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n    closeResult: string;\r\n    modal: NgbModalRef;\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n    /** Currency ctor */\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService,private masterComapnyService: MasterComapnyService,private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService,public findingService: FindingService, private dialog: MatDialog) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n\r\n    }\r\n   \r\n\r\n    ngOnInit(): void {\r\n        this.loadData();\r\n        this.cols = [\r\n            //{ field: 'findingId', header: 'Finding ID' },\r\n            { field: 'findingCode', header: 'Finding Code' },\r\n            { field: 'memo', header: 'Memo'},\r\n            { field: 'description', header: 'Description' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n           // { field: 'createdDate', header: 'Created Date' }\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-findings';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n        this.selectedColumns = this.cols;\r\n\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.findingService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.findingService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    private loadData() {\r\n        // debugger;\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.findingService.getFindingList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(getFindingList: Finding[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getFindingList;\r\n\r\n        this.allFindingsInfo = getFindingList;\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new Finding();\r\n        this.sourceAction.isActive = true;\r\n        this.findingName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.findingName = this.sourceAction.findingCode;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n\t\tfor (let i = 0; i < this.allFindingsInfo.length; i++) {\r\n\t\t\tif (event == this.allFindingsInfo[i].findingCode) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    filterFindings(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allFindingsInfo.length; i++) {\r\n            let findingName = this.allFindingsInfo[i].findingCode;\r\n            if (findingName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"findingId\": this.allFindingsInfo[i].findingId,\r\n                    \"findingName\": findingName\r\n                }]),\r\n\r\n                this.localCollection.push(findingName);\r\n            }\r\n        }\r\n    }\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        this.isSaving = true;\r\n\r\n        this.findingService.historyAcion(this.sourceAction.findingId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.finding_Name = row.findingCode;\r\n        this.description = row.description;  \r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.findingCode = this.findingName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.findingService.newAction(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.findingCode = this.findingName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.findingService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.findingService.deleteAcion(this.sourceAction.findingId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: Finding) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: Finding) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/findings/findings.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { GatecodeService } from '../../services/gatecode.service';\r\nimport { GateCode } from '../../models/gatecode.model';\r\nimport { GatecodeEndpointService } from '../../services/gatecode-endpoint.service';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-gate-code',\r\n    template: require('./gate-code.component.html'),\r\n    styles: [require('./gate-code.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class GateCodeComponent implements OnInit, AfterViewInit {\r\n    gateCode_Name: any = \"\";\r\n    description: any = \"\";\r\n    sequence: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n\r\n    auditHisory: AuditHistory[];\r\n    Active: string = \"Active\";\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    displayedColumns = ['gateCodeId', 'gateCode', 'description'];\r\n    //, 'Sequence', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'\r\n    dataSource: MatTableDataSource<GateCode>;\r\n    allGatecodeInfo: GateCode[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    private isSaving: boolean;\r\n    public sourceAction: GateCode;\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n    selectedColumn: GateCode[];\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    actionamecolle: any[] = [];\r\n\r\n    gateCodeName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService,private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: GatecodeService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new GateCode();\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        this.loadData();\r\n        this.cols = [\r\n            //{ field: 'gateCodeId', header: 'Gate Code ID' },\r\n            { field: 'gateCode', header: 'Status Code' },\r\n            { field: 'sequence', header: 'Sequence' },\r\n            { field: 'description', header: 'Status Code Description' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n           //{ field: 'createdDate', header: 'Created Date' }\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-gate-code';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: GateCode[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.workFlowtService.getWorkFlows().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(allWorkFlows: GateCode[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = allWorkFlows;\r\n        this.allGatecodeInfo = allWorkFlows;\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new GateCode();\r\n        this.sourceAction.isActive = true;\r\n        this.gateCodeName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.disableSave = false;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.gateCodeName = this.sourceAction.gateCode;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n        this.sourceAction = row;\r\n        this.isSaving = true;\r\n        this.workFlowtService.historyAcion(this.sourceAction.gateCodeId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].gateCodeName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n\r\n    filterGatecodes(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allGatecodeInfo.length; i++) {\r\n            let gateCodeName = this.allGatecodeInfo[i].gateCode;\r\n            if (gateCodeName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"gateCodeId\": this.allGatecodeInfo[i].gateCodeId,\r\n                    \"gateCodeName\": gateCodeName\r\n                }]),\r\n\r\n                this.localCollection.push(gateCodeName);\r\n            }\r\n        }\r\n    }\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.gateCode_Name = row.gateCode;\r\n        this.description = row.description;\r\n        this.sequence = row.sequence;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.gateCode = this.gateCodeName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.workFlowtService.newAction(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.gateCode = this.gateCodeName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.workFlowtService.deleteAcion(this.sourceAction.gateCodeId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: GateCode) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: GateCode) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/gate-code/gate-code.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\n\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { IntegrationService } from '../../services/integration-service';\r\nimport { Integration } from '../../models/integration.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n@Component({\r\n    selector: 'app-integration',\r\n    template: require('./integration.component.html'),\r\n    styles: [require('./integration.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class IntegrationComponent implements OnInit, AfterViewInit {\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    actionamecolle: any[] = [];\r\n\r\n    integration_Name: any = \"\";\r\n    portalURL: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n\r\n\r\n    Active: string = \"Active\";\r\n\tauditHisory: AuditHistory[];\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    selectedColumns: any[];\r\n    cols: any[];\r\n    displayedColumns = ['IntegrationPortalId', 'description', 'Portalurl'];\r\n    dataSource: MatTableDataSource<Integration>;\r\n    allIntegrationInfo: Integration[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    private isSaving: boolean;\r\n\tpublic sourceAction: any = {};\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n    selectedColumn: Integration[];\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n\r\n    integrationName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: IntegrationService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        //this.sourceAction = new Integration();\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        this.cols = [\r\n            //{ field: 'integrationPortalId', header: 'Integration Portal ID' },\r\n            { field: 'portalURL', header: 'Website Url' },\r\n            { field: 'description', header: 'Integration' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n           // { field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'Created Date' }\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-integration';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n        this.selectedColumns = this.cols;\r\n        this.loadData();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: Integration[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.workFlowtService.getWorkFlows().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(allWorkFlows: Integration[]) {\r\n       \r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = allWorkFlows;\r\n        this.allIntegrationInfo = allWorkFlows;\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n    open(content) {\r\n\t\tthis.sourceAction = {};\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\t//this.sourceAction = new Integration();\r\n\t\tthis.sourceAction.isActive = true;\r\n\t\tthis.portalURL = \"\";\r\n\t\tthis.integrationName = \"\";\r\n\t\tthis.sourceAction.description = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.disableSave = false;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n\t\tthis.integrationName = this.sourceAction.description;\r\n\t\tthis.portalURL = row.portalURL;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].integrationName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    filterintegrations(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allIntegrationInfo.length; i++) {\r\n            let integrationName = this.allIntegrationInfo[i].description;\r\n            if (integrationName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"chargeId\": this.allIntegrationInfo[i].integrationPortalId,\r\n                    \"integrationName\": integrationName\r\n                }]),\r\n                this.localCollection.push(integrationName);\r\n            }\r\n        }\r\n    }\r\n\r\n\topenHist(content, row) {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\r\n\t\tthis.sourceAction = row;\r\n\r\n\r\n\r\n\t\tthis.isSaving = true;\r\n\r\n\t\tthis.workFlowtService.historyintegration(this.sourceAction.integrationPortalId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.integration_Name = row.description;\r\n        this.portalURL = row.portalURL;   \r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n\t}\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            //this.sourceAction.description = this.integrationName;\r\n\t\t\tthis.sourceAction.portalURL = this.portalURL;\r\n            this.workFlowtService.newAction(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n\t\t\tthis.sourceAction.description = this.integrationName;\r\n\t\t\tthis.sourceAction.portalURL = this.portalURL;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deleteAcion(this.sourceAction.integrationPortalId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: Integration) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: Integration) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/integration/integration.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { ItemClassificationService } from '../../services/item-classfication.service';\r\nimport { ItemClassificationModel } from '../../models/item-classification.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-item-classification',\r\n    template: require('./item-classification.component.html'),\r\n    styles: [require('./item-classification.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class ItemClassificationComponent implements OnInit, AfterViewInit {\r\n    item_Name: any = \"\";\r\n    description: any = \"\";\r\n    itemType: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n    auditHisory: AuditHistory[];\r\n  \r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    displayedColumns = ['itemclassificationId', 'itemclassificationCode', 'description', 'memo'];\r\n    //, 'Sequence', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'\r\n    dataSource: MatTableDataSource<ItemClassificationModel>;\r\n    allitemclassificationInfo: ItemClassificationModel[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n\tprivate isSaving: boolean;\r\n\tpublic sourceAction: any;\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n    selectedColumn: ItemClassificationModel[];\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    Active: string = \"Active\";\r\n    modal: NgbModalRef;\r\n    itemName: string;\r\n    filteredBrands: any[];\r\n\tlocalCollection: any[] = [];\r\n\tlocalNameCollection: any[] = [];\r\n\tlocaltypeCollection: any[] = [];\r\n    /** Actions ctor */\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    actionamecolle: any[] = [];\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\tclassnamecolle: any[] = [];\r\n\tclassificationtypecolle: any[] = [];\r\n\tallitemclassnameinfo: ItemClassificationModel[];\r\n\tdisableClassdesc: boolean = false;\r\n    disabletypeSave: boolean;\r\n    className: any;\r\n    itemTypeName: any;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: ItemClassificationService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new ItemClassificationModel();\r\n\r\n    }\r\n\r\n    \r\n    ngOnInit(): void {\r\n        this.loadData();\r\n        this.cols = [\r\n            //{ field: 'itemClassificationId', header: 'Item Classification ID' },\r\n            { field: 'itemClassificationCode', header: 'Item Classification Name' },\r\n            { field: 'description', header: 'Item Classification Description' },\r\n            { field: 'itemType', header: 'ItemType' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n           // { field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'Created Date' }\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-item-classification';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n\r\n\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: ItemClassificationModel[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.workFlowtService.getWorkFlows().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(allWorkFlows: ItemClassificationModel[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = allWorkFlows;\r\n        this.allitemclassificationInfo = allWorkFlows;\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n\topen(content) {\r\n\t\tthis.disableSave = false;\r\n\t\tthis.disableClassdesc = false;\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disabletypeSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new ItemClassificationModel();\r\n        this.sourceAction.isActive = true;\r\n\t\tthis.itemName = \"\";\r\n\t\tthis.className = \"\";\r\n\t\tthis.itemTypeName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\topenEdit(content, row) {\r\n\t\tthis.disableClassdesc = false;\r\n\t\tthis.disableSave = false;\r\n\t\tthis.disabletypeSave = false;\r\n        this.isEditMode = true;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n\t\tthis.itemName = this.sourceAction.itemClassificationCode;\r\n\t\tthis.className = this.sourceAction.description;\r\n\t\tthis.itemTypeName = this.sourceAction.itemType;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        this.isSaving = true;\r\n\r\n        this.workFlowtService.historyAcion(this.sourceAction.itemClassificationId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n        eventHandler(event) {\r\n            let value = event.target.value.toLowerCase();\r\n            if (this.selectedActionName) {\r\n                if (value == this.selectedActionName.toLowerCase()) {\r\n                    //alert(\"Action Name already Exists\");\r\n                    this.disableSave = true;\r\n                }\r\n                else {\r\n                    this.disableSave = false;\r\n                }\r\n            }\r\n\r\n\t}\r\n\tclasseventHandler(event) {\r\n\t\tlet value = event.target.value.toLowerCase();\r\n\t\tif (this.selectedActionName) {\r\n\t\t\tif (value == this.selectedActionName.toLowerCase()) {\r\n\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\tthis.disableClassdesc = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.disableClassdesc = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\tclasseventtypeHandler(event) {\r\n\t\tlet value = event.target.value.toLowerCase();\r\n\t\tif (this.selectedActionName) {\r\n\t\t\tif (value == this.selectedActionName.toLowerCase()) {\r\n\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\tthis.disabletypeSave = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.disabletypeSave = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n        partnmId(event) {\r\n            //debugger;\r\n            for (let i = 0; i < this.actionamecolle.length; i++) {\r\n                if (event == this.actionamecolle[i][0].itemName) {\r\n                    //alert(\"Action Name already Exists\");\r\n                    this.disableSave = true;\r\n                    this.selectedActionName = event;\r\n                }\r\n            }\r\n        }\r\n\tclassificationId(event) {\r\n\t\t//debugger;\r\n\t\tif (this.allitemclassificationInfo) {\r\n\t\t\tfor (let i = 0; i < this.allitemclassificationInfo.length; i++) {\r\n\t\t\t\tif (event == this.allitemclassificationInfo[i].description) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disableClassdesc = true;\r\n\t\t\t\t\tthis.selectedActionName = event;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tclassificationtypeId(event) {\r\n\t\t//debugger;\r\n\t\tif (this.allitemclassificationInfo) {\r\n\t\t\tfor (let i = 0; i < this.allitemclassificationInfo.length; i++) {\r\n\t\t\t\tif (event == this.allitemclassificationInfo[i].itemType) {\r\n\t\t\t\t\tthis.disabletypeSave = true;\r\n\t\t\t\t\tthis.selectedActionName = event;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n    filterItems(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allitemclassificationInfo.length; i++) {\r\n            let itemName = this.allitemclassificationInfo[i].itemClassificationCode;\r\n            if (itemName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"itemClassificationId\": this.allitemclassificationInfo[i].itemClassificationId,\r\n                    \"itemName\": itemName\r\n                }]),\r\n                this.localCollection.push(itemName);\r\n            }\r\n        }\r\n\t}\r\n\r\n\r\n\tfilterItemNames(event) {\r\n\r\n\t\tthis.localNameCollection = [];\r\n\t\tif (this.allitemclassificationInfo) {\r\n\t\t\tfor (let i = 0; i < this.allitemclassificationInfo.length; i++) {\r\n\t\t\t\tlet className = this.allitemclassificationInfo[i].description;\r\n\t\t\t\tif (className.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\t\tthis.classnamecolle.push([{\r\n\t\t\t\t\t\t\"itemClassificationId\": this.allitemclassificationInfo[i].itemClassificationId,\r\n\t\t\t\t\t\t\"className\": className\r\n\t\t\t\t\t}]),\r\n\t\t\t\t\t\tthis.localNameCollection.push(className);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfilterItemtypes(event) {\r\n\r\n\t\tthis.localtypeCollection = [];\r\n\t\tif (this.allitemclassificationInfo) {\r\n\t\t\tfor (let i = 0; i < this.allitemclassificationInfo.length; i++) {\r\n\t\t\t\tlet itemTypeName = this.allitemclassificationInfo[i].itemType;\r\n\t\t\t\tif (itemTypeName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\t\tthis.classificationtypecolle.push([{\r\n\t\t\t\t\t\t\"itemClassificationId\": this.allitemclassificationInfo[i].itemClassificationId,\r\n\t\t\t\t\t\t\"itemTypeName\": itemTypeName\r\n\t\t\t\t\t}]),\r\n\t\t\t\t\t\tthis.localtypeCollection.push(itemTypeName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n\t\t\tthis.sourceAction.itemClassificationCode = this.itemName;\r\n\t\t\tthis.sourceAction.description = this.className;\r\n\t\t\tthis.sourceAction.itemType = this.itemTypeName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.workFlowtService.newAction(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n\t\t\tthis.sourceAction.itemClassificationCode = this.itemName;\r\n\t\t\tthis.sourceAction.description = this.className;\r\n\t\t\tthis.sourceAction.itemType = this.itemTypeName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.workFlowtService.deleteAcion(this.sourceAction.itemClassificationId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: ItemClassificationModel) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.item_Name = row.itemClassificationCode;\r\n        this.description = row.description;\r\n        this.itemType = row.itemType;     \r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    private saveSuccessHelper(role?: ItemClassificationModel) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/item-classification/item-classification.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { Itemgroup } from '../../models/item-group.model';\r\nimport { ItemGroupService } from '../../services/item-group.service';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-item-group',\r\n    template: require('./item-group.component.html'),\r\n    styles: [require('./item-group.component.scss')],\r\n    animations: [fadeInOut]\r\n\r\n})\r\n/** Actions component*/\r\nexport class ItemGroupComponent implements OnInit, AfterViewInit {\r\n    selectedreason: any;\r\n    allreasn: any[]=[];\r\n    itemGroup_Name: any = \"\";\r\n    description: any = \"\";   \r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n    disableSave: boolean = false;\r\n\r\n\r\n    auditHisory: AuditHistory[];\r\n    Active: string = \"Active\";\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    displayedColumns = ['itemgroupId', 'itemGroupCode', 'description'];\r\n    //, 'Sequence', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'\r\n    dataSource: MatTableDataSource<Itemgroup>;\r\n    allitemgroupobjInfo: Itemgroup[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    private isSaving: boolean;\r\n    public sourceAction: Itemgroup;\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n    selectedColumn: Itemgroup[];\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n    itemGroupName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: ItemGroupService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new Itemgroup();\r\n\r\n    }\r\n  \r\n\r\n    ngOnInit(): void {\r\n        this.loadData();\r\n        this.cols = [\r\n            //{ field: 'itemGroupId', header: 'Item Group Id' },\r\n            { field: 'itemGroupCode', header: 'Item Group ID' },\r\n            { field: 'description', header: 'Item Group Name' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'Created Date' }\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-item-group';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n        this.selectedColumns = this.cols;\r\n    }\r\n \r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: Itemgroup[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.workFlowtService.getWorkFlows().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(allWorkFlows: Itemgroup[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = allWorkFlows;\r\n        this.allitemgroupobjInfo = allWorkFlows;\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new Itemgroup();\r\n        this.sourceAction.isActive = true;\r\n        this.itemGroupName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\t\tthis.disableSave = false;\r\n        this.isEditMode = true;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.itemGroupName = this.sourceAction.itemGroupCode;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n        this.sourceAction = row;\r\n        this.isSaving = true;\r\n        this.workFlowtService.historyAcion(this.sourceAction.itemGroupId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.itemGroup_Name = row.itemGroupCode;\r\n        this.description = row.description;      \r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase()\r\n        if (this.selectedreason) {\r\n        if (value == this.selectedreason.toLowerCase()) {\r\n            this.disableSave = true;\r\n        }\r\n        else {\r\n            this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    itemGroupId(event) {\r\n        for (let i = 0; i < this.allreasn.length; i++) {\r\n            if (event == this.allreasn[i][0].itemGroupName) {\r\n\r\n\r\n                this.disableSave = true;\r\n                this.selectedreason = event;\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    filterItemgroups(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allitemgroupobjInfo.length; i++) {\r\n            let itemGroupName = this.allitemgroupobjInfo[i].itemGroupCode;\r\n            if (itemGroupName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\r\n                this.allreasn.push([{\r\n                    \"itemGroupId\": this.allitemgroupobjInfo[i].itemGroupId,\r\n                    \"itemGroupName\": itemGroupName\r\n                }]),\r\n                this.localCollection.push(itemGroupName);\r\n            }\r\n        }\r\n    }\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.itemGroupCode = this.itemGroupName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.workFlowtService.newAction(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.itemGroupCode = this.itemGroupName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.workFlowtService.deleteAcion(this.sourceAction.itemGroupId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: Itemgroup) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: Itemgroup) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/item-group/item-group.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { JobTitle } from '../../models/jobtitle.model';\r\nimport { JobTitleService } from '../../services/job-title.service';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-job-title',\r\n    template: require('./job-title.component.html'),\r\n    styles: [require('./job-title.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class JobTitleComponent implements OnInit, AfterViewInit {\r\n    allreasn: any[]=[];\r\n    selectedreason: any;\r\n    job_Name: any = \"\";   \r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n    disableSave: boolean = false;\r\n\r\n\r\n    ngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-job-title';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n    }\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    Active: string = \"Active\";\r\n    displayedColumns = ['jobTitleId', 'companyName', 'description', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<JobTitle>;\r\n    allJobTitlesinfo: JobTitle[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    private isSaving: boolean;\r\n    public sourceAction: JobTitle;\r\n    public auditHisory: AuditHistory[] = [];\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n\r\n    selectedColumns: any[];\r\n    cols: any[];\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n    selectedColumn: JobTitle[];\r\n    jobName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: JobTitleService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new JobTitle();\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: JobTitle[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.workFlowtService.getWorkFlows().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n        this.cols = [\r\n            //{ field: 'jobTitleId', header: 'Job Title Id' },\r\n            { field: 'description', header: 'Job Titles' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'createdDate' }\r\n        ];\r\n\r\n        this.selectedColumns = this.cols;\r\n\r\n    }\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(allWorkFlows: JobTitle[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = allWorkFlows;\r\n        this.allJobTitlesinfo = allWorkFlows;\r\n    }\r\n\topenHist(content, row) {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\r\n\t\tthis.sourceAction = row;\r\n\r\n\r\n\r\n\t\t//this.isSaving = true;\r\n\t\t// debugger;\r\n\t\tthis.workFlowtService.historyJobTitle(this.sourceAction.jobTitleId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\r\n\r\n\t}\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n        // alert('success');\r\n\r\n       \r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory; this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new JobTitle();\r\n\t\tthis.disableSave = false;\r\n        this.sourceAction.isActive = true;\r\n        this.jobName = \"\";\r\n\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\t\r\n\r\n\r\n        this.sourceAction = row;\r\n        this.jobName = this.sourceAction.description;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.job_Name = row.description;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase()\r\n        if (this.selectedreason) {\r\n            if (value == this.selectedreason.toLowerCase()) {\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    jobTitleId(event) {\r\n        for (let i = 0; i < this.allreasn.length; i++) {\r\n            if (event == this.allreasn[i][0].jobName) {\r\n\r\n                this.disableSave = true;\r\n                this.selectedreason = event;\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    filterJobs(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allJobTitlesinfo.length; i++) {\r\n            let jobName = this.allJobTitlesinfo[i].description;\r\n            if (jobName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.allreasn.push([{\r\n                    \"jobTitleId\": this.allJobTitlesinfo[i].jobTitleId,\r\n                    \"jobName\": jobName\r\n                }]),\r\n                this.localCollection.push(jobName);\r\n            }\r\n        }\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        \r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.jobName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.workFlowtService.newAction(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.jobName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.workFlowtService.deleteAcion(this.sourceAction.jobTitleId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: JobTitle) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: JobTitle) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/job-title/job-title.component.ts","\r\nimport { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { PriorityService } from '../../services/priority.service';\r\nimport { Priority } from '../../models/priority.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-priority',\r\n    template: require('./priority.component.html'),\r\n    styles: [require('./priority.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class PriorityComponent implements OnInit, AfterViewInit {\r\n    allpriority: any[]=[];\r\n    selectedreason: any;\r\n    priority_Name: any = \"\";  \r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n\r\n    ngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-priority';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n    }\r\n    Active: string = \"Active\";\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    displayedColumns = ['priorityId' ,'description'];\r\n    //, 'Sequence', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'\r\n    dataSource: MatTableDataSource<Priority>;\r\n    allPriorityInfo: Priority[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    public auditHisory: AuditHistory[] = [];\r\n    private isSaving: boolean;\r\n    public sourceAction: Priority;\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n    disableSave: boolean = false;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n    /** Actions ctor */\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    priorityName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n\r\n    selectedColumn: Priority[];\r\n \r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public priorityService: PriorityService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new Priority();\r\n\r\n    }\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: Priority[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.priorityService.getPriorityList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n\r\n        this.cols = [\r\n            //{ field: 'priorityId', header: 'Priority ID' },\r\n            { field: 'description', header: 'Priority Name' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'Created Date' }\r\n        ];\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n  \r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n\t}\r\n\tprivate onDataLoadSuccessful(getPriorityList: Priority[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getPriorityList;\r\n        this.allPriorityInfo = getPriorityList;\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n  \r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\r\n\t\tthis.isSaving = true;\r\n\t\tthis.disableSave = false;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new Priority();\r\n        this.sourceAction.isActive = true;\r\n        this.priorityName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\r\n\r\n\r\n        this.sourceAction = row;\r\n        this.priorityName = this.sourceAction.description;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.priority_Name = row.description;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase()\r\n        if (this.selectedreason) {\r\n            if (value == this.selectedreason.toLowerCase()) {\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    priorityId(event) {\r\n        for (let i = 0; i < this.allpriority.length; i++) {\r\n            if (event == this.allpriority[i][0].priorityName) {\r\n\r\n                this.disableSave = true;\r\n                this.selectedreason = event;\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    filterpriorities(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allPriorityInfo.length; i++) {\r\n            let priorityName = this.allPriorityInfo[i].description;\r\n            if (priorityName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.allpriority.push([{\r\n                    \"priorityId\": this.allPriorityInfo[i].priorityId,\r\n                    \"priorityName\": priorityName\r\n                }]),\r\n                this.localCollection.push(priorityName);\r\n            }\r\n        }\r\n    }\r\n    openHist(content, row) {\r\n\r\n        this.sourceAction = row;\r\n\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.priorityService.updatePriority(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.priorityService.updatePriority(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    editItemAndCloseModel() {\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.priorityName;\r\n            this.priorityService.newPriority(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.priorityName;\r\n            this.priorityService.updatePriority(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.priorityService.deletePriority(this.sourceAction.priorityId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: Priority) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: Priority) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/priority/priority.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { ProvisionService } from '../../services/provision.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { Provision } from '../../models/provision.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-provision',\r\n    template: require('./provision.component.html'),\r\n    styles: [require('./provision.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class ProvisionComponent implements OnInit, AfterViewInit {\r\n    allprovisin: any[]=[];\r\n    selectedreason: any;\r\n    provision_Name: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n    disableSave: boolean = false;\r\n    isSaving: boolean;\r\n    ngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-provision';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n    }\r\n    Active: string = \"Active\";\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    displayedColumns = ['provisionId', 'description','createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<Provision>;\r\n    allProvisonInfo: Provision[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    public auditHisory: AuditHistory[] = [];\r\n    sourceAction: Provision;\r\n    loadingIndicator: boolean;\r\n    actionForm: FormGroup;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    modal: NgbModalRef;\r\n    selectedColumn: Provision[];\r\n\r\n    provisionName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService,private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public provisionService: ProvisionService,  private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new Provision();\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: Provision[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.provisionService.getProvisionList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n        this.cols = [\r\n            //{ field: 'provisionId', header: 'Provison Id' },\r\n            { field: 'description', header: 'Provision Name' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n           // { field: 'updatedDate', header: 'Updated Date' },\r\n           // { field: 'createdDate', header: 'Created Date' }\r\n        ];\r\n        this.selectedColumns = this.cols;\r\n    }\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(getProvisionList: Provision[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getProvisionList;\r\n        this.allProvisonInfo = getProvisionList;\r\n    }\r\n\r\n   \r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.provision_Name = row.description;   \r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new Provision();\r\n        this.sourceAction.isActive = true;\r\n\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.disableSave = false;\r\n\r\n\r\n        this.sourceAction = row;\r\n        this.provisionName = this.sourceAction.description;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase()\r\n        if (this.selectedreason) {\r\n            if (value == this.selectedreason.toLowerCase()) {\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    provisionId(event) {\r\n        for (let i = 0; i < this.allprovisin.length; i++) {\r\n            if (event == this.allprovisin[i][0].provisionName) {\r\n\r\n                this.disableSave = true;\r\n                this.selectedreason = event;\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    filterprovisions(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allProvisonInfo.length; i++) {\r\n            let provisionName = this.allProvisonInfo[i].description;\r\n            if (provisionName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.allprovisin.push([{\r\n                    \"provisionId\": this.allProvisonInfo[i].provisionId,\r\n                    \"provisionName\": provisionName\r\n                }]),\r\n                this.localCollection.push(provisionName);\r\n            }\r\n        }\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        //this.isSaving = true;\r\n        // debugger;\r\n        this.provisionService.historyProvision(this.sourceAction.provisionId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.provisionService.updateProvision(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.provisionService.updateProvision(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n   \r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.provisionName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.provisionService.newProvision(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.provisionName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.provisionService.updateProvision(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.provisionService.deleteProvision(this.sourceAction.provisionId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: Provision) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: Provision) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/provision/provision.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { Publication } from '../../models/publication.model';\r\nimport { PublicationService } from '../../services/publication.service';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-publication',\r\n    template: require('./publication.component.html'),\r\n    styles: [require('./publication.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class PublicationComponent implements OnInit, AfterViewInit {\r\n    allpublic: any[]=[];\r\n    selectedreason: any;\r\n    publication_Name: any = \"\";\r\n    description: any = \"\";\r\n    partNumber: any = \"\";\r\n    model: any = \"\";\r\n    ataMain: any = \"\";\r\n    ataSubChapter: any = \"\";\r\n    ataPositionZone: any = \"\";\r\n    platform: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n\r\n    disableSave: boolean = false;\r\n\r\n    auditHisory: AuditHistory[];\r\n    Active: string = \"Active\";\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    displayedColumns = ['PublicationId', 'PartNumber', 'description'];\r\n    //, 'Sequence', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'\r\n    dataSource: MatTableDataSource<Publication>;\r\n    allpublicationInfo: Publication[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    private isSaving: boolean;\r\n    public sourceAction: Publication;\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n    selectedColumn: Publication[];\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n    /** Actions ctor */\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n\r\n    publicationName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n\r\n\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: PublicationService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new Publication();\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        this.loadData();\r\n        this.cols = [\r\n            \r\n            //{ field: 'publicationRecordId', header: 'PublicationRecordId' },\r\n            { field: 'publicationId', header: 'Publication ID' },\r\n            { field: 'partNumber', header: 'Part Number' },\r\n            { field: 'description', header: 'Description' },\r\n            { field: 'model', header: 'Model' },\r\n            { field: 'ataMain', header: 'ATA Main' },\r\n            { field: 'ataSubChapter', header: 'ATA SubChapter' },\r\n            { field: 'ataPositionZone', header: 'ATA Position Zone' },\r\n            { field: 'platform', header: 'Platform' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'Created Date' }\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-publication';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n        this.selectedColumns = this.cols;\r\n    }\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: Publication[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.workFlowtService.getWorkFlows().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase()\r\n        if (this.selectedreason) {\r\n            if (value == this.selectedreason.toLowerCase()) {\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n       }\r\n    }\r\n\r\n\r\n    publicationId(event) {\r\n        for (let i = 0; i < this.allpublic.length; i++) {\r\n            if (event == this.allpublic[i][0].publicationName) {\r\n\r\n                this.disableSave = true;\r\n                this.selectedreason = event;\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(allWorkFlows: Publication[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = allWorkFlows;\r\n        this.allpublicationInfo = allWorkFlows;\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\r\n        this.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.disableSave = false;\r\n\t\tthis.sourceAction = new Publication();\r\n\t\tthis.sourceAction.isActive = true;\r\n        this.publicationName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.publication_Name = row.publicationId;\r\n        this.description = row.description;\r\n        this.partNumber = row.partNumber;\r\n        this.model = row.model;\r\n        this.ataMain = row.ataMain;\r\n        this.ataSubChapter = row.ataSubChapter;\r\n        this.ataPositionZone = row.ataPositionZone;\r\n        this.platform = row.platform;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openEdit(content, row) {\r\n\t\tthis.disableSave = false;\r\n        this.isEditMode = true;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.publicationName = this.sourceAction.publicationId;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    filterpublications(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allpublicationInfo.length; i++) {\r\n            let publicationName = this.allpublicationInfo[i].publicationId;\r\n            if (publicationName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.allpublic.push([{\r\n                    \"publicationId\": this.allpublicationInfo[i].publicationId,\r\n                    \"publicationName\": publicationName\r\n                }]),\r\n                this.localCollection.push(publicationName);\r\n            }\r\n        }\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        //this.isSaving = true;\r\n        // debugger;\r\n        this.workFlowtService.historyAcion(this.sourceAction.publicationRecordId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.publicationId = this.publicationName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.workFlowtService.newAction(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.publicationId = this.publicationName;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.workFlowtService.deleteAcion(this.sourceAction.publicationRecordId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: Publication) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n   \r\n    private saveSuccessHelper(role?: Publication) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/publication/publication.component.ts","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\n\r\nimport { ReasonService } from '../../services/reason.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { Reason } from '../../models/reason.model';\r\nimport * as $ from 'jquery';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSort, MatPaginator, MatDialog, MatTableDataSource } from '@angular/material';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, NgbActiveModal, NgbModalRef, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n@Component({\r\n    selector: 'app-reason',\r\n    template: require('./reason.component.html'),\r\n    styles: [require('./reason.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Reason component*/\r\nexport class ReasonComponent {\r\n    selectedreason: any;\r\n    allreasn: any[]=[];\r\n    disableSave: boolean = false;\r\n    reason_Name: any = \"\";\r\n    reasonForRemoval: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    Active: string = \"Active\";\r\n    displayedColumns = ['reasonId', 'reasonForRemoval', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<Reason>;\r\n    allReasonsInfo: Reason[] = [];\r\n    private isSaving: boolean;\r\n\r\n    public auditHisory: AuditHistory[] = [];\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n\r\n    selectedColumns: any[];\r\n    cols: any[];\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n    sourceAction: Reason;\r\n    allComapnies: MasterCompany[] = [];\r\n    selectedcolumn: Reason[];\r\n\r\n    reasonName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n\r\n  \r\n    public allWorkFlows: Reason[] = [];\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n    /** Actions ctor */\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal,   private masterComapnyService: MasterComapnyService,private _fb: FormBuilder, private alertService: AlertService, public reasonService: ReasonService, private dialog: MatDialog) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n\r\n    }\r\n    \r\n    ngOnInit(): void {\r\n        this.loadData();\r\n        this.cols = [\r\n            //{ field: 'reasonId', header: 'Reason Id' },\r\n            { field: 'reasonCode', header: 'Reason Code'},\r\n            { field: 'reasonForRemoval', header: 'Reason For Removal' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n           // { field: 'createdDate', header: 'Created Date' }\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-reason';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    private loadData() {\r\n        // debugger;\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.reasonService.getReasonList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n  \r\n    }\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(allWorkFlows: Reason[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = allWorkFlows;\r\n        this.allReasonsInfo = allWorkFlows;\r\n    }\r\n\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new Reason();\r\n        this.sourceAction.isActive = true;\r\n        this.reasonName = \"\";\r\n\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.reason_Name = row.reasonCode;\r\n        this.reasonForRemoval = row.reasonForRemoval;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\r\n\t\tthis.disableSave = false;\r\n\r\n        this.sourceAction = row;\r\n        this.reasonName = this.sourceAction.reasonCode;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase()\r\n        if (this.selectedreason) {\r\n            if (value == this.selectedreason.toLowerCase()) {\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    itemId(event) {\r\n        for (let i = 0; i < this.allreasn.length; i++) {\r\n            if (event == this.allreasn[i][0].reasonName) {\r\n\r\n                this.disableSave = true;\r\n                this.selectedreason = event;\r\n            }\r\n          \r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    filterReasons(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allReasonsInfo.length; i++) {\r\n            let reasonName = this.allReasonsInfo[i].reasonCode;\r\n            if (reasonName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.allreasn.push([{\r\n                    \"reasonId\": this.allReasonsInfo[i].reasonId,\r\n                    \"reasonName\":reasonName\r\n                }]),\r\n                this.localCollection.push(reasonName);\r\n            }\r\n        }\r\n    }\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        //this.isSaving = true;\r\n        // debugger;\r\n        this.reasonService.historyReason(this.sourceAction.reasonId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.reasonCode = this.reasonName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.reasonService.newReason(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.reasonCode = this.reasonName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.reasonService.updateReason(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.reasonService.updateReason(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.reasonService.updateReason(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.reasonService.deleteReason(this.sourceAction.reasonId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: Reason) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: Reason) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/reason/reason.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { TaxRateService } from '../../services/taxrate.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { TaxRate } from '../../models/taxrate.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\n\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { TaxTypeService } from '../../services/taxtype.service';\r\n\r\n@Component({\r\n    selector: 'app-tax-rate',\r\n    template: require('./tax-rate.component.html'),\r\n    styles: [require('./tax-rate.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class TaxRateComponent implements OnInit, AfterViewInit {\r\n\tallTaxTypes: any[]=[];\r\n    selectedActionName: any;\r\n    disableSave: boolean=false;\r\n    actionamecolle: any[]=[];\r\n    taxRate_Name: any = \"\";\r\n    taxRate: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n\tupdatedDate: any = \"\";\r\n\tdisplay: boolean = false;\r\n\tshowDialog() {\r\n\t\tthis.display = true;\r\n\t}\r\n    ngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-tax-rate';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t\tthis.loadTaxTypeData();\r\n    }\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    Active: string = \"Active\";\r\n    displayedColumns = ['taxrateId', 'taxTypeId', 'taxrate', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<TaxRate>;\r\n    allTaxrateInfo: TaxRate[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    private isSaving: boolean;\r\n    public sourceAction: TaxRate;\r\n    public auditHisory: AuditHistory[] = [];\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n\r\n    selectedColumns: any[];\r\n    cols: any[];\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n    selectedColumn: TaxRate[];\r\n    taxRateName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(public workFlowtService: TaxTypeService,private breadCrumb: SingleScreenBreadcrumbService,private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public taxRateService : TaxRateService,  private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new TaxRate();\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: TaxRate[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.taxRateService.getTaxRateList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n        this.cols = [\r\n            //{ field: 'taxrateId', header: 'Tax Rate ID' },\r\n            { field: 'taxTypeId', header: 'Tax Type' },\r\n            { field: 'taxRate', header: 'Tax Rate' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'Created Date' }\r\n        ];\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n\t}\r\n\tprivate onTaxTypeloadsuc(allWorkFlows: any[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = allWorkFlows;\r\n\t\tthis.allTaxTypes = allWorkFlows;\r\n\t}\r\n    private onDataLoadSuccessful(getTaxRateList: TaxRate[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getTaxRateList;\r\n        this.allTaxrateInfo = getTaxRateList;\r\n    }\r\n\tprivate loadTaxTypeData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.workFlowtService.getWorkFlows().subscribe(\r\n\t\t\tresults => this.onTaxTypeloadsuc(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t\t\r\n\t\tthis.selectedColumns = this.cols;\r\n\r\n\t}\r\n\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new TaxRate();\r\n        this.sourceAction.isActive = true;\r\n        this.taxRateName = \"\";\r\n\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.taxRateName = this.sourceAction.taxTypeId;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        //this.isSaving = true;\r\n        // debugger;\r\n        this.taxRateService.historyTaxRate(this.sourceAction.taxRateId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.taxRate_Name = row.taxTypeId;\r\n        this.taxRate = row.taxRate;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].taxTypeName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n\r\n\tfilterTaxTypes(event) {\r\n\r\n\t\tthis.localCollection = [];\r\n\t\tfor (let i = 0; i < this.allTaxTypes.length; i++) {\r\n\t\t\tlet taxTypeName = this.allTaxTypes[i].description;\r\n\t\t\tif (taxTypeName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\r\n\t\t\t\tthis.actionamecolle.push([{\r\n\t\t\t\t\t\"taxTypeId\": this.allTaxTypes[i].taxTypeId,\r\n\t\t\t\t\t\"taxTypeName\": taxTypeName\r\n\t\t\t\t}]),\r\n\r\n\t\t\t\t\tthis.localCollection.push(taxTypeName);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    filterTaxRates(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allTaxrateInfo.length; i++) {\r\n            let taxRateName = this.allTaxrateInfo[i].taxTypeId;\r\n            if (taxRateName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\r\n                this.actionamecolle.push([{\r\n                    \"taxRateId\": this.allTaxrateInfo[i].taxRateId,\r\n                    \"taxRateName\": taxRateName\r\n                }]),\r\n\r\n                this.localCollection.push(taxRateName);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.taxRateService.updateTaxRate(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.taxRateService.updateTaxRate(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n  \r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.taxTypeId = this.taxRateName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.taxRateService.newTaxRate(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.taxTypeId = this.taxRateName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.taxRateService.updateTaxRate(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.taxRateService.deleteTaxRate(this.sourceAction.taxRateId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: TaxRate) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: TaxRate) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/tax-rate/tax-rate.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { UnitOfMeasureService } from '../../services/unitofmeasure.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { UnitOfMeasure } from '../../models/unitofmeasure.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-unit-of-measure',\r\n    template: require('./unit-of-measure.component.html'),\r\n    styles: [require('./unit-of-measure.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class UnitOfMeasureComponent implements OnInit, AfterViewInit {\r\n\r\n    selectedActionName: any;\r\n    actionamecolle: any[]=[];\r\n    disableSave: boolean = false;\r\n    unitofmeasure_Name: any = \"\";\r\n    shortName: any = \"\";\r\n    standard: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n\r\n    isSaving: boolean;\r\n    ngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-unit-of-measure';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n    }\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    Active: string = \"Active\";\r\n    displayedColumns = ['unitofmeasureId', 'description', 'shortname', 'standard', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<UnitOfMeasure>;\r\n    allUnitOfMeasureinfo: UnitOfMeasure[] = [];\r\n    sourceAction: UnitOfMeasure;\r\n    allComapnies: MasterCompany[] = [];\r\n    public auditHisory: AuditHistory[] = [];\r\n    loadingIndicator: boolean;\r\n    actionForm: FormGroup;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    modal: NgbModalRef;\r\n    selectedColumn: UnitOfMeasure[];\r\n    unitName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public unitofmeasureService: UnitOfMeasureService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new UnitOfMeasure();\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: UnitOfMeasure[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.unitofmeasureService.getUnitOfMeasureList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n        this.cols = [\r\n            //{ field: 'provisionId', header: 'Provison Id' },\r\n            { field: 'description', header: 'Unit of Measure' },\r\n            { field: 'shortName', header: 'Short Name' },\r\n            { field: 'standard', header: 'Standard' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n          //  { field: 'updatedDate', header: 'Updated Date' },\r\n           // { field: 'createdDate', header: 'Created Date' }\r\n        ];\r\n        this.selectedColumns = this.cols;\r\n    }\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(getUnitOfMeasureList: UnitOfMeasure[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getUnitOfMeasureList;\r\n        this.allUnitOfMeasureinfo = getUnitOfMeasureList;\r\n    }\r\n\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new UnitOfMeasure();\r\n        this.sourceAction.isActive = true;\r\n        this.unitName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\r\n\r\n\r\n        this.sourceAction = row;\r\n        this.unitName = this.sourceAction.description;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        //this.isSaving = true;\r\n        // debugger;\r\n        this.unitofmeasureService.historyUnitOfMeasure(this.sourceAction.unitOfMeasureId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.unitofmeasure_Name = row.description;\r\n        this.shortName = row.shortName;\r\n        this.standard = row.standard;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].unitName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    filterUnitOfMeasures(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allUnitOfMeasureinfo.length; i++) {\r\n            let unitName = this.allUnitOfMeasureinfo[i].description;\r\n            if (unitName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\r\n                this.actionamecolle.push([{\r\n                    \"unitOfMeasureId\": this.allUnitOfMeasureinfo[i].unitOfMeasureId,\r\n                    \"unitName\": unitName\r\n                }]),\r\n                this.localCollection.push(unitName);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.unitofmeasureService.updateUnitOfMeasure(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.unitofmeasureService.updateUnitOfMeasure(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n   \r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.unitName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.unitofmeasureService.newUnitOfMeasure(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.unitName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.unitofmeasureService.updateUnitOfMeasure(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        \r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.unitofmeasureService.deleteUnitOfMeasure(this.sourceAction.unitOfMeasureId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: UnitOfMeasure) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: UnitOfMeasure) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/unit-of-measure/unit-of-measure.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { WorkPerformedService } from '../../services/workperformed.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { WorkPerformed } from '../../models/workperformed.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-work-performed',\r\n    template: require('./work-performed.component.html'),\r\n    styles: [require('./work-performed.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class WorkPerformedComponent implements OnInit, AfterViewInit {\r\n\r\n    actionamecolle: any[]=[];\r\n    disableSave: boolean = false;\r\n    selectedActionName: any;\r\n    workperformed_Name: any = \"\";\r\n    description: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n\r\n    isSaving: boolean;\r\n    ngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-work-performed';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n    }\r\n    Active: string = \"Active\";\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    displayedColumns = ['workPerformedId', 'workperformedcode','description', 'memo', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<WorkPerformed>;\r\n    allWorkPerformedInfo: WorkPerformed[] = [];\r\n    sourceAction: WorkPerformed;\r\n    allComapnies: MasterCompany[] = [];\r\n    public auditHisory: AuditHistory[] = [];\r\n    loadingIndicator: boolean;\r\n    actionForm: FormGroup;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    modal: NgbModalRef;\r\n    selectedColumn: WorkPerformed[];\r\n    workPerformed: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workperformedService: WorkPerformedService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new WorkPerformed();\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: WorkPerformed[] = [];\r\n\r\n    private loadData() {\r\n        // debugger;\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.workperformedService.getWorkPerformedList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n        this.cols = [\r\n            //{ field: 'workPerformedId', header: 'WorkPerformed Id' },\r\n            { field: 'workPerformedCode', header: 'Work Performed ID' },\r\n            { field: 'description', header: 'Work Performed Description' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            { field: 'updatedDate', header: 'Updated Date' },\r\n            { field: 'createdDate', header: 'Created Date' }\r\n        ];\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(getWorkPerformedList: WorkPerformed[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getWorkPerformedList;\r\n        this.allWorkPerformedInfo = getWorkPerformedList;\r\n    }\r\n\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].workPerformed) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new WorkPerformed();\r\n\t\tthis.sourceAction.isActive = true;\r\n        this.workPerformed = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\t\tthis.disableSave = false;\r\n        this.isEditMode = true;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.workPerformed = this.sourceAction.workPerformedCode;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n        this.sourceAction = row;\r\n        //this.isSaving = true;\r\n        // debugger;\r\n        this.workperformedService.historyWorkPerformed(this.sourceAction.workPerformedId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.workperformedService.updateWorkPerformed(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.workperformedService.updateWorkPerformed(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n   \r\n\r\n    filterWorkPerformed(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allWorkPerformedInfo.length; i++) {\r\n            let workPerformed = this.allWorkPerformedInfo[i].workPerformedCode;\r\n\r\n            if (workPerformed.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"workPerformedId\": this.allWorkPerformedInfo[i].workPerformedId,\r\n                    \"workPerformed\": workPerformed\r\n                }]),\r\n\r\n           \r\n                this.localCollection.push(workPerformed);\r\n            }\r\n        }\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.workperformed_Name = row.workPerformedCode;\r\n        this.description = row.description;    \r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.workPerformedCode = this.workPerformed;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.workperformedService.newWorkPerformed(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.workPerformedCode = this.workPerformed;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.workperformedService.updateWorkPerformed(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.workperformedService.deleteWorkPerformed(this.sourceAction.workPerformedId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: WorkPerformed) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Workperformed was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Workperformed was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: WorkPerformed) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Workperformed was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/work-performed/work-performed.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { WorkScopeService } from '../../services/workscope.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { WorkScope } from '../../models/workscope.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-work-scope',\r\n    template: require('./work-scope.component.html'),\r\n    styles: [require('./work-scope.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class WorkScopeComponent implements OnInit, AfterViewInit {\r\n\r\n    allcolletion: any[]=[];\r\n    disableSave: boolean = false;\r\n    selectedworkscope: any;\r\n   workScope_Name: any = \"\";\r\n    description: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n    isSaving: boolean;\r\n    ngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-work-scope';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n    }\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    Active: string = \"Active\";\r\n    displayedColumns = ['workscopeId', 'workscopecode', 'description', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<WorkScope>;\r\n    allWorkScopeinfo: WorkScope[] = [];\r\n    sourceAction: WorkScope;\r\n    allComapnies: MasterCompany[] = [];\r\n    public auditHisory: AuditHistory[] = [];\r\n   \r\n    loadingIndicator: boolean;\r\n    actionForm: FormGroup;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    modal: NgbModalRef;\r\n    selectedColumn: WorkScope[];\r\n    workScopeName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n\r\n\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workscopeService: WorkScopeService,  private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new WorkScope();\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: WorkScope[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n        this.workscopeService.getWorkScopeList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n        this.cols = [\r\n            //{ field: 'workscopeId', header: 'WorkScope Id' },\r\n            { field: 'workScopeCode', header: 'Work Scope Code' },\r\n            { field: 'description', header: 'Work Scope Description' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n           // { field: 'createdDate', header: 'Created Date' }\r\n        ];\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(getWorkScopeList: WorkScope[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getWorkScopeList;\r\n        this.allWorkScopeinfo = getWorkScopeList;\r\n    }\r\n\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.auditHisory = auditHistory;\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.disableSave = false;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new WorkScope();\r\n        this.sourceAction.isActive = true;\r\n        this.workScopeName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\t\tthis.disableSave = false;\r\n        this.isEditMode = true;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.workScopeName = this.sourceAction.workScopeCode;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n        this.sourceAction = row;\r\n       //this.isSaving = true;\r\n        // debugger;\r\n        this.workscopeService.historyWorkScope(this.sourceAction.workScopeId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n    }\r\n\r\n\r\n    eventHandler(event) {\r\n\r\n        let value = event.target.value.toLowerCase()\r\n        if (this.selectedworkscope) {\r\n            if (value == this.selectedworkscope.toLowerCase()) {\r\n\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    partnmId(event) {\r\n\r\n        for (let i = 0; i < this.allcolletion.length; i++) {\r\n            if (event == this.allcolletion[i][0].workScopeName) {\r\n\r\n                this.disableSave = true;\r\n                this.selectedworkscope = event;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    filterWorkscopes(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allWorkScopeinfo.length; i++) {\r\n            let workScopeName = this.allWorkScopeinfo[i].workScopeCode;\r\n            if (workScopeName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\r\n                this.allcolletion.push([{\r\n                    \"workScopeId\": this.allWorkScopeinfo[i].workScopeId,\r\n                    \"workScopeName\": workScopeName\r\n                }]),\r\n                this.localCollection.push(workScopeName);\r\n            }\r\n        }\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.workscopeService.updateWorkScope(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.workscopeService.updateWorkScope(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.workScope_Name = row.workScopeCode;\r\n        this.description = row.description;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    \r\n\r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n        this.isSaving = true;\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.workScopeCode = this.workScopeName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.workscopeService.newWorkScope(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.workScopeCode = this.workScopeName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.workscopeService.updateWorkScope(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.workscopeService.deleteWorkScope(this.sourceAction.workScopeId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: WorkScope) {\r\n        this.isSaving = false;\r\n       if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: WorkScope) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/work-scope/work-scope.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@Component({\r\n    selector: 'app-action-attribute-mapping',\r\n    template: require('./action-attribute-mapping.component.html'),\r\n\tstyles: [require('./action-attribute-mapping.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** ActionAttributeMapping component*/\r\nexport class ActionAttributeMappingComponent implements OnInit, AfterViewInit {\r\n    /** ActionAttributeMapping ctor */\r\n\tngOnInit() : void\r\n\t{\r\n\t\t\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-action-attribute-mapping';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t}\r\n\t\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService) {\r\n\r\n\t}\r\n\tngAfterViewInit() {\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/action-attribute-mapping/action-attribute-mapping.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { AtaSubChapter1Service } from '../../services/atasubchapter1.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { ATASubChapter } from '../../models/atasubchapter.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ATAMain } from '../../models/atamain.model';\r\nimport { AtaMainService } from '../../services/atamain.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { ATAChapter } from '../../models/atachapter.model';\r\n\r\n@Component({\r\n\tselector: 'app-ata-sub-chapter1',\r\n\ttemplate: require('./ata-sub-chapter1.component.html'),\r\n\tstyles: [require('./ata-sub-chapter1.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** AtaSubChapter1 component*/\r\nexport class AtaSubChapter1Component implements OnInit, AfterViewInit {\r\n\t\r\n\tmemo: any = \"\";\r\n\tcreatedBy: any = \"\";\r\n\tupdatedBy: any = \"\";\r\n\tcreatedDate: any = \"\";\r\n\tupdatedDate: any = \"\";\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\tActive: string = \"Active\";\r\n\tselectedActionName: any;\r\n\tdisableSave: boolean;\r\n\tactionamecolle: any[] = [];\r\n    description: string;\r\n    ataChapterCode: any;\r\n\t/** AtaSubChapter1 ctor */\r\n\tngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.atamaindata();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-ata-sub-chapter1';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t}\r\n\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\r\n\tdisplayedColumns = ['memo','createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n\tdataSource: MatTableDataSource<ATASubChapter>;\r\n\tallATAMaininfo: ATASubChapter[] = [];\r\n\tallComapnies: MasterCompany[] = [];\r\n\tallATAMaininfo1: any[];\r\n\tprivate isSaving: boolean;\r\n\tpublic sourceAction: any;\r\n\tpublic auditHisory: AuditHistory[] = [];\r\n\tprivate bodyText: string;\r\n\tloadingIndicator: boolean;\r\n\tcloseResult: string;\r\n\tselectedColumn: ATASubChapter[];\r\n\tselectedColumns: any[];\r\n\tcols: any[];\r\n\ttitle: string = \"Create\";\r\n\tid: number;\r\n\terrorMessage: any;\r\n\tmodal: NgbModalRef;\r\n\tataChapterName: string;\r\n\tfilteredBrands: any[];\r\n\tlocalCollection: any[] = [];\r\n\t//allATAMaininfo: ATAMain[] = [];\r\n\t/** Actions ctor */\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, public ataservice: AtaMainService, private _fb: FormBuilder, private alertService: AlertService, public ataSubChapter1Service: AtaSubChapter1Service, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\t\tthis.displayedColumns.push('action');\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\tthis.sourceAction = new ATASubChapter();\r\n\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\tpublic allWorkFlows: ATASubChapter[] = [];\r\n\r\n\tprivate loadData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.ataSubChapter1Service.getAtaSubChapter1List().subscribe(\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n        this.cols = [\r\n            { field: 'ataSubChapterCode', header: 'ATA SubChapter Code' },\r\n\t\t\t{ field: 'description', header: 'Description' },\r\n\t\t\t//{ field: 'ataChapterName', header: 'ATA Chapter Name' },\r\n\t\t\t//{ field: 'ataChapterCategory', header: 'ATA Chapter Category' },\r\n\t\t\t{ field: 'memo', header: 'Memo' },\r\n\t\t\t{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t{ field: 'updatedBy', header: 'Updated By' }\r\n\t\t];\r\n\r\n\t\tthis.selectedColumns = this.cols;\r\n\r\n\t}\r\n\r\n\tprivate loadMasterCompanies() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\tprivate atamaindata() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.ataservice.getAtaMainList().subscribe(\r\n\t\t\tresults => this.onSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\r\n\tprivate onSuccessful(getAtaMainList: any[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\t//this.dataSource.data = getAtaMainList;\r\n\t\tthis.allATAMaininfo1 = getAtaMainList;\r\n\t}\r\n\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\r\n\tprivate refresh() {\r\n\t\t// Causes the filter to refresh there by updating with recently added data.\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\tprivate onDataLoadSuccessful(getAtaSubChapter1List: ATASubChapter[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getAtaSubChapter1List;\r\n\t\tthis.allATAMaininfo = getAtaSubChapter1List;\r\n\t}\r\n\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n\t}\r\n\r\n\t//eventHandler(event) {\r\n\t//\tlet value = event.target.value.toLowerCase();\r\n\t//\tif (this.selectedActionName) {\r\n\t//\t\tif (value == this.selectedActionName.toLowerCase()) {\r\n\t//\t\t\t//alert(\"Action Name already Exists\");\r\n\t//\t\t\tthis.disableSave = true;\r\n\t//\t\t}\r\n\t//\t\telse {\r\n\t//\t\t\tthis.disableSave = false;\r\n\t//\t\t}\r\n\t//\t}\r\n\t//\telse {\r\n\t//\t\tfor (let i = 0; i < this.allATAMaininfo.length; i++) {\r\n\t//\t\t\tif (value == this.allATAMaininfo[i][0].actionAttributeName.toLowerCase()) {\r\n\t//\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t//\t\t\t\tthis.disableSave = true;\r\n\t//\t\t\t\tthis.selectedActionName = event;\r\n\t//\t\t\t}\r\n\t//\t\t}\r\n\t//\t}\r\n\r\n\t//}\r\n\r\n\teventHandler(event) {\r\n\t\tif (event.target.value != \"\") {\r\n\t\t\tlet value = event.target.value.toLowerCase();\r\n\t\t\tif (this.selectedActionName) {\r\n\t\t\t\tif (value == this.selectedActionName.toLowerCase()) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disableSave = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.disableSave = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpartnmId(event) {\r\n\t\t//debugger;\r\n\t\tif (this.allATAMaininfo) {\r\n\r\n\t\t\tfor (let i = 0; i < this.allATAMaininfo.length; i++) {\r\n\t\t\t\tif (event == this.allATAMaininfo[i].description) {\r\n\t\t\t\t\tthis.sourceAction.description = this.allATAMaininfo[i].description;\r\n\t\t\t\t\tthis.disableSave = true;\r\n\r\n\t\t\t\t\tthis.selectedActionName = event;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfilterActionAttributes(event) {\r\n\r\n\t\tthis.localCollection = [];\r\n\t\tfor (let i = 0; i < this.allATAMaininfo.length; i++) {\r\n\t\t\tlet description = this.allATAMaininfo[i].description;\r\n\t\t\tif (description.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\tthis.actionamecolle.push([{\r\n\t\t\t\t\t\"ataSubChapterId\": this.allATAMaininfo[i].ataSubChapterId,\r\n\t\t\t\t\t\"description\": description\r\n\t\t\t\t}]),\r\n\t\t\t\t\tthis.localCollection.push(description)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\r\n\thandleChange(rowData, e) {\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourceAction = rowData;\r\n\t\t\tthis.sourceAction.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourceAction.isActive == false;\r\n\t\t\tthis.ataSubChapter1Service.updateATASubChapter1(this.sourceAction).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceAction),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourceAction = rowData;\r\n\t\t\tthis.sourceAction.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourceAction.isActive == true;\r\n\t\t\tthis.ataSubChapter1Service.updateATASubChapter1(this.sourceAction).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceAction),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\topen(content) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourceAction = new ATASubChapter();\r\n\t\tthis.sourceAction.isActive = true;\r\n\t\tthis.ataChapterName = \"\";\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\r\n\r\n\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\topenDelete(content, row) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourceAction = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenEdit(content, row) {\r\n\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourceAction = row;\r\n\t\t//this.ataChapterName = this.sourceAction.ataChapterName;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourceAction = row;\r\n\t\t//this.ataChapter_Name = row.ataChapterName;\r\n\t\t//this.ataChapterCategory = row.ataChapterCategory;\r\n\t\tthis.memo = row.memo;\r\n\t\tthis.createdBy = row.createdBy;\r\n\t\tthis.updatedBy = row.updatedBy;\r\n\t\tthis.createdDate = row.createdDate;\r\n\t\tthis.updatedDate = row.updatedDate;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenHelpText(content) {\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\r\n\topenHist(content, row) {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\r\n\t\tthis.sourceAction = row;\r\n\r\n\r\n\r\n\t\t//this.isSaving = true;\r\n\t\t// debugger;\r\n\t\tthis.ataSubChapter1Service.historyATASubChapter1(this.sourceAction.ataSubChapterId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\r\n\r\n\t}\r\n\r\n\r\n\teditItemAndCloseModel() {\r\n\r\n\t\t// debugger;\r\n\r\n\t\tthis.isSaving = true;\r\n\r\n\t\tif (this.isEditMode == false) {\r\n\t\t\tthis.sourceAction.createdBy = this.userName;\r\n\t\t\tthis.sourceAction.updatedBy = this.userName;\r\n\t\t\tthis.sourceAction.masterCompanyId = 1;\r\n\t\t\t//this.sourceAction.ataChapterCode = this.ataChapterCode;\r\n\t\t\tthis.ataSubChapter1Service.newATASubChapter1(this.sourceAction).subscribe(\r\n\t\t\t\trole => this.saveSuccessHelper(role),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.sourceAction.updatedBy = this.userName;\r\n\t\t\t//this.sourceAction.ataChapterCode = this.ataChapterCode;\r\n\t\t\tthis.sourceAction.masterCompanyId = 1;\r\n\t\t\tthis.ataSubChapter1Service.updateATASubChapter1(this.sourceAction).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceAction),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourceAction.updatedBy = this.userName;\r\n\t\tthis.ataSubChapter1Service.deleteATASubChapter1(this.sourceAction.ataSubChapterId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourceAction),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\t\r\n\r\n\t//partnmId(event) {\r\n\t//\t//debugger;\r\n\t//\tfor (let i = 0; i < this.actionamecolle.length; i++) {\r\n\t//\t\tif (event == this.actionamecolle[i][0].ataChapterName) {\r\n\t//\t\t\t//alert(\"Action Name already Exists\");\r\n\t//\t\t\tthis.disableSave = true;\r\n\t//\t\t\tthis.selectedActionName = event;\r\n\t//\t\t}\r\n\t//\t}\r\n\t//}\r\n\r\n\t//filterAtamains(event) {\r\n\r\n\t//\tthis.localCollection = [];\r\n\t//\tfor (let i = 0; i < this.allATAMaininfo.length; i++) {\r\n\t//\t\tlet ataChapterName = this.allATAMaininfo[i].ataSubChapter1Id;\r\n\t//\t\tif (ataChapterName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t//\t\t\tthis.actionamecolle.push([{\r\n\t//\t\t\t\t\"ataSubChapter1Id\": this.allATAMaininfo[i].ataSubChapter1Id,\r\n\t//\t\t\t\t\"ataChapterName\": ataChapterName\r\n\t//\t\t\t}]),\r\n\t//\t\t\t\tthis.localCollection.push(ataChapterName);\r\n\t//\t\t}\r\n\t//\t}\r\n\t//}\r\n\r\n\tdismissModel() {\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tprivate saveCompleted(user?: ATASubChapter) {\r\n\t\tthis.isSaving = false;\r\n\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\tprivate saveSuccessHelper(role?: ATASubChapter) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n\t\tthis.loadData();\r\n\r\n\t}\r\n\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\r\n\tprivate getDismissReason(reason: any): string {\r\n\t\tif (reason === ModalDismissReasons.ESC) {\r\n\t\t\treturn 'by pressing ESC';\r\n\t\t} else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n\t\t\treturn 'by clicking on a backdrop';\r\n\t\t} else {\r\n\t\t\treturn `with: ${reason}`;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/ata-sub-chapter1/ata-sub-chapter1.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { AtaSubChapter2Service } from '../../services/atasubchapter2.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { ATASubChapter2 } from '../../models/atasubchapter2.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ATAMain } from '../../models/atamain.model';\r\nimport { AtaMainService } from '../../services/atamain.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { ATAChapter } from '../../models/atachapter.model';\r\n\r\n@Component({\r\n\tselector: 'app-ata-sub-chapter2',\r\n\ttemplate: require('./ata-sub-chapter2.component.html'),\r\n\tstyles: [require('./ata-sub-chapter2.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** AtaSubChapter2 component*/\r\nexport class AtaSubChapter2Component implements OnInit, AfterViewInit {\r\n\tmemo: any = \"\";\r\n\tcreatedBy: any = \"\";\r\n\tupdatedBy: any = \"\";\r\n\tcreatedDate: any = \"\";\r\n\tupdatedDate: any = \"\";\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\tActive: string = \"Active\";\r\n\tselectedActionName: any;\r\n\tdisableSave: boolean;\r\n\r\n\t/** AtaSubChapter1 ctor */\r\n\tngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.atamaindata();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-ata-sub-chapter2';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t}\r\n\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\r\n\tdisplayedColumns = ['memo','createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n\tdataSource: MatTableDataSource<ATASubChapter2>;\r\n\tallATAMaininfo: ATASubChapter2[] = [];\r\n\tallComapnies: MasterCompany[] = [];\r\n\tprivate isSaving: boolean;\r\n\tallATAMaininfo1: ATAChapter[];\r\n\tpublic sourceAction: ATASubChapter2;\r\n\tpublic auditHisory: AuditHistory[] = [];\r\n\tprivate bodyText: string;\r\n\tloadingIndicator: boolean;\r\n\tcloseResult: string;\r\n\tselectedColumn: ATASubChapter2[];\r\n\tselectedColumns: any[];\r\n\tcols: any[];\r\n\ttitle: string = \"Create\";\r\n\tid: number;\r\n\terrorMessage: any;\r\n\tmodal: NgbModalRef;\r\n\tataChapterName: string;\r\n\tfilteredBrands: any[];\r\n\tlocalCollection: any[] = [];\r\n\r\n\t/** Actions ctor */\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, public ataservice: AtaMainService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public ataSubChapter2Service: AtaSubChapter2Service, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\t\t//this.displayedColumns.push('action');\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\tthis.sourceAction = new ATASubChapter2();\r\n\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\tpublic allWorkFlows: ATASubChapter2[] = [];\r\n\r\n\tprivate loadData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.ataSubChapter2Service.getAtaSubChapter2List().subscribe(\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t\tthis.cols = [\r\n\t\t\t//{ field: 'ataMainId', header: 'ATAMain Id' },\r\n\t\t\t//{ field: 'ataChapterName', header: 'ATA Chapter Name' },\r\n\t\t\t//{ field: 'ataChapterCategory', header: 'ATA Chapter Category' },\r\n\t\t\t{ field: 'memo', header: 'Memo' },\r\n\t\t\t{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t\t{ field: 'updatedDate', header: 'Updated Date' },\r\n\t\t\t{ field: 'createdDate', header: 'createdDate' }\r\n\t\t];\r\n\r\n\t\tthis.selectedColumns = this.cols;\r\n\r\n\t}\r\n\r\n\tprivate loadMasterCompanies() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\tprivate atamaindata() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.ataservice.getAtaMainList().subscribe(\r\n\t\t\tresults => this.onSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\r\n\tprivate onSuccessful(getAtaMainList: ATAChapter[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\t//this.dataSource.data = getAtaMainList;\r\n\t\tthis.allATAMaininfo1 = getAtaMainList;\r\n\t}\r\n\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\r\n\tprivate refresh() {\r\n\t\t// Causes the filter to refresh there by updating with recently added data.\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\tprivate onDataLoadSuccessful(getAtaSubChapter2List: ATASubChapter2[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getAtaSubChapter2List;\r\n\t\tthis.allATAMaininfo = getAtaSubChapter2List;\r\n\t}\r\n\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n\t}\r\n\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\r\n\thandleChange(rowData, e) {\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourceAction = rowData;\r\n\t\t\tthis.sourceAction.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourceAction.isActive == false;\r\n\t\t\tthis.ataSubChapter2Service.updateATASubChapter2(this.sourceAction).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceAction),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourceAction = rowData;\r\n\t\t\tthis.sourceAction.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourceAction.isActive == true;\r\n\t\t\tthis.ataSubChapter2Service.updateATASubChapter2(this.sourceAction).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceAction),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\topen(content) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourceAction = new ATASubChapter2();\r\n\t\tthis.sourceAction.isActive = true;\r\n\t\tthis.ataChapterName = \"\";\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\r\n\r\n\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\topenDelete(content, row) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourceAction = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenEdit(content, row) {\r\n\r\n\t\tthis.isEditMode = true;\r\n\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourceAction = row;\r\n\t\t//this.ataChapterName = this.sourceAction.ataChapterName;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourceAction = row;\r\n\t\t//this.ataChapter_Name = row.ataChapterName;\r\n\t\t//this.ataChapterCategory = row.ataChapterCategory;\r\n\t\tthis.memo = row.memo;\r\n\t\tthis.createdBy = row.createdBy;\r\n\t\tthis.updatedBy = row.updatedBy;\r\n\t\tthis.createdDate = row.createdDate;\r\n\t\tthis.updatedDate = row.updatedDate;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenHelpText(content) {\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\r\n\topenHist(content, row) {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\r\n\t\tthis.sourceAction = row;\r\n\r\n\r\n\r\n\t\t//this.isSaving = true;\r\n\t\t// debugger;\r\n\t\tthis.ataSubChapter2Service.historyATASubChapter2(this.sourceAction.ataSubChapter2Id).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\r\n\r\n\t}\r\n\r\n\r\n\teditItemAndCloseModel() {\r\n\r\n\t\t// debugger;\r\n\r\n\t\tthis.isSaving = true;\r\n\r\n\t\tif (this.isEditMode == false) {\r\n\t\t\tthis.sourceAction.createdBy = this.userName;\r\n\t\t\tthis.sourceAction.updatedBy = this.userName;\r\n\t\t\tthis.sourceAction.masterCompanyId = 1;\r\n\t\t\t//this.sourceAction.ataChapterName = this.ataChapterName;\r\n\t\t\tthis.ataSubChapter2Service.newATASubChapter2(this.sourceAction).subscribe(\r\n\t\t\t\trole => this.saveSuccessHelper(role),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.sourceAction.updatedBy = this.userName;\r\n\t\t\t//this.sourceAction.ataChapterName = this.ataChapterName;\r\n\t\t\tthis.sourceAction.masterCompanyId = 1;\r\n\t\t\tthis.ataSubChapter2Service.updateATASubChapter2(this.sourceAction).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceAction),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourceAction.updatedBy = this.userName;\r\n\t\tthis.ataSubChapter2Service.deleteATASubChapter2(this.sourceAction.ataSubChapter2Id).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourceAction),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\teventHandler(event) {\r\n\t\tlet value = event.target.value.toLowerCase();\r\n\t\tif (this.selectedActionName) {\r\n\t\t\tif (value == this.selectedActionName.toLowerCase()) {\r\n\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\tthis.disableSave = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.disableSave = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//partnmId(event) {\r\n\t//\t//debugger;\r\n\t//\tfor (let i = 0; i < this.actionamecolle.length; i++) {\r\n\t//\t\tif (event == this.actionamecolle[i][0].ataChapterName) {\r\n\t//\t\t\t//alert(\"Action Name already Exists\");\r\n\t//\t\t\tthis.disableSave = true;\r\n\t//\t\t\tthis.selectedActionName = event;\r\n\t//\t\t}\r\n\t//\t}\r\n\t//}\r\n\r\n\t//filterAtamains(event) {\r\n\r\n\t//\tthis.localCollection = [];\r\n\t//\tfor (let i = 0; i < this.allATAMaininfo.length; i++) {\r\n\t//\t\tlet ataChapterName = this.allATAMaininfo[i].ataChapterName;\r\n\t//\t\tif (ataChapterName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t//\t\t\tthis.actionamecolle.push([{\r\n\t//\t\t\t\t\"ataMainId\": this.allATAMaininfo[i].ataMainId,\r\n\t//\t\t\t\t\"ataChapterName\": ataChapterName\r\n\t//\t\t\t}]),\r\n\t//\t\t\t\tthis.localCollection.push(ataChapterName);\r\n\t//\t\t}\r\n\t//\t}\r\n\t//}\r\n\r\n\tdismissModel() {\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tprivate saveCompleted(user?: ATASubChapter2) {\r\n\t\tthis.isSaving = false;\r\n\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\tprivate saveSuccessHelper(role?: ATASubChapter2) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n\t\tthis.loadData();\r\n\r\n\t}\r\n\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\r\n\tprivate getDismissReason(reason: any): string {\r\n\t\tif (reason === ModalDismissReasons.ESC) {\r\n\t\t\treturn 'by pressing ESC';\r\n\t\t} else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n\t\t\treturn 'by clicking on a backdrop';\r\n\t\t} else {\r\n\t\t\treturn `with: ${reason}`;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/ata-sub-chapter2/ata-sub-chapter2.component.ts","import { Component, ViewChild, OnInit, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { ATAMain } from '../../models/atamain.model';\r\nimport { AtaMainService } from '../../services/atamain.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { MasterCompany } from '../../models/mastercompany.model'\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { MessageSeverity, AlertService } from '../../services/alert.service';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { WarehouseService } from '../../services/warehouse.service';\r\nimport { LocationService } from '../../services/location.service';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { Site } from '../../models/site.model';\r\nimport { Warehouse } from '../../models/warehouse.model';\r\nimport { Location } from '../../models/location.model';\r\nimport { TreeNode, MenuItem } from 'primeng/api';\r\nimport { LegalEntityService } from '../../services/legalentity.service';\r\n\r\n@Component({\r\n    selector: 'app-location',\r\n    template: require('./location.component.html'),\r\n\tstyles: [require('./location.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** location component*/\r\nexport class LocationComponent implements OnInit, AfterViewInit {\r\n\tdisableSaveLocationName: boolean;\r\n\r\n\tpublic sourceLocation: any = {};\r\n\r\n\taddressId: any;\r\n\tlocationId: any;\r\n\r\n\r\n\tmemo: any = \"\";\r\n\r\n\taddress1: any;\r\n\taddress2: any;\r\n\taddress3: any;\r\n\tcity: any;\r\n\tstate: any;\r\n\tcountry: any;\r\n\tpostalCode: any;\r\n\r\n\tcreatedBy: any = \"\";\r\n\tupdatedBy: any = \"\";\r\n\tcreatedDate: any = \"\";\r\n\tupdatedDate: any = \"\";\r\n\r\n\tcountrycollection: any;\r\n\tcountryName: string;\r\n\tallCountryinfo: any[];\r\n\tallATAMaininfo: ATAMain[] = [];\r\n\tlocalCollection: any[] = [];\r\n\r\n\tsiteId: any;\r\n\twarehouseId: any;\r\n\r\n\twarehouseName: any;\r\n\twarehouse_Name: any = \"\";\r\n\tsiteName: any;\r\n\r\n\tname: any;\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\tdataSource: MatTableDataSource<any>;\r\n\tshowLable: boolean;\r\n\tcloseCmpny: boolean = true;\r\n\tloadingIndicator: boolean;\r\n\tmodal: NgbModalRef;\r\n\taction_name: any = \"\";\r\n\tprivate isSaving: boolean;\r\n\tactionName: string;\r\n\tallComapnies: MasterCompany[] = [];\r\n\tpublic auditHisory: AuditHistory[] = [];\r\n\tallActions: Location[] = [];\r\n\tdisplayedColumns = ['locationId', 'name', 'warehouseName', 'siteName', 'address1', 'address2', 'address3', 'city', 'stateOrProvince', 'country', 'postalCode', 'memo'];\r\n\tselectedColumn: Location[];\r\n\tselectedColumns: any[];\r\n\tcols: any[];\r\n\tlocation_Name: any = \"\";\r\n\tallLocations: any[];\r\n\tstateOrProvince: any;\r\n    allSites: Site[];\r\n    allWareHouses: any[];\r\n    allAddress: any;\r\n    showAddress: boolean;\r\n    gridData: TreeNode[];//Managemnt\r\n\tgridData1: TreeNode[];//Managemnt\r\n\tgridData2: TreeNode[];//Managemnt\r\n\tcols1: any[];\r\n    localSelectedManagement: any[] = [];\r\n    selectedManagementValues: any;\r\n    index: any;\r\n    selectedNodes3: any;\r\n    selectedNodeTest: any;\r\n    localManagementSiteCollection: any;\r\n\tallManagemtninfo: any[];\r\n\tlocalManagementLocationEditCollection: TreeNode[];\r\n    showManagement: boolean;\r\n\tActive: string = \"Active\";\r\n\tactionamecolle: any[] = [];\r\n    \r\n    localWareHouseManagementWarehouseCollection: any;\r\n\tdisableSaveManufacturer: boolean = false;;\r\n    selectedLocation: any;\r\n    locationName: any;\r\n\r\n\tngOnInit(): void\r\n\t{\r\n\t\tthis.cols = [\r\n\t\t\t\r\n\t\t\t{ field: 'name', header: 'Location Name' },\r\n\t\t\t{ field: 'warehouseName', header: 'Warehouse Name' },\r\n\t\t\t{ field: 'siteName', header: 'Site Name' },\r\n\t\t\t{ field: 'address1', header: 'Address Line 1' },\r\n\t\t\t{ field: 'address2', header: 'Address Line 2' },\r\n\t\t\t{ field: 'address3', header: 'Address Line 3' },\r\n\t\t\t{ field: 'city', header: 'City' },\r\n\t\t\t{ field: 'stateOrProvince', header: 'State' },\r\n\t\t\t{ field: 'country', header: 'Country' },\r\n\t\t\t{ field: 'postalCode', header: 'Zip Code' },\r\n\t\t\t{ field: 'memo', header: 'memo' }\r\n\t\t\t//{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t//{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t\t//{ field: 'updatedDate', header: 'Updated Date' },\r\n\t\t\t//{ field: 'createdDate', header: 'createdDate' }\r\n\t\t];\r\n\t\tthis.loadData();\r\n        this.loadSiteData();\r\n        this.loadManagementdata(); //Calling Management Data\r\n\t//\tthis.loadWareHouseData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-location';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\t/** location ctor */\r\n    constructor(public manageMentService: LegalEntityService,public wareHouseService: WarehouseService,public workFlowtService1: SiteService,private breadCrumb: SingleScreenBreadcrumbService, private http: HttpClient, public ataservice: AtaMainService, private changeDetectorRef: ChangeDetectorRef, private router: Router, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: LocationService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\tthis.sourceLocation = new Location();\r\n\r\n\t}\r\n\r\n\tclosethis() {\r\n\t\tthis.closeCmpny = false;\r\n\t}\r\n\r\n\thandleChange(rowData, e) {\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourceLocation = rowData;\r\n\t\t\tthis.sourceLocation.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourceLocation.isActive == false;\r\n\t\t\tthis.workFlowtService.updateLocation(this.sourceLocation).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceLocation),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourceLocation = rowData;\r\n\t\t\tthis.sourceLocation.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourceLocation.isActive == true;\r\n\t\t\tthis.workFlowtService.updateLocation(this.sourceLocation).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceLocation),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n\tpublic allWorkFlows: Location[] = [];\r\n\r\n\tprivate loadData() { //retrive Location Data\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.workFlowtService.getLocationList().subscribe(\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t\t//this.cols = [\r\n\t\t//\t{ field: 'locationId', header: 'Location Id' },\r\n\t\t//\t{ field: 'name', header: 'Location Name' },\r\n\t\t//\t{ field: 'memo', header: 'Memo' },\r\n\t\t//\t{ field: 'createdBy', header: 'Created By' },\r\n\t\t//\t{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t//\t{ field: 'updatedDate', header: 'Updated Date' },\r\n\t\t//\t{ field: 'createdDate', header: 'createdDate' }\r\n\t\t//];\r\n\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\r\n\tManufacturerdescription(event) {\r\n\t\t//\r\n\t\tif (this.allLocations) {\r\n\r\n\t\t\tfor (let i = 0; i < this.actionamecolle.length; i++) {\r\n\t\t\t\tif (event == this.actionamecolle[i][0].locationName) {\r\n\t\t\t\t\t//this.sourceLocation.name = this.allLocations[i][0].name;\r\n\t\t\t\t\tthis.disableSaveManufacturer = true;\r\n\r\n\t\t\t\t\tthis.selectedLocation = event;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tManufacturerHandler(event) //auto suzition start hear and value will pass to \r\n\t{\r\n\r\n\t\tif (event.target.value != \"\") {\r\n\t\t\tlet value = event.target.value.toLowerCase();\r\n\t\t\tif (this.selectedLocation) {\r\n\t\t\t\tif (value == this.selectedLocation.toLowerCase()) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disableSaveManufacturer = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.disableSaveManufacturer = false;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tfiltermanufacturer(event) // will call when we click droup down button\r\n\t{\r\n\r\n\t\tthis.localCollection = [];\r\n\t\tfor (let i = 0; i < this.allLocations.length; i++) {\r\n\t\t\tlet locationName = this.allLocations[i].name;\r\n\t\t\tif (locationName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\tthis.actionamecolle.push([{\r\n\t\t\t\t\t\"locationId\": this.allLocations[i].locationId,\r\n\t\t\t\t\t\"locationName\": locationName\r\n\t\t\t\t}]),\r\n\t\t\t\t\tthis.localCollection.push(locationName)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprivate loadSiteData()  //retriving SIte Information\r\n\t{\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.workFlowtService1.getSiteList().subscribe(   //Getting Site List Hear\r\n\t\t\tresults => this.onSaiteDataLoadSuccessful(results[0]), //Pasing first Array and calling Method\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\tprivate onSaiteDataLoadSuccessful(getSiteList: Site[]) { //Storing Site Data\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getSiteList; //need\r\n\t\tthis.allSites = getSiteList; //Contain first array of Loaded table Data will put in Html as [value]\r\n\t\t\r\n\t}\r\n\r\n\tsiteValueChange(data) //Site Valu Selection in Form\r\n\t{\r\n\t\tthis.showAddress = true;\t\r\n\t\tconsole.log(this.siteId);\r\n\r\n\t\tif (this.sourceLocation.siteId) {\r\n\t\t\tthis.workFlowtService.getAddressDate(this.sourceLocation.siteId).subscribe( //calling and Subscribing for Address Data\r\n\t\t\t\tresults => this.addressDataArray(results[0]), //sending Address\r\n\t\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t\t);\r\n\r\n\t\t\tthis.workFlowtService.getWareHouseDate(this.sourceLocation.siteId).subscribe( //calling and Subscribing for Address Data\r\n\t\t\t\tresults => this.onDataLoadWareHouse(results), //sending Address\r\n\t\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\twareHouseValueChange(data)\r\n\t{\r\n\t\tthis.showManagement = true;\r\n\r\n\t\tthis.workFlowtService.getManagementWareHouseData(data).subscribe(\r\n\t\t\tdata2 => {\r\n\t\t\t\tthis.localWareHouseManagementWarehouseCollection = data2; //local SiteManagement Site Data for Site Date Selected\r\n\t\t\t\tthis.gridData2 = this.makeNestedObj1(this.localWareHouseManagementWarehouseCollection, this.allManagemtninfo, null);\r\n\t\t\t\tthis.selectedNodeTest = this.gridData2;\r\n\t\t\t})\r\n\r\n\t\tconsole.log(data);\r\n\t\tconsole.log(this.warehouseId);\r\n\t}\r\n\r\n\tprivate onDataLoadWareHouse(getWarehouseList: any) { //Storing WareHouse Data\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\t//this.dataSource.data = getWarehouseList; //cha\r\n\t\tthis.allWareHouses = getWarehouseList; //cha\r\n\r\n\t}\r\n\r\n\taddressDataArray(data: any) //Getting Address Based on Change\r\n\t{\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tif (data) {\r\n\t\t\tthis.allAddress = data;\r\n\t\t\tthis.address1 = data.address1;\r\n\t\t\tthis.address2 = data.address2;\r\n\t\t\tthis.address3 = data.address3;\r\n\t\t\tthis.city = data.city;\r\n\t\t\tthis.country = data.country;\r\n\t\t\tthis.postalCode = data.postalCode;\r\n\t\t\tthis.stateOrProvince = data.stateOrProvince;\r\n\t\t}\r\n\t\t//Storing Address Details\r\n\r\n\t}\r\n\r\n\t//private loadWareHouseData() { //Retriving WareHouse Data from Service\r\n\t//\tthis.alertService.startLoadingMessage();\r\n\t//\tthis.loadingIndicator = true;\r\n\r\n\t//\tthis.wareHouseService.getWarehouseList().subscribe( //change\r\n\t//\t\tresults => this.onDataLoadWareHouse(results[0]),\r\n\t//\t\terror => this.onDataLoadFailed(error)\r\n\t//\t);\r\n\t//}\r\n\r\n\t\r\n\r\n    private loadManagementdata() //Loading Management Structure Data\r\n    {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.manageMentService.getManagemententity().subscribe(\r\n            results => this.onManagemtntdataLoad(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n    private onManagemtntdataLoad(getAtaMainList: any[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getAtaMainList;\r\n        this.allManagemtninfo = getAtaMainList;\r\n        //debugger;\r\n        if (this.allManagemtninfo) {\r\n            this.gridData = this.makeNestedObj(this.allManagemtninfo, null);\r\n        }\r\n\r\n        this.cols1 = [\r\n            { field: 'code', header: 'Code' },\r\n            { field: 'description', header: 'Description' },\r\n            { field: 'legalEntityId', header: 'ID' },\r\n        ];\r\n    }\r\n\r\n    makeNestedObj(arr, parent) {\r\n        var out = []\r\n        for (var i in arr) {\r\n            if (arr[i].parentId == parent) {\r\n                var children = this.makeNestedObj(arr, arr[i].managementStructureId)\r\n                arr[i] = { \"data\": arr[i] };\r\n                if (children.length) {\r\n                    arr[i].children = children\r\n                }\r\n                out.push(arr[i])\r\n            }\r\n        }\r\n        return out\r\n\t}\r\n\r\n\tmakeNestedObj1(child, arr, parent) {\r\n\r\n\t\tvar out = []\r\n\t\tif (child) {\r\n\t\t\tfor (var i = 0; i < child.length; i++)\r\n\t\t\t{\r\n\t\t\t\tfor (var j = 0; j < arr.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (arr[j].data)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (child[i].managementStructureId == arr[j].data.managementStructureId) {\r\n\t\t\t\t\t\t\tarr[j].data.managementLocationId = child[i].managementLocationId;\r\n\t\t\t\t\t\t\tarr[j].data.locationId = child[i].locationId;\r\n\t\t\t\t\t\t\tout.push(arr[j]);\r\n\t\t\t\t\t\t\tconsole.log(arr[j].data);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (child[i].managementStructureId == arr[j].managementStructureId)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\tarr[j].data.managementLocationId = child[i].managementLocationId;\r\n\t\t\t\t\t\t\tarr[j].data.locationId = child[i].locationId;\r\n\t\t\t\t\t\t\tout.push(arr[j]);\r\n\t\t\t\t\t\t\tconsole.log(arr[j].data);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn out;\r\n\t}\r\n\r\n    nodeSelect(event) {\r\n        debugger;\r\n        //event.node = selected node\r\n        console.log(\"selected node\", event, event.node);\r\n    }\r\n\r\n    managementStructureClick(data) {\r\n        console.log(this.localSelectedManagement);\r\n    }\r\n\r\n\r\n\t//ApplyFilter\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\r\n\r\n\t//Refresh\r\n\tprivate refresh() {\r\n\t\t// Causes the filter to refresh there by updating with recently added data.\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\r\n\t\r\n\r\n\r\n\t//OnDataLoadSuccessful\r\n\tprivate onDataLoadSuccessful(getLocationList: any[]) {\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getLocationList;\r\n\t\tthis.allLocations = getLocationList;\r\n\r\n\t\t//console.log(this.allActions);\r\n\t}\r\n\r\n\t//OnDataLoadFailed\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\r\n\t//OnDataMasterCompaniesLoadSuccessful\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\r\n\t\r\n\r\n\r\n\t//OnHistoryLoadSuccessful\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\t//LoadMasterCompanies\r\n\tprivate loadMasterCompanies() {\r\n\r\n\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t//SaveCompleted\r\n\tprivate saveCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\r\n\t//Open\r\n\topen(content) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isSaving = true;\r\n\t\t\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.loadManagementdata(); //Calling Management Data\r\n\t\tthis.selectedNodeTest = []; //while Open new Node Data Should Be Empty\r\n\t\tthis.localCollection = [];\r\n\t\tthis.disableSaveManufacturer = false;\r\n\t\tthis.sourceLocation = {};\r\n\t\tthis.address1 = \"\";\r\n\t\tthis.address2 = \"\";\r\n\t\tthis.address3 = \"\";\r\n\t\tthis.city = \"\";\r\n\t\tthis.country = \"\";\r\n\t\tthis.postalCode = \"\";\r\n\t\tthis.stateOrProvince = \"\";\r\n\t\tthis.name = \"\";\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\t//OpenDelete\r\n\topenDelete(content, row) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourceLocation = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\t//OpenEdit\r\n\topenEdit(content, row) {\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.disableSaveManufacturer = false;\r\n\t\tthis.sourceLocation = row;\r\n\t\tthis.showManagement = true;\r\n\t\tif (row.siteId) {\r\n\t\t\tthis.siteValueChange(row.siteId);\r\n\t\t}\r\n\t\tthis.name = this.sourceLocation.name;\r\n\r\n\t\t//Getting ManagementSite Data\r\n\t\tthis.workFlowtService.getManagementLocationEditData(this.sourceLocation.locationId).subscribe(data11 => {\r\n\t\t\tthis.localManagementLocationEditCollection = data11; //local SiteManagement Data for Edit Collection\r\n\t\t\tif (this.localManagementLocationEditCollection)\r\n\t\t\t{\r\n\t\t\t\tif (this.gridData) {\r\n\t\t\t\t\t//this.gridData = this.makeNestedObj(this.localManagementLocationEditCollection, null);\r\n\t\t\t\t\tthis.gridData1 = this.makeNestedObj1(this.localManagementLocationEditCollection, this.allManagemtninfo, null);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.gridData = this.makeNestedObj(this.allManagemtninfo, null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//this.selectedNodeTest = this.localManagementLocationEditCollection;\r\n\t\t\tthis.selectedNodeTest = this.gridData1;\r\n\t\t})\r\n\t\t\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//OpenHist\r\n\topenHist(content, row) {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\r\n\t\tthis.sourceLocation = row;\r\n\t\tthis.workFlowtService.historyLocation(this.sourceLocation.locationId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t}\r\n\r\n\t//OpenView\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourceLocation = row;\r\n\t\tthis.locationId = row.LocationId;\r\n\t\tthis.location_Name = row.name;\r\n\t\tthis.warehouseName = row.warehouseName;\r\n\t\tthis.siteName = row.siteName;\r\n\t\tthis.address1 = row.address1;\r\n\t\tthis.address2 = row.address2;\r\n\t\tthis.address3 = row.address3;\r\n\t\tthis.city = row.city;\r\n\t\tthis.stateOrProvince = row.stateOrProvince;\r\n\t\tthis.country = row.country;\r\n\t\tthis.postalCode = row.postalCode;\r\n\t\tthis.memo = row.memo;\r\n\t\tthis.createdBy = row.createdBy;\r\n\t\tthis.updatedBy = row.updatedBy;\r\n\t\tthis.createdDate = row.createdDate;\r\n\t\tthis.updatedDate = row.updatedDate;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//OpenHelpText\r\n\topenHelpText(content) {\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//DeleteItemAndCloseModel\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourceLocation.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deleteLocation(this.sourceLocation.locationId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourceLocation),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\t//GetUserName\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\r\n\r\n\t//SaveFailedHelper\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured while saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    public saveManagement(locationId, data1) //retriving SiteManagement Array\r\n    {\r\n        debugger;\r\n        for (let i = 0; i < data1.length; i++) {\r\n            if (data1[i].data.managementStructureId != null) {\r\n                data1[i].data.locationId = locationId;\r\n                this.workFlowtService.newManagementSite(data1[i].data).subscribe(data11 => {\r\n                    this.localManagementSiteCollection = data11; //local SiteManagement Data\r\n                })\r\n            }\r\n\t\t}\r\n\t\tthis.loadData();\r\n    }\r\n\r\n\r\n\t//EditItem\r\n\teditItemAndCloseModel() {\r\n\r\n\t\t// debugger;\r\n\r\n\t\tthis.isSaving = true;\r\n\r\n\t\tif (this.isEditMode == false)\r\n\t\t{\r\n\t\t\tthis.showAddress = false;\r\n\t\t\tthis.showManagement = false;\r\n\t\t\tthis.sourceLocation.createdBy = this.userName;\r\n\t\t\tthis.sourceLocation.updatedBy = this.userName;\r\n\t\t\tthis.sourceLocation.masterCompanyId = 1;\r\n\t\t\tthis.sourceLocation.name = this.name;\r\n            this.workFlowtService.newLocation(this.sourceLocation).subscribe(data => {\r\n                if (data != null) {\r\n                    this.saveManagement(data.locationId, this.selectedNodeTest); //pushing Site Management Need Site Value so after getting SiteId we are calling\r\n\r\n                }\r\n\t\t\t})\r\n\t\t\tthis.loadData();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.showAddress = true;\r\n\t\t\tthis.showManagement = true;\r\n\t\t\tthis.sourceLocation.updatedBy = this.userName;\r\n\t\t\tthis.sourceLocation.name = this.name;\r\n\t\t\tthis.sourceLocation.masterCompanyId = 1;\r\n\t\t\tthis.workFlowtService.updateLocation(this.sourceLocation).subscribe( //Update\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceLocation),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\r\n\t\t\tthis.workFlowtService.deleteManagementLocation(this.selectedNodeTest).subscribe(data => {\r\n\t\t\t\t//alert(\"getting delete\");\r\n\t\t\t});\r\n\t\t\tthis.saveManagement(this.selectedNodeTest[0].data.locationId, this.selectedNodeTest); // will call ManagementSite Edit Data\r\n\t\t\tthis.selectedNodeTest = []; //after Edit making empty\r\n\t\t}\r\n\r\n\t\tthis.modal.close();\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\t//SaveSuccessHelper\r\n    private saveSuccessHelper(role?: any)\r\n    {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\r\n\t//DismissModel\r\n    public dismissModel()\r\n    {\r\n\t\tthis.showAddress = false;\r\n\t\tthis.showManagement = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\t//SaveSuccessCompleted\r\n    private savesuccessCompleted(user?: any)\r\n    {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\t\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/location/location.component.ts","import { Component, ViewChild, OnInit, AfterViewInit, ChangeDetectorRef, Self } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { MasterCompany } from '../../models/mastercompany.model'\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { MessageSeverity, AlertService } from '../../services/alert.service';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { WarehouseService } from '../../services/warehouse.service';\r\nimport { LocationService } from '../../services/location.service';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { Shelf } from '../../models/shelf.model';\r\nimport { Site } from '../../models/site.model';\r\nimport { Warehouse } from '../../models/warehouse.model';\r\nimport { Location } from '../../models/location.model';\r\nimport { ShelfService } from '../../services/shelf.service';\r\nimport { TreeNode, MenuItem } from 'primeng/api';\r\nimport { LegalEntityService } from '../../services/legalentity.service';\r\n\r\n@Component({\r\n    selector: 'app-shelf',\r\n    template: require('./shelf.component.html'),\r\n\tstyles: [require('./shelf.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** shelf component*/\r\nexport class ShelfComponent {\r\n\r\n\tdisableSaveShelfName: boolean;\r\n\r\n\tpublic sourceShelf: any = {};\r\n\r\n\taddressId: any;\r\n\tlocationId: any;\r\n\r\n\r\n\tmemo: any = \"\";\r\n\r\n\taddress1: any;\r\n\taddress2: any;\r\n\taddress3: any;\r\n\tcity: any;\r\n\tstate: any;\r\n\tcountry: any;\r\n\tpostalCode: any;\r\n\r\n\tcreatedBy: any = \"\";\r\n\tupdatedBy: any = \"\";\r\n\tcreatedDate: any = \"\";\r\n\tupdatedDate: any = \"\";\r\n\r\n\r\n\tsiteId: any;\r\n\twarehouseId: any;\r\n\r\n\twarehouseName: any;\r\n\twarehouse_Name: any = \"\";\r\n\tsiteName: any;\r\n\r\n\tname: any;\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\tdataSource: MatTableDataSource<any>;\r\n\tshowLable: boolean;\r\n\tcloseCmpny: boolean = true;\r\n\tloadingIndicator: boolean;\r\n\tmodal: NgbModalRef;\r\n\taction_name: any = \"\";\r\n\tprivate isSaving: boolean;\r\n\tactionName: string;\r\n\tallComapnies: MasterCompany[] = [];\r\n\tpublic auditHisory: AuditHistory[] = [];\r\n\tallActions: Location[] = [];\r\n\tdisplayedColumns = ['locationId', 'name', 'wareHouseName', 'siteName', 'address1', 'address2', 'address3', 'city', 'stateOrProvince', 'country', 'postalCode', 'memo'];\r\n\tselectedColumn: Location[];\r\n\tselectedColumns: any[];\r\n\tcols: any[];\r\n\tshelf_Name: any = \"\";\r\n\tallshelfs: any[];\r\n\tstateOrProvince: any;\r\n\tallSites: Site[];\r\n\tallWareHouses: any[];\r\n\tallAddress: any;\r\n    allSelfs: any[];\r\n    shelfId: any;\r\n    location_Name: any;\r\n    allLocations: any;\r\n    showAddress: boolean;\r\n\tgridData: TreeNode[];//Managemnt\r\n\tgridData1: TreeNode[];//Managemnt\r\n\tgridData2: TreeNode[];//Managemnt\r\n    cols1: any[];\r\n    localSelectedManagement: any[] = [];\r\n    selectedManagementValues: any;\r\n    index: any;\r\n    selectedNodes3: any;\r\n    selectedNodeTest: any;\r\n    localManagementSiteCollection: any;\r\n    allManagemtninfo: any[];\r\n\tshelfInfo: Shelf;\r\n\tlocalManagementShelfEditCollection: TreeNode[];\r\n\tlocalManagementLocationCollection: any;\r\n\tshowManagement: boolean;\r\n\tActive: string = \"Active\";\r\n\tactionamecolle: any[] = [];\r\n\tdisableSaveManufacturer: boolean = false;;\r\n\tselectedShelf: any;\r\n\tlocalCollection: any[] = [];\r\n    shelfName: any;\r\n\tngOnInit(): void {\r\n\t\tthis.cols = [\r\n\t\t\t{ field: 'name', header: 'Shelf Name' },\r\n\t\t\t{ field: 'locationName', header: 'Location Name' },\r\n\t\t\t{ field: 'wareHouseName', header: 'Warehouse Name' },\r\n\t\t\t{ field: 'siteName', header: 'Site Name' },\r\n\t\t\t{ field: 'address1', header: 'Address Line 1' },\r\n\t\t\t{ field: 'address2', header: 'Address Line 2' },\r\n\t\t\t{ field: 'address3', header: 'Address Line 3' },\r\n\t\t\t{ field: 'city', header: 'City' },\r\n\t\t\t{ field: 'stateOrProvince', header: 'State' },\r\n\t\t\t{ field: 'country', header: 'Country' },\r\n\t\t\t{ field: 'postalCode', header: 'Zip Code' },\r\n\t\t\t{ field: 'memo', header: 'memo' }\r\n\t\t\t//{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t//{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t\t//{ field: 'updatedDate', header: 'Updated Date' },\r\n\t\t\t//{ field: 'createdDate', header: 'createdDate' }\r\n\t\t];\r\n\t\tthis.loadData();\r\n        this.loadSiteData();\r\n        this.loadManagementdata(); //Calling Management Data\r\n\t\t//\tthis.loadWareHouseData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-shelf';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\r\n    constructor(public manageMentService: LegalEntityService,public workFlowtService: ShelfService, public locationService: LocationService, public wareHouseService: WarehouseService, public siteService: SiteService, private breadCrumb: SingleScreenBreadcrumbService, private http: HttpClient, private changeDetectorRef: ChangeDetectorRef, private router: Router, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService)\r\n\t{\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\tthis.sourceShelf = new Shelf();\r\n\r\n\t}\r\n\r\n\tclosethis() {\r\n\t\tthis.closeCmpny = false;\r\n\t}\r\n\r\n\thandleChange(rowData, e) {\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourceShelf = rowData;\r\n\t\t\tthis.sourceShelf.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourceShelf.isActive == false;\r\n\t\t\tthis.workFlowtService.updateShelf(this.sourceShelf).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceShelf),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourceShelf = rowData;\r\n\t\t\tthis.sourceShelf.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourceShelf.isActive == true;\r\n\t\t\tthis.workFlowtService.updateShelf(this.sourceShelf).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceShelf),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n\tpublic allWorkFlows: Shelf[] = [];\r\n\r\n\r\n\tprivate loadData() { //retrive Location Data\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.workFlowtService.getShelfList().subscribe(\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\r\n\tprivate loadSiteData()  //retriving SIte Information\r\n\t{\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.siteService.getSiteList().subscribe(   //Getting Site List Hear\r\n\t\t\tresults => this.onSaiteDataLoadSuccessful(results[0]), //Pasing first Array and calling Method\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\tprivate onSaiteDataLoadSuccessful(getSiteList: Site[]) { //Storing Site Data\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getSiteList; //need\r\n\t\tthis.allSites = getSiteList; //Contain first array of Loaded table Data will put in Html as [value]\r\n\r\n\t}\r\n\r\n\tsiteValueChange(data) //Site Valu Selection in Form\r\n\t{\r\n\r\n\t\tthis.showAddress = true;\r\n\r\n\t\tif (this.sourceShelf.siteId) {\r\n\r\n\t\t\tthis.workFlowtService.getAddressDate(this.sourceShelf.siteId).subscribe( //calling and Subscribing for Address Data\r\n\t\t\t\tresults => this.addressDataArray(results[0]), //sending Address\r\n\t\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t\t);\r\n\r\n\t\t\tthis.workFlowtService.getWareHouseDate(this.sourceShelf.siteId).subscribe( //calling and Subscribing for WareHouse Data\r\n\t\t\t\tresults => this.onDataLoadWareHouse(results), //sending WareHouse\r\n\t\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t\t);\r\n\r\n\t\t\t\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\twareHouseValueChange(data)\r\n\t{\r\n\t\tconsole.log(this.sourceShelf.warehouseId);\r\n\t\tthis.workFlowtService.getLocationDate(this.sourceShelf.warehouseId).subscribe( //calling and Subscribing for Location Data\r\n\t\t\tresults => this.onDataLoadLocation(results), //sending Location\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tlocationValueChange(data)\r\n\t{\r\n\t\tthis.showManagement = true;\r\n\t\tthis.workFlowtService.getManagementLocationData(data).subscribe(\r\n\t\t\tdata2 => {\r\n\t\t\t\tthis.localManagementLocationCollection = data2; //local SiteManagement Site Data for Site Date Selected\r\n\t\t\t\tthis.gridData2 = this.makeNestedObj1(this.localManagementLocationCollection, this.allManagemtninfo, null);\r\n\t\t\t\tthis.selectedNodeTest = this.gridData2;\r\n\t\t\t})\r\n\t\tconsole.log(data);\r\n\t\tconsole.log(this.warehouseId);\r\n\t}\r\n\r\n\tprivate onDataLoadWareHouse(getWarehousList: any) { //Storing WareHouse Data\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allWareHouses = getWarehousList; //cha\r\n\r\n\t}\r\n\r\n\tprivate onDataLoadLocation(getLocationList: any) { //Storing WareHouse Data\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allLocations = getLocationList; //cha\r\n\r\n\t}\r\n\r\n\t\r\n\r\n\taddressDataArray(data: any) //Getting Address Based on Change\r\n\t{\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tif (data) {\r\n\t\t\tthis.allAddress = data;\r\n\t\t\tthis.address1 = data.address1;\r\n\t\t\tthis.address2 = data.address2;\r\n\t\t\tthis.address3 = data.address3;\r\n\t\t\tthis.city = data.city;\r\n\t\t\tthis.country = data.country;\r\n\t\t\tthis.postalCode = data.postalCode;\r\n\t\t\tthis.stateOrProvince = data.stateOrProvince;\r\n\t\t}\r\n\t\t//Storing Address Details\r\n\r\n    }\r\n\r\n\r\n    private loadManagementdata() //Loading Management Structure Data\r\n    {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.manageMentService.getManagemententity().subscribe(\r\n            results => this.onManagemtntdataLoad(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n    private onManagemtntdataLoad(getAtaMainList: any[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getAtaMainList;\r\n        this.allManagemtninfo = getAtaMainList;\r\n        //debugger;\r\n        if (this.allManagemtninfo) {\r\n            this.gridData = this.makeNestedObj(this.allManagemtninfo, null);\r\n        }\r\n\r\n        this.cols1 = [\r\n            { field: 'code', header: 'Code' },\r\n            { field: 'description', header: 'Description' },\r\n            { field: 'legalEntityId', header: 'ID' },\r\n        ];\r\n    }\r\n\r\n    makeNestedObj(arr, parent) {\r\n        var out = []\r\n        for (var i in arr) {\r\n            if (arr[i].parentId == parent) {\r\n                var children = this.makeNestedObj(arr, arr[i].managementStructureId)\r\n                arr[i] = { \"data\": arr[i] };\r\n                if (children.length) {\r\n                    arr[i].children = children\r\n                }\r\n                out.push(arr[i])\r\n            }\r\n        }\r\n        return out\r\n\t}\r\n\r\n\tmakeNestedObj1(child, arr, parent) {\r\n\r\n\t\tvar out = []\r\n\t\tif (child) {\r\n\t\t\tfor (var i = 0; i < child.length; i++) {\r\n\t\t\t\tfor (var j = 0; j < arr.length; j++) {\r\n\t\t\t\t\tif (arr[j].data) {\r\n\t\t\t\t\t\tif (child[i].managementStructureId == arr[j].data.managementStructureId) {\r\n\t\t\t\t\t\t\tarr[j].data.managementShelfId = child[i].managementShelfId;\r\n\t\t\t\t\t\t\tarr[j].data.shelfId = child[i].shelfId;\r\n\t\t\t\t\t\t\tout.push(arr[j]);\r\n\t\t\t\t\t\t\tconsole.log(arr[j].data);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (child[i].managementStructureId == arr[j].managementStructureId)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tarr[j].data.managementShelfId = child[i].managementShelfId;\r\n\t\t\t\t\t\t\tarr[j].data.shelfId = child[i].shelfId;\r\n\t\t\t\t\t\t\tout.push(arr[j]);\r\n\t\t\t\t\t\t\tconsole.log(arr[j].data);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn out;\r\n\t}\r\n\r\n    nodeSelect(event) {\r\n        debugger;\r\n        //event.node = selected node\r\n        console.log(\"selected node\", event, event.node);\r\n    }\r\n\r\n    managementStructureClick(data) {\r\n    //    this.localSelectedManagement.push(this.selectedNodeTest);\r\n        console.log(this.localSelectedManagement);\r\n\r\n    }\r\n\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\r\n\tManufacturerdescription(event) {\r\n\t\t//\r\n\t\tif (this.allSelfs) {\r\n\r\n\t\t\tfor (let i = 0; i < this.actionamecolle.length; i++) {\r\n\t\t\t\tif (event == this.actionamecolle[i][0].shelfName) {\r\n\t\t\t\t\t//this.sourceShelf.name = this.allSelfs[i][0].name;\r\n\t\t\t\t\tthis.disableSaveManufacturer = true;\r\n\t\t\t\t\tthis.selectedShelf = event;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tManufacturerHandler(event) //auto suzition start hear and value will pass to \r\n\t{\r\n\r\n\t\tif (event.target.value != \"\") {\r\n\t\t\tlet value = event.target.value.toLowerCase();\r\n\t\t\tif (this.selectedShelf) {\r\n\t\t\t\tif (value == this.selectedShelf.toLowerCase()) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disableSaveManufacturer = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.disableSaveManufacturer = false;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tfiltermanufacturer(event) // will call when we click droup down button\r\n\t{\r\n\r\n\t\tthis.localCollection = [];\r\n\t\tfor (let i = 0; i < this.allSelfs.length; i++) {\r\n\t\t\tlet shelf_Name = this.allSelfs[i].name;\r\n\t\t\tif (shelf_Name.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\tthis.actionamecolle.push([{\r\n\t\t\t\t\t\"shelfId\": this.allSelfs[i].shelfId,\r\n\t\t\t\t\t\"shelfName\": shelf_Name\r\n\t\t\t\t}]),\r\n\t\t\t\t\tthis.localCollection.push(shelf_Name)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//Refresh\r\n\tprivate refresh() {\r\n\t\t// Causes the filter to refresh there by updating with recently added data.\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\t//OnDataLoadSuccessful\r\n\tprivate onDataLoadSuccessful(getSelfList: any[]) {\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getSelfList;\r\n\t\tthis.allSelfs = getSelfList;\r\n\t\t\r\n\t}\r\n\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\r\n\t//OnHistoryLoadSuccessful\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.auditHisory = auditHistory;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//LoadMasterCompanies\r\n\tprivate loadMasterCompanies() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\r\n\t//SaveCompleted\r\n\tprivate saveCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\t\t}\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\t//Open\r\n\topen(content) {\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.loadManagementdata(); //Calling Management Data\r\n\t\tthis.selectedNodeTest = []; //while Open new Node Data Should Be Empty\r\n\t\tthis.disableSaveManufacturer = false;\r\n\t\tthis.sourceShelf = {};\r\n\r\n\t\tthis.address1 = \"\";\r\n\t\tthis.address2 = \"\";\r\n\t\tthis.address3 = \"\";\r\n\t\tthis.city = \"\";\r\n\t\tthis.country = \"\";\r\n\t\tthis.postalCode = \"\";\r\n\t\tthis.stateOrProvince = \"\";\r\n\r\n\t\tthis.name = \"\";\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//OpenDelete\r\n\topenDelete(content, row) {\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourceShelf = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//OpenEdit\r\n\topenEdit(content, row) {\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.showManagement = true;\r\n\t\tthis.disableSaveManufacturer = false;\r\n\t\tthis.sourceShelf = row;\r\n\t\tif (row.siteId)\r\n\t\t{\r\n\t\t\tthis.siteValueChange(row.siteId);\r\n\t\t\tthis.wareHouseValueChange(row.wareHouseId);\r\n\t\t\tthis.locationValueChange(row.locationId);\r\n\t\t}\r\n\t\tthis.name = this.sourceShelf.name;\r\n\r\n\t\t//Getting ManagementSite Data\r\n\t\tthis.workFlowtService.getManagementShelfEditData(this.sourceShelf.shelfId).subscribe(data11 => {\r\n\t\t\tthis.localManagementShelfEditCollection = data11; //local SiteManagement Data for Edit Collection\r\n\t\t\tif (this.localManagementShelfEditCollection) {\r\n\t\t\t\tif (this.gridData) {\r\n\t\t\t\t\t//this.gridData = this.makeNestedObj(this.localManagementShelfEditCollection, null);\r\n\t\t\t\t\tthis.gridData1 = this.makeNestedObj1(this.localManagementShelfEditCollection, this.allManagemtninfo, null);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.gridData = this.makeNestedObj(this.allManagemtninfo, null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.selectedNodeTest = this.gridData1;\r\n\t\t})\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenHist(content, row) {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.sourceShelf = row;\r\n\t\tthis.workFlowtService.historyShelf(this.sourceShelf.shelfId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t}\r\n\r\n\t//OpenView\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourceShelf = row;\r\n\t\tthis.shelfId = row.shelfId;\r\n\t\tthis.shelf_Name = row.name;\r\n\t\tthis.location_Name = row.locationName;\r\n\t\tthis.warehouseName = row.wareHouseName;\r\n\t\tthis.siteName = row.siteName;\r\n\t\tthis.address1 = row.address1;\r\n\t\tthis.address2 = row.address2;\r\n\t\tthis.address3 = row.address3;\r\n\t\tthis.city = row.city;\r\n\t\tthis.stateOrProvince = row.stateOrProvince;\r\n\t\tthis.country = row.country;\r\n\t\tthis.postalCode = row.postalCode;\r\n\t\tthis.memo = row.memo;\r\n\t\tthis.createdBy = row.createdBy;\r\n\t\tthis.updatedBy = row.updatedBy;\r\n\t\tthis.createdDate = row.createdDate;\r\n\t\tthis.updatedDate = row.updatedDate;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//OpenHelpText\r\n\topenHelpText(content) {\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//DeleteItemAndCloseModel\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourceShelf.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deleteShelf(this.sourceShelf.shelfId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourceShelf),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\t//GetUserName\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\r\n\t//SaveFailedHelper\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured while saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\r\n    public saveManagement(shelfId, data1) //retriving SiteManagement Array\r\n    {\r\n        debugger;\r\n        for (let i = 0; i < data1.length; i++) {\r\n            if (data1[i].data.managementStructureId != null) {\r\n                data1[i].data.shelfId = shelfId;\r\n                this.workFlowtService.newManagementShelf(data1[i].data).subscribe(data11 => {\r\n                    this.localManagementSiteCollection = data11; //local SiteManagement Data\r\n                })\r\n            }\r\n\t\t}\r\n\t\tthis.loadData();\r\n    }\r\n\t//EditItem\r\n\teditItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tif (this.isEditMode == false) {\r\n\t\t\tthis.showAddress = false;\r\n\t\t\tthis.showManagement = false;\r\n\t\t\tthis.sourceShelf.createdBy = this.userName;\r\n\t\t\tthis.sourceShelf.updatedBy = this.userName;\r\n\t\t\tthis.sourceShelf.masterCompanyId = 1;\r\n\t\t\tthis.sourceShelf.name = this.name;\r\n            this.workFlowtService.newShelf(this.sourceShelf).subscribe(data => {\r\n                this.shelfInfo = data;\r\n                if (data != null) {\r\n                    this.saveManagement(data.shelfId, this.selectedNodeTest); //pushing Site Management Need Site Value so after getting SiteId we are calling\r\n\r\n                }\r\n\t\t\t})\r\n\t\t\tthis.loadData();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.showAddress = true;\r\n\t\t\tthis.sourceShelf.updatedBy = this.userName;\r\n\t\t\tthis.sourceShelf.name = this.name;\r\n\t\t\tthis.sourceShelf.masterCompanyId = 1;\r\n\t\t\tthis.showManagement = true;\r\n\t\t\tthis.workFlowtService.updateShelf(this.sourceShelf).subscribe( //Update\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceShelf),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\r\n\t\t\tthis.workFlowtService.deleteManagementShelf(this.selectedNodeTest).subscribe(data => {\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\tthis.saveManagement(this.selectedNodeTest[0].data.shelfId, this.selectedNodeTest); // will call ManagementSite Edit Data\r\n\t\t\tthis.selectedNodeTest = []; //after Edit making empty\r\n\t\t}\r\n\r\n\t\tthis.modal.close();\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\t//SaveSuccessHelper\r\n\tprivate saveSuccessHelper(role?: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\r\n\t//DismissModel\r\n\tpublic dismissModel() {\r\n\t\tthis.showAddress = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.showManagement = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\t//SaveSuccessCompleted\r\n\tprivate savesuccessCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\r\n\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/shelf/shelf.component.ts","﻿import { Component, ViewChild, OnInit, AfterViewInit, ChangeDetectorRef, Self } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { MasterCompany } from '../../models/mastercompany.model'\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { MessageSeverity, AlertService } from '../../services/alert.service';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { WarehouseService } from '../../services/warehouse.service';\r\nimport { LocationService } from '../../services/location.service';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { Shelf } from '../../models/shelf.model';\r\nimport { Site } from '../../models/site.model';\r\nimport { Warehouse } from '../../models/warehouse.model';\r\nimport { Location } from '../../models/location.model';\r\nimport { ShelfService } from '../../services/shelf.service';\r\nimport { BinService } from '../../services/bin.service';\r\nimport { Bin } from '../../models/bin.model';\r\nimport { TreeNode, MenuItem } from 'primeng/api';\r\nimport { LegalEntityService } from '../../services/legalentity.service';\r\n\r\n@Component({\r\n\tselector: 'app-bin',\r\n\ttemplate: require('./bin.component.html'),\r\n\tstyles: [require('./bin.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** bin component*/\r\nexport class BinComponent {\r\n\tdisableSaveBinName: boolean;\r\n\r\n\tpublic sourceBin: any = {};\r\n\tallBins: Bin[] = [];\r\n\taddressId: any;\r\n\tlocationId: any;\r\n\r\n\r\n\tmemo: any = \"\";\r\n\r\n\taddress1: any;\r\n\taddress2: any;\r\n\taddress3: any;\r\n\tcity: any;\r\n\tstate: any;\r\n\tcountry: any;\r\n\tpostalCode: any;\r\n\r\n\tcreatedBy: any = \"\";\r\n\tupdatedBy: any = \"\";\r\n\tcreatedDate: any = \"\";\r\n\tupdatedDate: any = \"\";\r\n\r\n\tshelf_Name: any = \"\";\r\n\tsiteId: any;\r\n\twarehouseId: any;\r\n\r\n\twarehouseName: any;\r\n\twarehouse_Name: any = \"\";\r\n\tsiteName: any;\r\n\tshowManagement: boolean;\r\n\r\n\tname: any;\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\tdataSource: MatTableDataSource<any>;\r\n\tshowLable: boolean;\r\n\tcloseCmpny: boolean = true;\r\n\tloadingIndicator: boolean;\r\n\tmodal: NgbModalRef;\r\n\taction_name: any = \"\";\r\n\tprivate isSaving: boolean;\r\n\tactionName: string;\r\n\tallComapnies: MasterCompany[] = [];\r\n\tpublic auditHisory: AuditHistory[] = [];\r\n\tallActions: Location[] = [];\r\n\tdisplayedColumns = ['locationId', 'name', 'wareHouseName', 'siteName', 'address1', 'address2', 'address3', 'city', 'stateOrProvince', 'country', 'postalCode', 'memo'];\r\n\tselectedColumn: Location[];\r\n\tselectedColumns: any[];\r\n\tcols: any[];\r\n\tshelfName: any = \"\";\r\n\tbinName: any = \"\";\r\n\tallshelfs: any[];\r\n\tstateOrProvince: any;\r\n\tallSites: Site[];\r\n\t\r\n\tallWareHouses: any[];\r\n\tallAddress: any;\r\n\tallSelfs: any[];\r\n\tshelfId: any;\r\n\tbinId: any;\r\n\tgridData: TreeNode[];//Managemnt\r\n\tgridData1: TreeNode[];//Managemnt\r\n\tgridData2: TreeNode[];//Managemnt\r\n\tcols1: any[];\r\n\tlocalSelectedManagement: any[] = [];\r\n\tselectedManagementValues: any;\r\n\tindex: any;\r\n\tselectedNodes3: any;\r\n\tselectedNodeTest: any;\r\n\tlocalManagementSiteCollection: any;\r\n\tallManagemtninfo: any[];\r\n\tlocalManagementBinEditCollection: TreeNode[]=[];\r\n\tactionamecolle: any[] = [];\r\n\tlocation_Name: any;\r\n\tallLocations: any;\r\n    locationName: any;\r\n    allShelfs: any;\r\n    showAddress: boolean;\r\n\ttestLocalNodeSlect: any;\r\n\tActive: string = \"Active\";\r\n\tlocalManagementShelfCollection: any;\r\n\tlocalCollection: any[] = [];\r\n\tdisableSaveManufacturer: boolean = false;\r\n    selectedBin: any;\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.cols = [\r\n\t\t\t{ field: 'name', header: 'Bin Name' },\r\n\t\t\t{ field: 'shelfName', header: 'Shelf Name' },\r\n\t\t\t{ field: 'locationName', header: 'Location Name' },\r\n\t\t\t{ field: 'wareHouseName', header: 'Warehouse Name' },\r\n\t\t\t{ field: 'siteName', header: 'Site Name' },\r\n\t\t\t{ field: 'address1', header: 'Address Line 1' },\r\n\t\t\t{ field: 'address2', header: 'Address Line 2' },\r\n\t\t\t{ field: 'address3', header: 'Address Line 3' },\r\n\t\t\t{ field: 'city', header: 'City' },\r\n\t\t\t{ field: 'stateOrProvince', header: 'State' },\r\n\t\t\t{ field: 'country', header: 'Country' },\r\n\t\t\t{ field: 'postalCode', header: 'Zip Code' },\r\n\t\t\t{ field: 'memo', header: 'memo' }\r\n\t\t\t//{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t//{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t\t//{ field: 'updatedDate', header: 'Updated Date' },\r\n\t\t\t//{ field: 'createdDate', header: 'createdDate' }\r\n\t\t];\r\n\t\tthis.loadData();\r\n\t\tthis.loadSiteData();\r\n\t\tthis.loadManagementdata(); //Calling Management Data\r\n\t\t//\tthis.loadWareHouseData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-bin';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\t/** bin ctor */\r\n\tconstructor(public manageMentService: LegalEntityService,public workFlowtService: BinService, public shelfService: ShelfService, public locationService: LocationService, public wareHouseService: WarehouseService, public siteService: SiteService, private breadCrumb: SingleScreenBreadcrumbService, private http: HttpClient, private changeDetectorRef: ChangeDetectorRef, private router: Router, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\tthis.sourceBin = new Bin();\r\n\r\n\t}\r\n\r\n\tclosethis() {\r\n\t\tthis.closeCmpny = false;\r\n\t}\r\n\r\n\thandleChange(rowData, e) {\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourceBin = rowData;\r\n\t\t\tthis.sourceBin.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourceBin.isActive == false;\r\n\t\t\tthis.workFlowtService.updateBin(this.sourceBin).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceBin),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourceBin = rowData; \r\n\t\t\tthis.sourceBin.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourceBin.isActive == true;\r\n\t\t\tthis.workFlowtService.updateBin(this.sourceBin).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceBin),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n\tpublic allWorkFlows: Shelf[] = [];\r\n\r\n\r\n\tprivate loadData() { //retrive Location Data\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.workFlowtService.getBinList().subscribe(\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\r\n\tprivate loadSiteData()  //retriving SIte Information\r\n\t{\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.siteService.getSiteList().subscribe(   //Getting Site List Hear\r\n\t\t\tresults => this.onSaiteDataLoadSuccessful(results[0]), //Pasing first Array and calling Method\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\tprivate onSaiteDataLoadSuccessful(getSiteList: Site[]) { //Storing Site Data\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getSiteList; //need\r\n\t\tthis.allSites = getSiteList; //Contain first array of Loaded table Data will put in Html as [value]\r\n\t}\r\n\r\n\tsiteValueChange(data) //Site Valu Selection in Form\r\n\t{\r\n\t\tthis.showAddress = true;\r\n\t\tthis.allWareHouses = [];\r\n\t\tthis.allLocations = [];\r\n\t\tthis.allShelfs = [];\r\n\t\t\r\n\r\n\t\tconsole.log(this.siteId);\r\n\t\tif (this.sourceBin.siteId) {\r\n\r\n\t\t\tthis.workFlowtService.getAddressDate(this.sourceBin.siteId).subscribe( //calling and Subscribing for Address Data\r\n\t\t\t\tresults => this.addressDataArray(results[0]), //sending Address\r\n\t\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t\t);\r\n\r\n\t\t\tthis.workFlowtService.getWareHouseDate(this.sourceBin.siteId).subscribe( //calling and Subscribing for WareHouse Data\r\n\t\t\t\tresults => this.onDataLoadWareHouse(results), //sending WareHouse\r\n\t\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\twareHouseValueChange(data) {\r\n\t\tconsole.log(this.sourceBin.warehouseId);\r\n\t\tthis.workFlowtService.getLocationDate(this.sourceBin.warehouseId).subscribe( //calling and Subscribing for Location Data\r\n\t\t\tresults => this.onDataLoadLocation(results), //sending Location\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tlocationValueChange(data)\r\n\t{\r\n\t\tconsole.log(this.sourceBin.locationId);\r\n\t\tthis.workFlowtService.getShelfDate(this.sourceBin.locationId).subscribe( //calling and Subscribing for Location Data\r\n\t\t\tresults => this.onDataLoadShelf(results), //sending Location\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t\t\r\n\t}\r\n\r\n\tshelfValueChange(data)\r\n\t{\r\n\t\tthis.showManagement = true;\r\n\t\tthis.workFlowtService.getManagementShelfData(data).subscribe(\r\n\t\t\tdata2 => {\r\n\t\t\t\tthis.localManagementShelfCollection = data2; //local SiteManagement Site Data for Site Date Selected\r\n\t\t\t\tthis.gridData2 = this.makeNestedObj1(this.localManagementShelfCollection, this.allManagemtninfo, null);\r\n\t\t\t\tthis.selectedNodeTest = this.gridData2;\r\n\t\t\t})\r\n\t\tconsole.log(data);\r\n\t\t }\r\n\r\n\tprivate onDataLoadWareHouse(getWarehousList: any) { //Storing WareHouse Data\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allWareHouses = getWarehousList; //cha\r\n\r\n\t}\r\n\r\n\tprivate onDataLoadLocation(getLocationList: any) { //Storing WareHouse Data\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allLocations = getLocationList; //cha\r\n\r\n\t}\r\n\r\n\tonDataLoadShelf(getShelfList: any)\r\n\t{\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allShelfs = getShelfList; //cha\r\n\t}\r\n\r\n\r\n\r\n\taddressDataArray(data: any) //Getting Address Based on Change\r\n\t{\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tif (data) {\r\n\t\t\tthis.allAddress = data;\r\n\t\t\tthis.address1 = data.address1;\r\n\t\t\tthis.address2 = data.address2;\r\n\t\t\tthis.address3 = data.address3;\r\n\t\t\tthis.city = data.city;\r\n\t\t\tthis.country = data.country;\r\n\t\t\tthis.postalCode = data.postalCode;\r\n\t\t\tthis.stateOrProvince = data.stateOrProvince;\r\n\t\t}\r\n\t\t//Storing Address Details\r\n\r\n\t}\r\n\r\n\tManufacturerdescription(event) {\r\n\t\t//\r\n\t\tif (this.allBins) {\r\n\r\n\t\t\tfor (let i = 0; i < this.actionamecolle.length; i++) {\r\n\t\t\t\tif (event == this.actionamecolle[i][0].binName) {\r\n\t\t\t\t\t//this.sourceBin.name = this.allBins[i][0].name;\r\n\t\t\t\t\tthis.disableSaveManufacturer = true;\r\n\t\t\t\t\tthis.selectedBin = event;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tManufacturerHandler(event) //auto suzition start hear and value will pass to \r\n\t{\r\n\r\n\t\tif (event.target.value != \"\") {\r\n\t\t\tlet value = event.target.value.toLowerCase();\r\n\t\t\tif (this.selectedBin) {\r\n\t\t\t\tif (value == this.selectedBin.toLowerCase()) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disableSaveManufacturer = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.disableSaveManufacturer = false;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tfiltermanufacturer(event) // will call when we click droup down button\r\n\t{\r\n\r\n\t\tthis.localCollection = [];\r\n\t\tfor (let i = 0; i < this.allBins.length; i++) {\r\n\t\t\tlet binName = this.allBins[i].name;\r\n\t\t\tif (binName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\tthis.actionamecolle.push([{\r\n\t\t\t\t\t\"binId\": this.allBins[i].binId,\r\n\t\t\t\t\t\"binName\": binName\r\n\t\t\t\t}]),\r\n\t\t\t\t\tthis.localCollection.push(binName)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate loadManagementdata() //Loading Management Structure Data\r\n\t{\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.manageMentService.getManagemententity().subscribe(\r\n\t\t\tresults => this.onManagemtntdataLoad(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\r\n\tprivate onManagemtntdataLoad(getAtaMainList: any[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getAtaMainList;\r\n\t\tthis.allManagemtninfo = getAtaMainList;\r\n\t\t//debugger;\r\n\t\tif (this.allManagemtninfo) {\r\n\t\t\tthis.gridData = this.makeNestedObj(this.allManagemtninfo, null);\r\n\t\t}\r\n\r\n\t\tthis.cols1 = [\r\n\t\t\t{ field: 'code', header: 'Code' },\r\n\t\t\t{ field: 'description', header: 'Description' },\r\n\t\t\t{ field: 'legalEntityId', header: 'ID' },\r\n\t\t];\r\n\t}\r\n\r\n\tmakeNestedObj(arr, parent)\r\n\t{\r\n\t\tvar out = []\r\n\t\tfor (var i in arr)\r\n\t\t{\r\n\t\t\tif (arr[i].parentId == parent)\r\n\t\t\t{\r\n\t\t\t\tvar children = this.makeNestedObj(arr, arr[i].managementStructureId)\r\n\t\t\t\tarr[i] = { \"data\": arr[i] };\r\n\t\t\t\tif (children.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tarr[i].children = children\r\n\t\t\t\t}\r\n\t\t\t\tout.push(arr[i])\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn out\r\n\t}\r\n\r\n\tmakeNestedObj1(child, arr, parent)\r\n\t{\r\n\t\t\r\n\t\tvar out = []\r\n\t\tif (child)\r\n\t\t{\r\n\t\t\tfor (var i = 0; i < child.length; i++)\r\n\t\t\t{\r\n\t\t\t\tfor (var j = 0; j < arr.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (arr[j].data)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (child[i].managementStructureId == arr[j].data.managementStructureId)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tarr[j].data.managementBinId = child[i].managementBinId;\r\n\t\t\t\t\t\t\tarr[j].data.binId = child[i].binId;\r\n\t\t\t\t\t\t\tout.push(arr[j]);\r\n\t\t\t\t\t\t\tconsole.log(arr[j].data);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (child[i].managementStructureId == arr[j].managementStructureId)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\tarr[j].data.managementBinId = child[i].managementBinId;\r\n\t\t\t\t\t\t\tarr[j].data.binId = child[i].binId;\r\n\t\t\t\t\t\t\tout.push(arr[j]);\r\n\t\t\t\t\t\t\tconsole.log(arr[j].data);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn out;\r\n\t}\r\n\r\n\t//testNestedObj(parent, child)\r\n\t//{\r\n\t//\tvar out = []\r\n\t//\tfor (var i in parent) {\r\n\t//\t\tif (parent[i].managementStructureId == child.) {\r\n\t//\t\t\tvar children = this.makeNestedObj(arr, arr[i].managementStructureId)\r\n\t//\t\t\tarr[i] = { \"data\": arr[i] };\r\n\t//\t\t\tif (children.length) {\r\n\t//\t\t\t\tarr[i].children = children\r\n\t//\t\t\t}\r\n\t//\t\t\tout.push(arr[i])\r\n\t//\t\t}\r\n\t//\t}\r\n\t//\treturn out\r\n\t//}\r\n\r\n\tnodeSelect(event) {\r\n\t\tdebugger;\r\n\t\t//event.node = selected node\r\n\t\tconsole.log(\"selected node\", event, event.node);\r\n\t}\r\n\r\n\tmanagementStructureClick(data)\r\n\t{\r\n\t\tconsole.log(this.selectedNodeTest);\r\n\t\t//console.log(this.localSelectedManagement);\r\n\r\n\t\tthis.testLocalNodeSlect = this.selectedNodeTest;\r\n\t}\r\n\r\n\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\r\n\r\n\t//Refresh\r\n\tprivate refresh() {\r\n\t\t// Causes the filter to refresh there by updating with recently added data.\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\t//OnDataLoadSuccessful\r\n\tprivate onDataLoadSuccessful(getBinList: any[]) {\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getBinList;\r\n\t\tthis.allBins = getBinList;\r\n\r\n\t}\r\n\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\r\n\t//OnHistoryLoadSuccessful\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.auditHisory = auditHistory;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//LoadMasterCompanies\r\n\tprivate loadMasterCompanies() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\r\n\t//SaveCompleted\r\n\tprivate saveCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\t\t}\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\t//Open\r\n\topen(content) {\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isSaving = true;\r\n\t\t\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.loadManagementdata(); //Calling Management Data\r\n\t\tthis.selectedNodeTest = []; //while Open new Node Data Should Be Empty\r\n\t\tthis.disableSaveManufacturer = false;\r\n\t\tthis.sourceBin = {};\r\n\t\t\r\n\t\tthis.address1 = \"\";\r\n\t\tthis.address2 = \"\";\r\n\t\tthis.address3 = \"\";\r\n\t\tthis.city = \"\";\r\n\t\tthis.country =\"\";\r\n\t\tthis.postalCode = \"\";\r\n\t\tthis.stateOrProvince =\"\";\r\n\r\n\t\tthis.name = \"\";\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//OpenDelete\r\n\topenDelete(content, row) {\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourceBin = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//OpenEdit\r\n\topenEdit(content, row) {\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\t//this.loadMasterCompanies();\r\n\t\tthis.showManagement = true;\r\n\t\tthis.disableSaveManufacturer = false;\r\n\t\tthis.sourceBin = row;\r\n\t\tif (row.siteId)\r\n\t\t{\r\n\t\t\tthis.siteValueChange(row.siteId);\r\n\t\t\tthis.wareHouseValueChange(row.wareHouseId);\r\n\t\t\tthis.locationValueChange(row.locationId);\r\n\t\t\tthis.shelfValueChange(row.shelfId);\r\n\t\t}\r\n\t\tthis.name = this.sourceBin.name;\r\n\r\n\t\t//Getting ManagementSite Data\r\n\t\tthis.workFlowtService.getManagementBinEditData(this.sourceBin.binId).subscribe(data11 => {\r\n\t\t\tthis.localManagementBinEditCollection = data11; //local SiteManagement Data for Edit Collection\r\n\t\t\tif (this.localManagementBinEditCollection) {\r\n\t\t\t\tif (this.gridData) {\r\n\t\t\t\t\t//this.gridData = this.makeNestedObj(this.allManagemtninfo, null);\r\n\t\t\t\t\tthis.gridData1 = this.makeNestedObj1(this.localManagementBinEditCollection, this.allManagemtninfo, null);\r\n\t\t\t\t\t//this.gridData = this.makeNestedObj(this.localManagementBinEditCollection, null);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.gridData = this.makeNestedObj(this.allManagemtninfo, null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//this.selectedNodeTest = this.testLocalNodeSlect;\r\n\t\t\tthis.selectedNodeTest = this.gridData1;\r\n\t\t})\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenHist(content, row) {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.sourceBin = row;\r\n\t\tthis.workFlowtService.historyBin(this.sourceBin.binId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t}\r\n\r\n\t//OpenView\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourceBin = row;\r\n\t\tthis.binId = row.binId;\r\n\t\tthis.binName = row.name;\r\n\t\tthis.shelfName = row.shelfName;\r\n\t\tthis.binName = row.name;\r\n\t\tthis.warehouseName = row.warehouseName;\r\n\t\tthis.shelfName = row.shelfName;\r\n\t\tthis.locationName = row.locationName;\r\n\t\tthis.warehouseName = row.wareHouseName;\r\n\t\tthis.siteName = row.siteName;\r\n\t\tthis.address1 = row.address1;\r\n\t\tthis.address2 = row.address2;\r\n\t\tthis.address3 = row.address3;\r\n\t\tthis.city = row.city;\r\n\t\tthis.stateOrProvince = row.stateOrProvince;\r\n\t\tthis.country = row.country;\r\n\t\tthis.postalCode = row.postalCode;\r\n\t\tthis.memo = row.memo;\r\n\t\tthis.createdBy = row.createdBy;\r\n\t\tthis.updatedBy = row.updatedBy;\r\n\t\tthis.createdDate = row.createdDate;\r\n\t\tthis.updatedDate = row.updatedDate;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//OpenHelpText\r\n\topenHelpText(content) {\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//DeleteItemAndCloseModel\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourceBin.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deleteBin(this.sourceBin.binId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourceBin),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\t//GetUserName\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\r\n\t//SaveFailedHelper\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured while saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\r\n\r\n\tpublic saveManagement(binId, data1) //retriving SiteManagement Array\r\n\t{\r\n\t\tdebugger;\r\n\t\tfor (let i = 0; i < data1.length; i++) {\r\n\t\t\tif (data1[i].data.managementStructureId != null) {\r\n\t\t\t\tdata1[i].data.binId = binId;\r\n\t\t\t\tthis.workFlowtService.newManagementBin(data1[i].data).subscribe(data11 => {\r\n\t\t\t\t\tthis.localManagementSiteCollection = data11; //local SiteManagement Data\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\t//EditItem\r\n\teditItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tif (this.isEditMode == false)\r\n\t\t{\r\n\t\t\tthis.showAddress = false;\r\n\t\t\tthis.showManagement = false;\r\n\t\t\tthis.sourceBin.createdBy = this.userName;\r\n\t\t\tthis.sourceBin.updatedBy = this.userName;\r\n\t\t\tthis.sourceBin.masterCompanyId = 1;\r\n\t\t\tthis.sourceBin.name = this.name;\r\n\t\t\tthis.workFlowtService.newBin(this.sourceBin).subscribe(data => {\r\n\t\t\t\tif (data != null) {\r\n\t\t\t\t\tthis.saveManagement(data.binId, this.selectedNodeTest); //pushing Site Management Need Site Value so after getting SiteId we are calling\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.loadData();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.showAddress = true;\r\n\t\t\tthis.showManagement = true;\r\n\t\t\tthis.sourceBin.updatedBy = this.userName;\r\n\t\t\tthis.sourceBin.name = this.name;\r\n\t\t\tthis.sourceBin.masterCompanyId = 1;\r\n\t\t\tthis.workFlowtService.updateBin(this.sourceBin).subscribe( //Update\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceBin),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\r\n\t\t\tthis.workFlowtService.deleteManagementBin(this.selectedNodeTest).subscribe(data => {\r\n\t\t\t\t//alert(\"getting delete\");\r\n\t\t\t});\r\n\t\t\tthis.saveManagement(this.selectedNodeTest[0].data.binId, this.selectedNodeTest); // will call ManagementSite Edit Data\r\n\t\t\tthis.selectedNodeTest = []; //after Edit making empty\r\n\t\t}\r\n\r\n\t\tthis.modal.close();\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\t//SaveSuccessHelper\r\n\tprivate saveSuccessHelper(role?: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\r\n\t//DismissModel\r\n\tpublic dismissModel() {\r\n\t\tthis.showAddress = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.showManagement = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\t//SaveSuccessCompleted\r\n\tprivate savesuccessCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\r\n\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/bin/bin.component.ts","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport * as $ from 'jquery';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-capabilities',\r\n    template: require('./capabilities.component.html'),\r\n    styles: [require('./capabilities.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Capabilities component*/\r\nexport class CapabilitiesComponent implements OnInit, AfterViewInit{\r\n    /** Capabilities ctor */\r\n\r\n\t\r\n\tngOnInit() :void{\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-capabilities';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t}\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, ) {\r\n\t}\r\n\tngAfterViewInit() { }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/capabilities/capabilities.component.ts","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport * as $ from 'jquery';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-financial-statement-mapping',\r\n    template: require('./financial-statement-mapping.component.html'),\r\n\tstyles: [require('./financial-statement-mapping.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** FinancialStatementMapping component*/\r\nexport class FinancialStatementMappingComponent implements OnInit, AfterViewInit{\r\n    /** FinancialStatementMapping ctor */\r\n\tngOnInit() :void\r\n\t{\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-financial-statement-mapping';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t}\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService) {\r\n\r\n\t}\r\n\tngAfterViewInit() { }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/financial-statement-mapping/financial-statement-mapping.component.ts","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport * as $ from 'jquery';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { GLAccountClassService } from '../../services/glaccountclass.service';\r\nimport { DataTableModule } from 'primeng/datatable';\r\nimport { TableModule } from 'primeng/table'\r\nimport { ButtonModule } from 'primeng/button'\r\nimport { SelectButtonModule } from 'primeng/selectbutton'\r\nimport { InputTextModule } from 'primeng/inputtext'\r\nimport { MultiSelectModule } from 'primeng/multiselect'\r\nimport { Action } from 'rxjs/scheduler/Action';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { MatTableDataSource, MatDialog, MatPaginator, MatSort } from '@angular/material';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { AlertService, MessageSeverity } from '../../services/alert.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { GLAccountClass } from '../../models/glaccountclass.model';\r\n\r\n\r\n@Component({\r\n\tselector: 'app-gl-account-class',\r\n\ttemplate: require('./gl-account-class.component.html'),\r\n\tstyles: [require('./gl-account-class.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** GlAccountClass component*/\r\nexport class GlAccountClassComponent implements OnInit, AfterViewInit {\r\n\tdisableSave: boolean;\r\n\tselectedGlAccountClassName: any;\r\n\tauditHisory: any[];\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tglaccountclassnamecolle: any[] = [];\r\n\tcols: any[];\r\n\tselectedColumns: any[];\r\n\tdisplayedColumns = ['glcid', 'glaccountclassname', 'createdDate', 'companyName'];\r\n\tdataSource: MatTableDataSource<any>;\r\n\tallGLAccountClass: any[] ;\r\n\tallComapnies: MasterCompany[] = [];\r\n\tprivate isSaving: boolean;\r\n\tpublic sourceglaccountclass: any = {}\r\n\tprivate bodyText: string;\r\n\tloadingIndicator: boolean;\r\n\tcloseResult: string;\r\n\ttitle: string = \"Create\";\r\n\tid: number;\r\n\tdisplay: boolean = false;\r\n\tmodelValue: boolean = false;\r\n\terrorMessage: any;\r\n\tmodal: NgbModalRef;\r\n\t/** Actions ctor */\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\tglAccountclassName: string;\r\n\tfilteredBrands: any[];\r\n\tlocalCollection: any[] = [];\r\n\tselectedColumn: any[];\r\n\tActive: string = \"Active\";\r\n\tglclassViewFileds: any = {};\r\n\tdisablesave: boolean = false;\r\n\r\n\r\n\t/** GlAccountClass ctor */\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: GLAccountClassService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\t\tthis.displayedColumns.push('action');\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\tthis.sourceglaccountclass = new GLAccountClass();\r\n\t}\r\n\tngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.cols = [\r\n\r\n\t\t\t\r\n\t\t\t{ field: 'glAccountClassName', header: 'GL Account Type Name' },\r\n\t\t\t//{ field: 'glCID', header: 'ID' },\r\n\t\t\t{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t\t//{ field: 'createdDate', header: 'Created Date' },\r\n\t\t\t//{ field: 'updatedDate', header: 'Updated Date' }\r\n\r\n\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-gl-account-class';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t\tthis.selectedColumns = this.cols;\r\n\r\n\t}\r\n\tngAfterViewInit() {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\r\n\t}\r\n\tprivate loadData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.workFlowtService.getWorkFlows().subscribe(\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\tprivate loadMasterCompanies() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\tprivate refresh() {\t\t\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\tprivate onDataLoadSuccessful(allWorkFlows: any[]) {\r\n\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\t//this.dataSource.data = allWorkFlows;\r\n\t\tthis.allGLAccountClass = allWorkFlows;\r\n\r\n\t}\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\topen(content) {\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.disablesave = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourceglaccountclass = new GLAccountClass();\r\n\t\tthis.glAccountclassName = \"\";\r\n\t\tthis.sourceglaccountclass.isActive = true;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\r\n\r\n\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourceglaccountclass = row;\r\n\t\tthis.glclassViewFileds.capabilityName = row.glAccountClassName;\r\n\t\tthis.glclassViewFileds.capabilityId = row.glcid;\t\t\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\topenDelete(content, row) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourceglaccountclass = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenEdit(content, row) {\r\n\t\tthis.disablesave = false;\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.disableSave = false;\r\n\t\tthis.sourceglaccountclass = row;\r\n\t\tthis.glAccountclassName = this.sourceglaccountclass.glaccountclassname;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenHist(content, row) {\r\n\r\n\t\tthis.sourceglaccountclass = row;\r\n\r\n\t\tthis.workFlowtService.historyGlAccountClass(this.sourceglaccountclass.glAccountClassId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t}\r\n\r\n\thandleChange(rowData, e) {\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourceglaccountclass = rowData;\r\n\t\t\tthis.sourceglaccountclass.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourceglaccountclass.isActive == false;\r\n\t\t\tthis.workFlowtService.updateGlAccountClass(this.sourceglaccountclass).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceglaccountclass),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourceglaccountclass = rowData;\r\n\t\t\tthis.sourceglaccountclass.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourceglaccountclass.isActive == true;\r\n\t\t\tthis.workFlowtService.updateGlAccountClass(this.sourceglaccountclass).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceglaccountclass),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\r\n}\r\n\t\t//eventHandler(event) {\r\n\t\t//\tlet value = event.target.value.toLowerCase();\r\n\t\t//\tif (this.selectedGlAccountClassName) {\r\n\t\t//\t\tif (value == this.selectedGlAccountClassName.toLowerCase()) {\r\n\t\t//\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t//\t\t\tthis.disableSave = true;\r\n\t\t//\t\t}\r\n\t\t//\t\telse {\r\n\t\t//\t\t\tthis.disableSave = false;\r\n\t\t//\t\t}\r\n\t\t//\t}\r\n\t\t//\telse {\r\n\t\t//\t\tfor (let i = 0; i < this.glaccountclassnamecolle.length; i++) {\r\n\t\t//\t\t\tif (value == this.glaccountclassnamecolle[i][0].glAccountclassName.toLowerCase()) {\r\n\t\t//\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t//\t\t\t\tthis.disableSave = true;\r\n\t\t//\t\t\t\tthis.selectedGlAccountClassName = event;\r\n\t\t//\t\t\t}\r\n\t\t//\t\t}\r\n\t\t//\t}\r\n\r\n\t\t//}\r\n\r\n\t\teventHandler(event) {\r\n\t\t\tif (event.target.value != \"\") {\r\n\t\t\t\tlet value = event.target.value.toLowerCase();\r\n\t\t\t\tif (this.selectedGlAccountClassName) {\r\n\t\t\t\t\tif (value == this.selectedGlAccountClassName.toLowerCase()) {\r\n\t\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\t\tthis.disablesave = true;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.disablesave = false;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\r\n\r\n\r\n\tpartnmId(event) {\r\n\t\tif (this.allGLAccountClass) {\r\n\r\n\t\t\tfor (let i = 0; i < this.allGLAccountClass.length; i++) {\r\n\t\t\t\tif (event == this.allGLAccountClass[i].glAccountClassName) {\r\n\t\t\t\t\tthis.sourceglaccountclass.glAccountClassName = this.allGLAccountClass[i].glAccountClassName;\r\n\t\t\t\t\tthis.disablesave = true;\r\n\r\n\t\t\t\t\tthis.selectedGlAccountClassName = event;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//for (let i = 0; i < this.allGLAccountClass.length; i++) {\r\n\t\t//\tif (event == this.allGLAccountClass[i][0].glAccountclassName) {\r\n\t\t//\t\t//alert(\"Action Name already Exists\");\r\n\t\t//\t\tthis.disableSave = true;\r\n\t\t//\t\tthis.selectedGlAccountClassName = event;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\tfilterGlAccountclass(event) {\r\n\r\n\t\tthis.localCollection = [];\r\n\t\tfor (let i = 0; i < this.allGLAccountClass.length; i++) {\r\n\t\t\tlet glAccountClassName = this.allGLAccountClass[i].glAccountClassName;\r\n\t\t\tif (glAccountClassName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\tthis.glaccountclassnamecolle.push([{\r\n\t\t\t\t\t\"glAccountClassId\": this.allGLAccountClass[i].glAccountClassId,\r\n\t\t\t\t\t\"glAccountClassName\": glAccountClassName\r\n\t\t\t\t}]),\r\n\t\t\t\t\tthis.localCollection.push(glAccountClassName)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\teditItemAndCloseModel() {\r\n\t\tif (!(this.sourceglaccountclass.glAccountClassName)) {\r\n\t\t\tthis.display = true;\r\n\t\t\tthis.modelValue = true;\r\n\t\t}\r\n\t\tif ((this.sourceglaccountclass.glAccountClassName)) {\r\n\t\t\tthis.isSaving = true;\r\n\r\n\t\t\tif (this.isEditMode == false) {\r\n\t\t\t\tthis.sourceglaccountclass.createdBy = this.userName;\r\n\t\t\t\tthis.sourceglaccountclass.updatedBy = this.userName;\r\n\t\t\t\tthis.sourceglaccountclass.masterCompanyId = 1;\r\n\t\t\t\t//this.sourceglaccountclass.glaccountclassname = this.glAccountclassName;\r\n\t\t\t\tthis.workFlowtService.newGlAccountClass(this.sourceglaccountclass).subscribe(\r\n\t\t\t\t\trole => this.saveSuccessHelper(role),\r\n\t\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tthis.sourceglaccountclass.updatedBy = this.userName;\r\n\t\t\t\tthis.sourceglaccountclass.glaccountclassname = this.glAccountclassName;\r\n\t\t\t\tthis.sourceglaccountclass.masterCompanyId = 1;\r\n\t\t\t\tthis.workFlowtService.updateGlAccountClass(this.sourceglaccountclass).subscribe(\r\n\t\t\t\t\tresponse => this.saveCompleted(this.sourceglaccountclass),\r\n\t\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t}\r\n\r\n\t\t\tthis.modal.close();\r\n\t\t}\r\n\t}\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourceglaccountclass.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deleteGlAccountClass(this.sourceglaccountclass.glAccountClassId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourceglaccountclass),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tdismissModel() {\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tprivate saveSuccessHelper(role?: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n\t\tthis.loadData();\r\n\r\n\t}\r\n\r\n\tprivate saveCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n\t}\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\r\n\tprivate getDismissReason(reason: any): string {\r\n\t\tif (reason === ModalDismissReasons.ESC) {\r\n\t\t\treturn 'by pressing ESC';\r\n\t\t} else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n\t\t\treturn 'by clicking on a backdrop';\r\n\t\t} else {\r\n\t\t\treturn `with: ${reason}`;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/gl-account-class/gl-account-class.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { ActionService } from '../../services/action.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { GlCashFlowClassification } from '../../models/glcashflowclassification.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { GlCashFlowClassificationService } from '../../services/gl-cash-flow-classification.service';\r\nimport { DataTableModule } from 'primeng/datatable';\r\nimport { TableModule } from 'primeng/table'\r\nimport { ButtonModule } from 'primeng/button'\r\nimport { SelectButtonModule } from 'primeng/selectbutton'\r\nimport { InputTextModule } from 'primeng/inputtext'\r\nimport { MultiSelectModule } from 'primeng/multiselect'\r\nimport { Action } from 'rxjs/scheduler/Action';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-gl-cash-flow-classification',\r\n    template: require('./gl-cash-flow-classification.component.html'),\r\n\tstyles: [require('./gl-cash-flow-classification.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** gl-cash-flow-classification component*/\r\nexport class GlCashFlowClassificationComponent implements OnInit, AfterViewInit {\r\n    paginator: MatPaginator;\r\n    sort: MatSort;    \r\n\tdisableSave: boolean;\r\n\tselectedGLClassFlowClassificationName: any;\r\n\tauditHisory: any[];\r\n\tdataSource: MatTableDataSource<any>;\t\r\n\tglcashflowcoll: any[] = [];\t\t\r\n\tcreatedBy: any = \"\";\r\n\tupdatedBy: any = \"\";\r\n\tcreateddate: any = \"\";\r\n\tupdatedDate: any = \"\";\r\n\tGLClassFlowClassificationNamecolle: any[] = [];\r\n\tcols: any[];\r\n\tselectedColumns: any[]=[];\r\n\tselectedColumn: any[];\r\n\tdisplayedColumns = ['glcid', 'glClassFlowClassificationName', 'createdDate', 'companyName'];\r\n\tallComapnies: MasterCompany[] = [];\r\n\tprivate isSaving: boolean;\r\n\tprivate bodyText: string;\r\n\tloadingIndicator: boolean;\r\n\tcloseResult: string;\r\n\tglClassFlowClassificationName: string;\t\r\n\ttitle: string = \"Create\";\r\n\r\n\tid: number;\r\n\terrorMessage: any;\r\n\tmodal: NgbModalRef;\t\r\n\tActive: string = \"Active\";\r\n\tlength: number;\r\n\tlocalCollection: any[] = [];\t\r\n\tallGlCashflow: any[] = [];\r\n\t//allGLcashflow: any[];\r\n\tisEditMode: boolean = false;\r\n\tisDeleteMode: boolean = false;\r\n\tpublic sourceglcashflowclassification: any = {}\r\n\tGLClassFlowClassificationName: string;\r\n   // allGLcashflow: any[];\r\n\tcashflowViewFileds: any = {};\r\n\t\r\n\t\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService, private workFlowtService:GlCashFlowClassificationService) {\r\n\t\tthis.displayedColumns.push('action');\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\tthis.sourceglcashflowclassification = new GlCashFlowClassification();\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.loadData();\r\n\t\t\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-gl-cash-flow-classification';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t\t\r\n\r\n\t}\r\n\tprivate loadData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.workFlowtService.getWorkFlows().subscribe(\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t\tthis.cols = [\r\n\t\t\t{ field: 'glClassFlowClassificationName', header: 'GL Class Flow ClassificationName' },\r\n\t\t\t{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t\t//{ field: 'createdDate', header: 'Created Date' },\r\n\t\t\t//{ field: 'updatedDate', header: 'Updated Date' }\r\n\r\n\r\n\t\t];\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\tprivate onDataLoadSuccessful(allWorkFlows: any[]) {\r\n\t\t//debugger;\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\t//this.dataSource.data = allWorkFlows;\r\n\t\tthis.allGlCashflow = allWorkFlows;\r\n\t\t\r\n\t\tthis.selectedColumns = this.cols;\r\n\r\n\t}\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\tngAfterViewInit() {\r\n\t\t//this.dataSource.paginator = this.paginator;\r\n\t\t//this.dataSource.sort = this.sort;\r\n\r\n\t}\r\n\t\r\n\tprivate loadMasterCompanies() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\tprivate refresh() {\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\topen(content) {\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourceglcashflowclassification = new GlCashFlowClassification();\r\n\t\tthis.GLClassFlowClassificationName = \"\";\r\n\t\tthis.sourceglcashflowclassification.isActive = true;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\r\n\r\n\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\topenDelete(content, row) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourceglcashflowclassification = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenEdit(content, row) {\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourceglcashflowclassification = row;\r\n\t\tthis.GLClassFlowClassificationName = this.sourceglcashflowclassification.glClassFlowClassificationName;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenHist(content, row) {\r\n\r\n\t\tthis.sourceglcashflowclassification = row;\r\n\r\n\t\tthis.workFlowtService.historyGlCashFlowClassification(this.sourceglcashflowclassification.glcashflowclassificationId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t}\r\n\r\n\thandleChange(rowData, e) {\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourceglcashflowclassification = rowData;\r\n\t\t\tthis.sourceglcashflowclassification.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourceglcashflowclassification.isActive == false;\r\n\t\t\tthis.workFlowtService.updateCashFlowClassification(this.sourceglcashflowclassification).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceglcashflowclassification),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourceglcashflowclassification = rowData;\r\n\t\t\tthis.sourceglcashflowclassification.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourceglcashflowclassification.isActive == true;\r\n\t\t\tthis.workFlowtService.updateCashFlowClassification(this.sourceglcashflowclassification).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceglcashflowclassification),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\r\n\t}\r\n\teventHandler(event) {\r\n\t\tlet value = event.target.value.toLowerCase();\r\n\t\tif (this.selectedGLClassFlowClassificationName) {\r\n\t\t\tif (value == this.selectedGLClassFlowClassificationName.toLowerCase()) {\r\n\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\tthis.disableSave = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.disableSave = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let i = 0; i < this.GLClassFlowClassificationNamecolle.length; i++) {\r\n\t\t\t\tif (value == this.GLClassFlowClassificationNamecolle[i].glClassFlowClassificationName.toLowerCase()) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disableSave = true;\r\n\t\t\t\t\tthis.selectedGLClassFlowClassificationName = event;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpartnmId(event) {\r\n\t\tif (this.allGlCashflow) {\r\n\r\n\t\t\tfor (let i = 0; i < this.allGlCashflow.length; i++) {\r\n\t\t\t\tif (event == this.allGlCashflow[i].glClassFlowClassificationName) {\r\n\t\t\t\t\tthis.sourceglcashflowclassification.glClassFlowClassificationName = this.allGlCashflow[i].glClassFlowClassificationName;\r\n\t\t\t\t\tthis.disableSave = true;\r\n\r\n\t\t\t\t\tthis.selectedGLClassFlowClassificationName = event;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfilterGlAccountclass(event) {\r\n\r\n\t\tthis.localCollection = [];\r\n\t\tif (this.allGlCashflow) {\r\n\t\t\tfor (let i = 0; i < this.allGlCashflow.length; i++) {\r\n\t\t\t\tlet glClassFlowClassificationName = this.allGlCashflow[i].glClassFlowClassificationName;\r\n\t\t\t\tif (glClassFlowClassificationName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\t\tthis.glcashflowcoll.push([{\r\n\t\t\t\t\t\t\"glClassFlowClassificationId\": this.allGlCashflow[i].glClassFlowClassificationId,\r\n\t\t\t\t\t\t\"glClassFlowClassificationName\": glClassFlowClassificationName\r\n\t\t\t\t\t}]),\r\n\t\t\t\t\t\tthis.localCollection.push(glClassFlowClassificationName)\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\teditItemAndCloseModel() {\r\n\r\n\t\tthis.isSaving = true;\r\n\r\n\t\tif (this.isEditMode == false) {\r\n\t\t\tthis.sourceglcashflowclassification.createdBy = this.userName;\r\n\t\t\tthis.sourceglcashflowclassification.updatedBy = this.userName;\r\n\t\t\tthis.sourceglcashflowclassification.masterCompanyId = 1;\r\n\t\t\t//this.sourceglaccountclass.glaccountclassname = this.glAccountclassName;\r\n\t\t\tthis.workFlowtService.newGlCashFlowClassification(this.sourceglcashflowclassification).subscribe(\r\n\t\t\t\trole => this.saveSuccessHelper(role),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.sourceglcashflowclassification.updatedBy = this.userName;\r\n\t\t\t//this.sourceglcashflowclassification.glClassFlowClassificationName = this.glClassFlowClassificationName;\r\n\t\t\tthis.sourceglcashflowclassification.masterCompanyId = 1;\r\n\t\t\tthis.workFlowtService.updateCashFlowClassification(this.sourceglcashflowclassification).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceglcashflowclassification),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\r\n\t\tthis.modal.close();\r\n\t}\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourceglcashflowclassification.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deleteCashFlowClassification(this.sourceglcashflowclassification.glClassFlowClassificationId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourceglcashflowclassification),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tdismissModel() {\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tprivate saveSuccessHelper(role?: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n\t\tthis.loadData();\r\n\r\n\t}\r\n\r\n\tprivate saveCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n\t}\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\r\n\tprivate getDismissReason(reason: any): string {\r\n\t\tif (reason === ModalDismissReasons.ESC) {\r\n\t\t\treturn 'by pressing ESC';\r\n\t\t} else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n\t\t\treturn 'by clicking on a backdrop';\r\n\t\t} else {\r\n\t\t\treturn `with: ${reason}`;\r\n\t\t}\r\n\t}\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourceglcashflowclassification = row;\r\n\t\tthis.cashflowViewFileds.glClassFlowClassificationName = row.glClassFlowClassificationName;\r\n\t\tthis.cashflowViewFileds.glcid = row.glcid;\r\n\t\t//this.createdBy = row.createdBy;\r\n\t\t//this.updatedBy = row.updatedBy;\r\n\t\t//this.createdDate = row.createdDate;\r\n\t\t//this.updatedDate = row.updatedDate;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/gl-cash-flow-classification/gl-cash-flow-classification.component.ts","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport * as $ from 'jquery';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n@Component({\r\n    selector: 'app-gl-financial-statement',\r\n    template: require('./gl-financial-statement.component.html'),\r\n\tstyles: [require('./gl-financial-statement.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** GlFinancialStatement component*/\r\nexport class GlFinancialStatementComponent implements OnInit, AfterViewInit{\r\n\t/** GlFinancialStatement ctor */\r\n\tngOnInit() :void\r\n\t{\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-gl-financial-statement';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t}\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService) {\r\n\r\n\t}\r\n\tngAfterViewInit() { }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/gl-financial-statement/gl-financial-statement.component.ts","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport * as $ from 'jquery';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n@Component({\r\n    selector: 'app-journal-approvals',\r\n    template: require('./journal-approvals.component.html'),\r\n\tstyles: [require('./journal-approvals.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** JournalApprovals component*/\r\nexport class JournalApprovalsComponent implements OnInit, AfterViewInit {\r\n    /** JournalApprovals ctor */\r\n\tngOnInit()\r\n\t{\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-journal-approvals';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t}\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService) {\r\n\r\n\t}\r\n\r\n\tngAfterViewInit() { }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/journal-approvals/journal-approvals.component.ts","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport * as $ from 'jquery';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n@Component({\r\n    selector: 'app-rfq-engine',\r\n    template: require('./rfq-engine.component.html'),\r\n\tstyles: [require('./rfq-engine.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** RfqEngine component*/\r\nexport class RfqEngineComponent implements OnInit, AfterViewInit {\r\n    /** RfqEngine ctor */\r\n\tngOnInit() {\r\n\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-rfq-engine';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t}\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService) {\r\n\r\n\t}\r\n\tngAfterViewInit() { }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/rfq-engine/rfq-engine.component.ts","\r\nimport { Component, Input, ViewChild,OnInit } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { NgForm, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { fadeInOut } from '../../services/animations';\r\n\r\nimport { AlertService, MessageSeverity } from '../../services/alert.service';\r\nimport { AccountService } from \"../../services/account.service\";\r\nimport { Role } from '../../models/role.model';\r\nimport { Permission } from '../../models/permission.model';\r\nimport { Action } from '../../models/action.model';\r\n\r\n@Component({\r\n    selector: 'actions-editor',\r\n    animations: [fadeInOut],\r\n    template: require('./actions-editor.component.html')\r\n})\r\n\r\nexport class ActionsEditorComponent implements OnInit {\r\n    employeeForm: FormGroup;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n\r\n    constructor(private _fb: FormBuilder) {\r\n        \r\n        this.employeeForm = this._fb.group({\r\n            id: 0,\r\n            name: ['', [Validators.required]],\r\n            gender: ['', [Validators.required]],\r\n            department: ['', [Validators.required]],\r\n            city: ['', [Validators.required]]\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.id > 0) {\r\n           \r\n        }\r\n    }\r\n\r\n    save() {\r\n\r\n        alert('sucess');\r\n        if (!this.employeeForm.valid) {\r\n            return;\r\n        }\r\n\r\n      \r\n    }\r\n    \r\n    get name() { return this.employeeForm.get('name'); }\r\n    get gender() { return this.employeeForm.get('gender'); }\r\n    get department() { return this.employeeForm.get('department'); }\r\n    get city() { return this.employeeForm.get('city'); }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/actions/actions-editor.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { ChargeService } from '../../services/charge.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { Charge } from '../../models/charge.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { TreeNode} from 'primeng/api';\r\nimport { LegalEntityService } from '../../services/legalentity.service';\r\n\r\n@Component({\r\n    selector: 'app-charges',\r\n    template: require('./charges.component.html'),\r\n    styles: [require('./charges.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class ChargesComponent  implements OnInit, AfterViewInit {\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    actionamecolle: any[]=[];\r\n    charge_Name: any = \"\";\r\n    description = \"\";\r\n    cost = \"\";\r\n    purchaseOrderId = \"\";\r\n    generalLedgerId = \"\";\r\n    vendorId = \"\";\r\n    integrationPortalId = \"\";\r\n    functionalCurrencyId = \"\";\r\n    currencyId = \"\";\r\n    markUp = \"\";\r\n    quantity = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n    allCurrencyinfo: any[];\r\n    allPOinfo: any[];\r\n    allVendorinfo: any[];\r\n\tallIntegrationinfo: any[];\r\n\tallManagemtninfo: any[];\r\n\tgridData: TreeNode[];//Managemnt\r\n\tcols1: any[];\r\n\tcopyOfAllManagemtninfo: any[] = [];\r\n    showManagement: boolean;\r\n    copyOfAllVendorInfo: any;\r\n\tcopyOfAllIntegrationInfo: any[] = [];\r\n    billableAmount: any;\r\n    ManagementStrucurureCode: any;\r\n    currencySymbol: any;\r\n    integrationPortalDescription: any;\r\n    isActive: any;\r\n    purchaseOrderNumber: any;\r\n    vendorName: any;\r\n    gridData1: TreeNode[];\r\n    ngOnInit(): void {\r\n\t\tthis.loadData();\r\n\r\n\t\tthis.loadCurrencyData();\r\n\t\tthis.loadVendorData();\r\n\t\tthis.loadIntegrationData();\r\n\t\tthis.getPOData();\r\n\t\tthis.loadManagementdata();\r\n\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-charges';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n    }\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    displayedColumns = ['chargeId', 'poId', 'memo', 'cost', 'description', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<Charge>;\r\n    allChargeinfo: Charge[] = [];\r\n    allComapnies: MasterCompany[] = [];\r\n    private isSaving: boolean;\r\n    public sourceAction: Charge;\r\n    public auditHisory: AuditHistory[] = [];\r\n    private bodyText: string;\r\n    loadingIndicator: boolean;\r\n    closeResult: string;\r\n    selectedColumn: Charge[];\r\n    selectedColumns: any[];\r\n    cols: any[];\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    modal: NgbModalRef;\r\n    chargeName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n    /** Actions ctor */\r\n\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n    Active: string = \"Active\";\r\n\tconstructor(public workFlowtService1: LegalEntityService,private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public chargeService: ChargeService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n        this.sourceAction = new Charge();\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n    public allWorkFlows: Charge[] = [];\r\n\r\n    private loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.chargeService.getChargeList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n        this.cols = [\r\n            { field: 'chargeId', header: 'Charge Id' },\r\n\t\t\t{ field: 'chargeName', header: 'Charge Name' },\r\n\t\t\t{ field: 'cost', header: 'Cost' },\r\n\t\t\t{ field: 'markUp', header: 'Mark Up' },\r\n\t\t\t{ field: 'billableAmount', header: 'Billable Amount' },\r\n\t\t\t{ field: 'symbol', header: 'Currency' },  \r\n\t\t\t{ field: 'memo', header: 'Memo' },\r\n            //{ field: 'purchaseOrderId', header: 'PO' },\r\n            //{ field: 'generalLedgerId', header: 'GL' },\r\n            //{ field: 'vendorId', header: 'VN' },\r\n            //{ field: 'integrationPortalId', header: 'IGP' },\r\n            //{ field: 'functionalCurrencyId', header: 'FCI' },\r\n                    \r\n           \r\n            //{ field: 'quantity', header: 'Qty' },\r\n            //{ field: 'description', header: 'Description' },\r\n            \r\n            \r\n            //{ field: 'createdBy', header: 'Created By' },\r\n            //{ field: 'updatedBy', header: 'Updated By' },\r\n            //{ field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'createdDate' }\r\n        ];\r\n\r\n        this.selectedColumns = this.cols;\r\n\r\n\t}\r\n\r\n\tprivate loadCurrencyData()\r\n\t{\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.chargeService.getCurrencyData().subscribe(\r\n\t\t\tresults => this.onDataLoadCurrencySuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\r\n\tprivate loadManagementdata() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.workFlowtService1.getManagemententity().subscribe(\r\n\t\t\tresults => this.onManagemtntdataLoad(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\r\n\t}\r\n\r\n\tprivate onManagemtntdataLoad(getAtaMainList: any[])\r\n\t{\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getAtaMainList;\r\n\t\tthis.allManagemtninfo = getAtaMainList;\r\n\r\n\t\tif (this.allManagemtninfo)\r\n\t\t{\r\n\t\t\tfor (let i = 0; i < this.allManagemtninfo.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.copyOfAllManagemtninfo.push(JSON.parse(JSON.stringify(this.allManagemtninfo[i])));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//if (this.sourceStockLineSetup.managementStructureEntityId && this.allManagemtninfo) {\r\n\t\t//\tthis.getBUList(this.sourceStockLineSetup.managementStructureEntityId);\r\n\t\t//}\r\n\r\n\t\t\r\n\t}\r\n\r\n\tgetBUList(companyId)\r\n\t{\r\n\t\t\r\n\t\t//for Structure\r\n\t\tif (this.allManagemtninfo)\r\n\t\t{\r\n\r\n\t\t\tthis.gridData = this.makeNestedObj(this.allManagemtninfo, companyId);\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\t//if (this.gridData.length == 0) {\r\n\t\t//\tthis.allManagemtninfo = [];\r\n\t\t//\tthis.workFlowtService1.getManagemententity().subscribe(\r\n\t\t//\t\tresults => this.onManagemtntdataLoad(results[0]),\r\n\t\t//\t\terror => this.onDataLoadFailed(error)\r\n\t\t//\t);\r\n\t\t//\tthis.gridData = this.makeNestedObj(this.allManagemtninfo, companyId);\r\n\t\t//}\r\n\r\n\t\tthis.cols1 = [\r\n\t\t\t{ field: 'code', header: 'Code' },\r\n\t\t\t{ field: 'name', header: 'Name' },\r\n\t\t\t{ field: 'description', header: 'Description' },\r\n\t\t\t//{ field: 'legalEntityId', header: 'ID' },\r\n\t\t];\r\n\t\tthis.showManagement = true;\r\n\r\n\t\t//this.bulist = [];\r\n\t\t//this.departmentList = [];\r\n\t\t//this.divisionlist = [];\r\n\t\t//for (let i = 0; i < this.allManagemtninfo.length; i++) {\r\n\t\t//\tif (this.allManagemtninfo[i].parentId == companyId) {\r\n\t\t//\t\tthis.bulist.push(this.allManagemtninfo[i]);\r\n\t\t//\t}\r\n\t}\r\n\r\n\tmakeNestedObj(arr, parent)\r\n\t{\r\n\t\tlet out = []\r\n\t\tfor (var i in arr)\r\n\t\t{\r\n\t\t\tif (arr[i].parentId == parent) {\r\n\t\t\t\tvar children = this.makeNestedObj(arr, arr[i].managementStructureId)\r\n\t\t\t\tarr[i] = { \"data\": arr[i] };\r\n\t\t\t\tif (children.length) {\r\n\t\t\t\t\tarr[i].children = children\r\n\t\t\t\t}\r\n\t\t\t\tout.push(arr[i])\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.showManagement = true;\r\n\t\treturn out\r\n\r\n\t\t\r\n\t}\r\n\r\n\tprivate onDataLoadCurrencySuccessful(getCurrencyList: any[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getCurrencyList;\r\n\t\tthis.allCurrencyinfo = getCurrencyList;\r\n\t}\r\n\r\n\tprivate getPOData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.chargeService.getPOData().subscribe(\r\n\t\t\tresults => this.onDataLoadPOSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\r\n\tprivate onDataLoadPOSuccessful(getPOList: any[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getPOList;\r\n\t\tthis.allPOinfo = getPOList;\r\n\t}\r\n\r\n\tprivate loadVendorData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.chargeService.getVendorData().subscribe(\r\n\t\t\tresults => this.onDataLoadVendorSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\r\n\tprivate onDataLoadVendorSuccessful(getVendorList: any[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getVendorList;\r\n\t\tthis.allVendorinfo = getVendorList;\r\n\r\n\t\t\r\n\t}\r\n\r\n\tprivate loadIntegrationData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.chargeService.getIntegrationData().subscribe(\r\n\t\t\tresults => this.onDataLoadIntegrationSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\r\n\tprivate onDataLoadIntegrationSuccessful(getIntegarionList: any[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getIntegarionList;\r\n\t\tthis.allIntegrationinfo = getIntegarionList;\r\n\r\n\t\tif (this.allIntegrationinfo) {\r\n\t\t\tfor (let i = 0; i < this.allIntegrationinfo.length; i++) {\r\n\t\t\t\tthis.copyOfAllIntegrationInfo.push(JSON.parse(JSON.stringify(this.allIntegrationinfo[i])));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(getChargeList: Charge[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getChargeList;\r\n        this.allChargeinfo = getChargeList;\r\n    }\r\n\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n        // debugger;\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.chargeService.updateCharge(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.chargeService.updateCharge(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.showManagement = false;\r\n\t\t\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = new Charge();\r\n        this.sourceAction.isActive = true;\r\n\t\tthis.chargeName = \"\";\r\n\r\n\t\t\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openEdit(content, row) {\r\n\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.showManagement = true;\r\n\t\tthis.gridData = [];\r\n\t\tthis.quantity = row.quantity;\r\n\t\tthis.billableAmount = row.billableAmount;\r\n\t\tthis.chargeName = row.chargeName;\r\n\t\tthis.ManagementStrucurureCode = row.code;\r\n\t\tthis.description = row.description;\r\n\t\tthis.markUp = row.markUp;\r\n\t\tthis.memo = row.memo;\r\n\t\tthis.currencySymbol = row.symbol;\r\n\t\tthis.cost = row.cost;\r\n\t\tthis.integrationPortalDescription = row.integrationPortalDescription;\r\n\t\tthis.isActive = row.isActive;\r\n\t\tthis.purchaseOrderNumber = row.purchaseOrderNumber;\r\n\t\tthis.vendorName = row.vendorName;\r\n\t\tthis.sourceAction.ManagementStructureId = row.managementStructureId;\r\n\r\n\t\tif (row.managementStructureId)\r\n\t\t{\r\n\t\t\tthis.gridData = [];\r\n\t\t\tthis.gridData = this.makeNestedObj(this.allManagemtninfo, row.managementStructureId);\r\n\t\t\t//if (this.gridData.length == 0)\r\n\t\t\t//{\r\n\t\t\t//\tthis.allManagemtninfo = [];\r\n\t\t\t//\tthis.loadManagementdata();\r\n\t\t\t\t\r\n\t\t\t//}\r\n\r\n\t\t\t//if (this.gridData.length == 0 && this.allManagemtninfo.length > 0)\r\n\t\t\t//{\r\n\t\t\t//\tthis.gridData = this.makeNestedObj(this.allManagemtninfo, row.managementStructureId);\r\n\t\t\t//}\r\n\t\t\t\r\n\r\n\t\t\tthis.cols1 = [\r\n\t\t\t\t{ field: 'code', header: 'Code' },\r\n\t\t\t\t{ field: 'name', header: 'Name' },\r\n\t\t\t\t{ field: 'description', header: 'Description' },\r\n\t\t\t\t//{ field: 'legalEntityId', header: 'ID' },\r\n\t\t\t];\r\n\t\t\t\r\n\t\t}\r\n        this.loadMasterCompanies();\r\n        this.sourceAction = row;\r\n        this.chargeName = this.sourceAction.chargeName;\r\n\t\tthis.loadMasterCompanies();\r\n\t\t\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.charge_Name = row.chargeName;\r\n\t\tthis.cost = row.cost;\r\n\t\tthis.quantity = row.quantity;\r\n\t\tthis.billableAmount = row.billableAmount;\r\n\t\tthis.chargeName = row.chargeName;\r\n\t\tthis.ManagementStrucurureCode = row.code;\r\n\t\tthis.description = row.description;\r\n\t\tthis.markUp = row.markUp;\r\n\t\tthis.memo = row.memo;\r\n\t\tthis.currencySymbol = row.symbol;\r\n\t\tthis.cost = row.cost;\r\n\t\tthis.integrationPortalDescription = row.integrationPortalDescription;\r\n\t\tthis.isActive = row.isActive;\r\n\t\tthis.purchaseOrderNumber = row.purchaseOrderNumber;\r\n\t\tthis.vendorName = row.vendorName;\r\n        this.description = row.description;\r\n       \r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        //this.isSaving = true;\r\n        // debugger;\r\n        this.chargeService.historyCharge(this.sourceAction.chargeId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.sourceAction.chargeName = this.chargeName;\r\n            this.chargeService.newCharge(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.chargeName = this.chargeName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n            this.chargeService.updateCharge(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n\t}\r\n\r\n\tmakeNestedObj1(child, arr, parent) {\r\n\r\n\t\tvar out = []\r\n\t\tif (child) {\r\n\t\t\tfor (var i = 0; i < child.length; i++) {\r\n\t\t\t\tfor (var j = 0; j < arr.length; j++) {\r\n\t\t\t\t\tif (arr[j].data) {\r\n\t\t\t\t\t\tif (child[i].managementStructureId == arr[j].data.managementStructureId) {\r\n\t\t\t\t\t\t\tarr[j].data.managementWarehouseId = child[i].managementWarehouseId;\r\n\t\t\t\t\t\t\tarr[j].data.warehouseId = child[i].warehouseId;\r\n\t\t\t\t\t\t\tout.push(arr[j]);\r\n\t\t\t\t\t\t\tconsole.log(arr[j].data);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (child[i].managementStructureId == arr[j].managementStructureId) {\r\n\t\t\t\t\t\tarr[j].data.managementWarehouseId = child[i].managementWarehouseId;\r\n\t\t\t\t\t\tarr[j].data.warehouseId = child[i].warehouseId;\r\n\t\t\t\t\t\tout.push(arr[j]);\r\n\t\t\t\t\t\tconsole.log(arr[j].data);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn out;\r\n\t}\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.chargeService.deleteCharge(this.sourceAction.chargeId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n\t\tfor (let i = 0; i < this.allChargeinfo.length; i++) {\r\n\t\t\tif (event == this.allChargeinfo[i].chargeName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n    filterCharges(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allChargeinfo.length; i++) {\r\n            let chargeName = this.allChargeinfo[i].chargeName;\r\n            if (chargeName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"chargeId\": this.allChargeinfo[i].chargeId,\r\n                    \"chargeName\": chargeName\r\n                }]),\r\n                  \r\n                this.localCollection.push(chargeName);\r\n            }\r\n        }\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\t//the Below Lines for Managemnet Structure is going into Structure Formate so we cant access second time\r\n\t\t//so we need to call Managemnet Structure List again\r\n\t\t//test\r\n\t\tthis.allManagemtninfo = [];\r\n\t\tthis.copyOfAllManagemtninfo = [];\r\n\t\tthis.loadManagementdata();\r\n\t\t//test End\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: Charge) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: Charge) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/charges/charges.component.ts","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\n\r\nimport { DefaultMessageService } from '../../services/defaultmessage.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { DefaultMessage } from '../../models/defaultmessage.model';\r\nimport * as $ from 'jquery';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSort, MatPaginator, MatDialog, MatTableDataSource } from '@angular/material';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, NgbModalRef, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n    selector: 'app-default-message',\r\n    template: require('./default-message.component.html'),\r\n    styles: [require('./default-message.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Currency component*/\r\nexport class DefaultMessageComponent implements OnInit, AfterViewInit {\r\n    defaultMessage_Name: any = \"\";\r\n    description: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n    auditHisory: AuditHistory[];\r\n    /** Currency ctor */\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    displayedColumns = ['defaultMessageId', 'defaultMessageCode', 'description', 'memo', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<DefaultMessage>;\r\n    allDefaultMessageInfo: DefaultMessage[] = [];\r\n    sourceAction: DefaultMessage;\r\n\r\n    loadingIndicator: boolean;\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    actionamecolle: any[] = [];\r\n\r\n    actionForm: FormGroup;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n    allComapnies: MasterCompany[];\r\n    private isSaving: boolean;\r\n    modal: NgbModalRef;\r\n    selectedColumn: DefaultMessage[];\r\n    messageName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n\r\n    /** Currency ctor */\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private _fb: FormBuilder, private alertService: AlertService, private masterComapnyService: MasterComapnyService, private modalService: NgbModal, public defaultmessageService: DefaultMessageService, private dialog: MatDialog) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        this.loadData();\r\n        this.cols = [\r\n            //{ field: 'currencyId', header: 'Currency ID' },\r\n            { field: 'defaultMessageCode', header: 'Default Message Name' },\r\n            { field: 'description', header: 'Default Message  Description' },\r\n            { field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },           // { field: 'updatedDate', header: 'Updated Date' },\r\n           // { field: 'createdDate', header: 'Created Date' }\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-default-message';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n        this.selectedColumns = this.cols;\r\n\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.defaultmessageService.updateDefaultMessage(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.defaultmessageService.updateDefaultMessage(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n    Active: string = \"Active\";\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    private loadData() {\r\n        // debugger;\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.defaultmessageService.getDefaultMessageList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(getDefaultMessageList: DefaultMessage[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getDefaultMessageList;\r\n\r\n        this.allDefaultMessageInfo = getDefaultMessageList;\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n\r\n    open(content) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new DefaultMessage();\r\n        this.sourceAction.isActive = true;\r\n        this.messageName = \"\";\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n    openEdit(content, row) {\r\n\r\n        this.isEditMode = true;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\r\n\r\n\r\n        this.sourceAction = row;\r\n        this.messageName = this.sourceAction.defaultMessageCode;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n        this.sourceAction = row;\r\n        this.isSaving = true;\r\n           this.defaultmessageService.historyDefaultMessage(this.sourceAction.defaultMessageId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    \r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.defaultMessage_Name = row.defaultMessageCode;\r\n        this.description = row.description;\r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n        if (value == this.selectedActionName.toLowerCase()) {\r\n            //alert(\"Action Name already Exists\");\r\n            this.disableSave = true;\r\n        }\r\n        else {\r\n            this.disableSave = false;\r\n        }\r\n        }\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n        for (let i = 0; i < this.actionamecolle.length; i++) {\r\n            if (event == this.actionamecolle[i][0].messageName) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    filterMessageName(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allDefaultMessageInfo.length; i++) {\r\n            let messageName = this.allDefaultMessageInfo[i].defaultMessageCode;\r\n            if (messageName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"defaultMessageId\": this.allDefaultMessageInfo[i].defaultMessageId,\r\n                    \"messageName\": messageName\r\n                }]),\r\n                this.localCollection.push(messageName);\r\n            }\r\n        }\r\n    }\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n       \r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.defaultMessageCode = this.messageName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.defaultmessageService.newDefaultMessage(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.defaultMessageCode = this.messageName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.defaultmessageService.updateDefaultMessage(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.defaultmessageService.deleteDefaultMessage(this.sourceAction.defaultMessageId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: DefaultMessage) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: DefaultMessage) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/default-message/default-message.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { TaxTypeService } from '../../services/taxtype.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { TaxType } from '../../models/taxtype.model';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n\tselector: 'app-tax-type',\r\n\ttemplate: require('./tax-type.component.html'),\r\n\tstyles: [require('./tax-type.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** Actions component*/\r\nexport class TaxTypeComponent implements OnInit, AfterViewInit {\r\n    actionamecolle: any[]=[];\r\n    disableSave: boolean= false;\r\n    selectedActionName: any;\r\n    taxType_Name: any = \"\"; \r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n\tngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-tax-type';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t}\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n    Active: string = \"Active\";\r\n\tdisplayedColumns = ['taxTypeId', 'description', 'createdBy', 'By', 'updatedDate', 'createdDate'];\r\n\tdataSource: MatTableDataSource<TaxType>;\r\n\tallTaxTypes: TaxType[] = [];\r\n\tallComapnies: MasterCompany[] = [];\r\n\tprivate isSaving: boolean;\r\n\tpublic sourceAction: TaxType;\r\n\tpublic auditHisory: AuditHistory[] = [];\r\n\tprivate bodyText: string;\r\n\tloadingIndicator: boolean;\r\n\tcloseResult: string;\r\n\tselectedColumn: TaxType[];\r\n\tselectedColumns: any[];\r\n\tcols: any[];\r\n\ttitle: string = \"Create\";\r\n\tid: number;\r\n\terrorMessage: any;\r\n    modal: NgbModalRef;\r\n\r\n    taxTypeName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n\t/** Actions ctor */\r\n\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: TaxTypeService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\t\tthis.displayedColumns.push('taxType');\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\tthis.sourceAction = new TaxType();\r\n\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\tpublic allWorkFlows: TaxType[] = [];\r\n\r\n\tprivate loadData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.workFlowtService.getWorkFlows().subscribe(\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t\tthis.cols = [\r\n\t\t\t{ field: 'description', header: 'Tax Type' },\r\n\t\t\t{ field: 'memo', header: 'Memo' },\r\n\t\t\t{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t\t//{ field: 'updatedDate', header: 'Updated Date' },\r\n\t\t\t//{ field: 'createdDate', header: 'createdDate' }\r\n\r\n\t\t];\r\n\r\n\t\tthis.selectedColumns = this.cols;\r\n\r\n\t}\r\n\r\n\tprivate loadMasterCompanies() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\r\n\tprivate refresh() {\r\n\t\t// Causes the filter to refresh there by updating with recently added data.\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\tprivate onDataLoadSuccessful(allWorkFlows: TaxType[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = allWorkFlows;\r\n\t\tthis.allTaxTypes = allWorkFlows;\r\n\t}\r\n\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n\t}\r\n\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\r\n\topen(content) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourceAction = new TaxType();\r\n        this.sourceAction.isActive = true;\r\n        this.taxTypeName = \"\";\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\r\n\r\n\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.taxType_Name = row.description;     \r\n        this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\topenDelete(content, row) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourceAction = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenEdit(content, row) {\r\n\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\r\n\r\n\r\n        this.sourceAction = row;\r\n        this.taxTypeName = this.sourceAction.description;\r\n\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenHist(content, row) {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n        this.sourceAction = row;\r\n        //this.isSaving = true;\r\n\t\t// debugger;\r\n\t\tthis.workFlowtService.historyTaxType(this.sourceAction.taxTypeId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n\r\n\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n\t\tfor (let i = 0; i < this.actionamecolle.length; i++)\r\n\t\t{\r\n\t\t\tif (event == this.actionamecolle[i][0].taxTypeName)\r\n\t\t\t{\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    filterTaxTypes(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allTaxTypes.length; i++) {\r\n            let taxTypeName = this.allTaxTypes[i].description;\r\n            if (taxTypeName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\r\n                this.actionamecolle.push([{\r\n                    \"taxTypeId\": this.allTaxTypes[i].taxTypeId,\r\n                    \"taxTypeName\": taxTypeName\r\n                }]),\r\n\r\n                this.localCollection.push(taxTypeName);\r\n            }\r\n        }\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n\teditItemAndCloseModel() {\r\n\r\n\t\t// debugger;\r\n\r\n\t\tthis.isSaving = true;\r\n\r\n\t\tif (this.isEditMode == false) {\r\n\t\t\tthis.sourceAction.createdBy = this.userName;\r\n\t\t\tthis.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.taxTypeName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n\t\t\tthis.workFlowtService.newAction(this.sourceAction).subscribe(\r\n\t\t\t\trole => this.saveSuccessHelper(role),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.taxTypeName;\r\n            this.sourceAction.masterCompanyId = 1;\r\n\t\t\tthis.workFlowtService.updateAction(this.sourceAction).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceAction),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourceAction.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deleteAcion(this.sourceAction.taxTypeId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourceAction),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tdismissModel() {\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tprivate saveCompleted(user?: TaxType) {\r\n\t\tthis.isSaving = false;\r\n\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\tprivate saveSuccessHelper(role?: TaxType) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `TaxType was created successfully`, MessageSeverity.success);\r\n\r\n\t\tthis.loadData();\r\n\r\n\t}\r\n\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\r\n\tprivate getDismissReason(reason: any): string {\r\n\t\tif (reason === ModalDismissReasons.ESC) {\r\n\t\t\treturn 'by pressing ESC';\r\n\t\t} else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n\t\t\treturn 'by clicking on a backdrop';\r\n\t\t} else {\r\n\t\t\treturn `with: ${reason}`;\r\n\t\t}\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/tax-type/tax-type.component.ts","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\n\r\nimport { ConditionService } from '../../services/condition.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { Condition } from '../../models/condition.model';\r\nimport * as $ from 'jquery';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSort, MatPaginator, MatDialog, MatTableDataSource } from '@angular/material';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, NgbModalRef, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n@Component({\r\n    selector: 'app-conditions',\r\n    template: require('./conditions.component.html'),\r\n    styles: [require('./conditions.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Conditions component*/\r\nexport class ConditionsComponent implements OnInit, AfterViewInit {\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    actionamecolle: any[]=[];\r\n    condition_Name: any = \"\";\r\n    description: any = \"\";\r\n    memo: any = \"\";\r\n    createdBy: any = \"\";\r\n    updatedBy: any = \"\";\r\n    createdDate: any = \"\";\r\n    updatedDate: any = \"\";\r\n\r\n    auditHisory: AuditHistory[];\r\n    /** Conditions ctor */\r\n   \r\n    cols: any[];\r\n    selectedColumns: any[];\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    displayedColumns = ['conditionId', 'discription',  'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n    dataSource: MatTableDataSource<Condition>;\r\n    allConditionInfo: Condition[] = [];\r\n    sourceAction: Condition;\r\n    loadingIndicator: boolean;\r\n    actionForm: FormGroup;\r\n    title: string = \"Create\";\r\n    id: number;\r\n    errorMessage: any;\r\n    private isEditMode: boolean = false;\r\n    private isDeleteMode: boolean = false;\r\n    allComapnies: MasterCompany[];\r\n    private isSaving: boolean;\r\n    modal: NgbModalRef;\r\n    selectedColumn: Condition[];\r\n    conditionName: string;\r\n    filteredBrands: any[];\r\n    localCollection: any[] = [];\r\n    Active: string = \"Active\";\r\n    /** Currency ctor */\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private _fb: FormBuilder, private alertService: AlertService, private masterComapnyService: MasterComapnyService, private modalService: NgbModal, public conditionService: ConditionService, private dialog: MatDialog) {\r\n        this.displayedColumns.push('action');\r\n        this.dataSource = new MatTableDataSource();\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        this.loadData();\r\n        this.cols = [\r\n            //{ field: 'conditionId', header: 'Condition ID' },\r\n           \r\n\t\t\t{ field: 'description', header: 'Condition Name' },\r\n\t\t\t{ field: 'memo', header: 'Memo' },\r\n            { field: 'createdBy', header: 'Created By' },\r\n            { field: 'updatedBy', header: 'Updated By' },\r\n           // { field: 'updatedDate', header: 'Updated Date' },\r\n            //{ field: 'createdDate', header: 'Created Date' }\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-conditions';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    private loadData() {\r\n        // debugger;\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.conditionService.getConditionList().subscribe(\r\n            results => this.onDataLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n    public applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n\r\n    private refresh() {\r\n        // Causes the filter to refresh there by updating with recently added data.\r\n        this.applyFilter(this.dataSource.filter);\r\n    }\r\n    private onDataLoadSuccessful(getConditionList: Condition[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getConditionList;\r\n\r\n        this.allConditionInfo = getConditionList;\r\n    }\r\n\r\n    private onDataLoadFailed(error: any) {\r\n        // alert(error);\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n    }\r\n    private onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.allComapnies = allComapnies;\r\n\r\n    }\r\n\r\n\r\n\topen(content) {\r\n\t\tthis.disableSave = false;\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = false;\r\n\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\t\tthis.sourceAction = new Condition();\r\n\t\tthis.sourceAction.isActive = true;\r\n        this.conditionName = \"\";\r\n\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n\r\n\r\n\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.sourceAction = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    private loadMasterCompanies() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.masterComapnyService.getMasterCompanies().subscribe(\r\n            results => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n\r\n    }\r\n    openEdit(content, row) {\r\n\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.disableSave = false;\r\n        this.isSaving = true;\r\n        this.loadMasterCompanies();\r\n\r\n\r\n\r\n        this.sourceAction = row;\r\n        this.conditionName = this.sourceAction.description;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    openHist(content, row) {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n\r\n        this.sourceAction = row;\r\n\r\n\r\n\r\n        this.isSaving = true;\r\n\r\n        this.conditionService.historyCondition(this.sourceAction.conditionId).subscribe(\r\n            results => this.onHistoryLoadSuccessful(results[0], content),\r\n            error => this.saveFailedHelper(error));\r\n\r\n\r\n    }\r\n    openView(content, row) {\r\n\r\n        this.sourceAction = row;\r\n        this.condition_Name = row.description;\r\n       this.memo = row.memo;\r\n        this.createdBy = row.createdBy;\r\n        this.updatedBy = row.updatedBy;\r\n        this.createdDate = row.createdDate;\r\n        this.updatedDate = row.updatedDate;\r\n        this.loadMasterCompanies();\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    openHelpText(content) {\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    eventHandler(event) {\r\n        let value = event.target.value.toLowerCase();\r\n        if (this.selectedActionName) {\r\n            if (value == this.selectedActionName.toLowerCase()) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n            }\r\n            else {\r\n                this.disableSave = false;\r\n            }\r\n        }\r\n    }\r\n    partnmId(event) {\r\n        //debugger;\r\n\t\tfor (let i = 0; i < this.allConditionInfo.length; i++) {\r\n\t\t\tif (event == this.allConditionInfo[i].description) {\r\n                //alert(\"Action Name already Exists\");\r\n                this.disableSave = true;\r\n                this.selectedActionName = event;\r\n            }\r\n        }\r\n    }\r\n    filterconditions(event) {\r\n\r\n        this.localCollection = [];\r\n        for (let i = 0; i < this.allConditionInfo.length; i++) {\r\n            let conditionName = this.allConditionInfo[i].description;\r\n            if (conditionName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n                this.actionamecolle.push([{\r\n                    \"chargeId\": this.allConditionInfo[i].conditionId,\r\n                    \"conditionName\": conditionName\r\n                }]),\r\n\r\n                this.localCollection.push(conditionName);\r\n            }\r\n        }\r\n    }\r\n    private onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.auditHisory = auditHistory;\r\n\r\n\r\n        this.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n\r\n\r\n    }\r\n    handleChange(rowData, e) {\r\n        if (e.checked == false) {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"In Active\";\r\n            this.sourceAction.isActive == false;\r\n            this.conditionService.updateCondition(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n        else {\r\n            this.sourceAction = rowData;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.Active = \"Active\";\r\n            this.sourceAction.isActive == true;\r\n            this.conditionService.updateCondition(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n            //alert(e);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    editItemAndCloseModel() {\r\n\r\n        // debugger;\r\n\r\n        this.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n            this.sourceAction.createdBy = this.userName;\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.conditionName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.conditionService.newAddCondition(this.sourceAction).subscribe(\r\n                role => this.saveSuccessHelper(role),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n\r\n            this.sourceAction.updatedBy = this.userName;\r\n            this.sourceAction.description = this.conditionName;\r\n              this.sourceAction.masterCompanyId= 1;\r\n            this.conditionService.updateCondition(this.sourceAction).subscribe(\r\n                response => this.saveCompleted(this.sourceAction),\r\n                error => this.saveFailedHelper(error));\r\n        }\r\n\r\n        this.modal.close();\r\n    }\r\n\r\n    deleteItemAndCloseModel() {\r\n        this.isSaving = true;\r\n        this.sourceAction.updatedBy = this.userName;\r\n        this.conditionService.deleteCondition(this.sourceAction.conditionId).subscribe(\r\n            response => this.saveCompleted(this.sourceAction),\r\n            error => this.saveFailedHelper(error));\r\n        this.modal.close();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    private saveCompleted(user?: Condition) {\r\n        this.isSaving = false;\r\n\r\n        if (this.isDeleteMode == true) {\r\n            this.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n            this.isDeleteMode = false;\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    private saveSuccessHelper(role?: Condition) {\r\n        this.isSaving = false;\r\n        this.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/conditions/conditions.component.ts","import { Component, ViewChild, OnInit, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { ATAMain } from '../../models/atamain.model';\r\nimport { AtaMainService } from '../../services/atamain.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { MasterCompany } from '../../models/mastercompany.model'\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { MessageSeverity, AlertService } from '../../services/alert.service';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { Site } from '../../models/site.model';\r\nimport { LegalEntityService } from '../../services/legalentity.service';\r\nimport { TreeNode, MenuItem } from 'primeng/api';\r\n@Component({\r\n\tselector: 'app-site',\r\n\ttemplate: require('./site.component.html'),\r\n\tstyles: [require('./site.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** site component*/\r\nexport class SiteComponent implements OnInit, AfterViewInit {\r\n\tdisableSaveSiteName: boolean;\r\n\tpublic sourceSite: any = {};\r\n\r\n\tsiteId: any;\r\n\tsiteName: any;\r\n\taddress1: any;\r\n\taddress2: any;\r\n\taddress3: any;\r\n\tcity: any;\r\n\tstate: any;\r\n\tcountry: any;\r\n\tpostalCode: any;\r\n\tmemo: any = \"\";\r\n\tcreatedBy: any = \"\";\r\n\tupdatedBy: any = \"\";\r\n\tcreatedDate: any = \"\";\r\n\tupdatedDate: any = \"\";\r\n\tname: any;\r\n\r\n\taddressId: any;\r\n\tcountrycollection: any;\r\n\tcountryName: string;\r\n\tallCountryinfo: any[];\r\n\r\n\tlocalCollection: any[] = [];\r\n\t\r\n\t\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\tdataSource: MatTableDataSource<any>;\r\n\tshowLable: boolean;\r\n\tcloseCmpny: boolean = true;\r\n\tloadingIndicator: boolean;\r\n\tmodal: NgbModalRef;\r\n\taction_name: any = \"\";\r\n\tprivate isSaving: boolean;\r\n\tactionName: string;\r\n\tallComapnies: MasterCompany[] = [];\r\n\tpublic auditHisory: AuditHistory[] = [];\r\n\tallSites: Site[] = [];\r\n\tdisplayedColumns = ['SiteId', 'name', 'Address1', 'Address2', 'Address3', 'City', 'StateOrProvince', 'Country','PostalCode', 'Memo', 'createdBy', 'updatedBy', 'updatedDate', 'createdDate'];\r\n\tselectedColumn: Site[];\r\n\tselectedColumns: any[];\r\n\tcols: any[];\r\n\tsite_Name: any = \"\";\r\n    selectedActionName: any;\r\n    disableSave: boolean;\r\n    stateOrProvince: any;\r\n    allManagemtninfo: any[];\r\n\tgridData: TreeNode[];//Managemnt\r\n\tgridData1: TreeNode[];//Managemnt\r\n\tcols1: any[];\r\n\tlocalSelectedManagement : any[]=[];\r\n\tselectedManagementValues: any;\r\n\tindex: any;\r\n\tselectedNodes3: any;\r\n\tselectedNodeTest: TreeNode[];\r\n\tsiteInfo: Site;\r\n    localManagementSiteCollection: any;\r\n\tlocalManagementSiteEditCollection: TreeNode[];\r\n\tActive: string = \"Active\";\r\n\tactionamecolle: any[] = [];\r\n    selectedSiteName: any;\r\n    disableSaveManufacturer: boolean;\r\n    selectedSite: any;\r\n    siteNamecolle: any;\r\n\tngOnInit(): void {\r\n\t\t//This Headers will Place in Html\r\n\t\tthis.cols = [\r\n\t\t\t\r\n\t\t\t{ field: 'siteId', header: 'Site ID' },\r\n\t\t\t{ field: 'name', header: 'Site Name' },\r\n\t\t\t{ field: 'address1', header: 'Address Line 1' },\r\n\t\t\t{ field: 'address2', header: 'Address Line 2' },\r\n\t\t\t{ field: 'address3', header: 'Address Line 3' },\r\n\t\t\t{ field: 'city', header: 'City' },\r\n\t\t\t{ field: 'stateOrProvince', header: 'State' },\r\n\t\t\t{ field: 'country', header: 'Country' },\r\n\t\t\t{ field: 'postalCode', header: 'Zip Code' },\r\n\t\t\t{ field: 'memo', header: 'memo' }\r\n\t\t];\r\n\r\n\t\tthis.loadData(); //Calling Method\r\n\t\tthis.loadManagementdata(); //Calling Management Data\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-site';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\t/** site ctor */\r\n\tconstructor(public manageMentService: LegalEntityService,private breadCrumb: SingleScreenBreadcrumbService, private http: HttpClient, public ataservice: AtaMainService, private changeDetectorRef: ChangeDetectorRef, private router: Router, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: SiteService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\tthis.sourceSite = new Site();\r\n\r\n\t}\r\n\r\n\tclosethis() {\r\n\t\tthis.closeCmpny = false;\r\n\t}\r\n\r\n\t\r\n\tpublic allWorkFlows: Site[] = [];\r\n\r\n\tprivate loadData()  //retriving Information\r\n\t{\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.workFlowtService.getSiteList().subscribe(\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]), //Pasing first Array and calling Method\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t//private atamaindata() {\r\n\t//\tthis.alertService.startLoadingMessage();\r\n\t//\tthis.loadingIndicator = true;\r\n\r\n\t//\tthis.ataservice.getAtaMainList().subscribe(onloadmaster\r\n\t//\t\tresults => this.onSuccessful(results[0]),\r\n\t//\t\terror => this.onDataLoadFailed(error)\r\n\t//\t);\r\n\t//}\r\n\r\n\t//private onSuccessful(getAtaMainList: ATAMain[]) {\r\n\t//\t// alert('success');\r\n\t//\tthis.alertService.stopLoadingMessage();\r\n\t//\tthis.loadingIndicator = false;\r\n\t//\t//this.dataSource.data = getAtaMainList;\r\n\t//\tthis.allATAMaininfo = getAtaMainList;\r\n\t//}\r\n\r\n\thandleChange(rowData, e)\r\n\t{\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourceSite = rowData;\r\n\t\t\tthis.sourceSite.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourceSite.isActive == false;\r\n\t\t\tthis.workFlowtService.updateSite(this.sourceSite).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceSite),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourceSite = rowData;\r\n\t\t\tthis.sourceSite.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourceSite.isActive == true;\r\n\t\t\tthis.workFlowtService.updateSite(this.sourceSite).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceSite),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate loadManagementdata() //Loading Management Structure Data\r\n\t{\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.manageMentService.getManagemententity().subscribe(\r\n\t\t\tresults => this.onManagemtntdataLoad(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\r\n\tprivate onManagemtntdataLoad(getAtaMainList: any[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getAtaMainList;\r\n\t\tthis.allManagemtninfo = getAtaMainList;\r\n\t\t//debugger;\r\n\t\tif (this.allManagemtninfo) {\r\n\t\t\tthis.gridData = this.makeNestedObj(this.allManagemtninfo, null);\r\n\t\t}\r\n\r\n\t\tthis.cols1 = [\r\n\t\t\t{ field: 'code', header: 'Code' },\r\n\t\t\t{ field: 'description', header: 'Description' },\r\n\t\t\t{ field: 'legalEntityId', header: 'ID' },\r\n\t\t];\r\n\t}\r\n\r\n\tmakeNestedObj(arr, parent)\r\n\t{\r\n\t\tvar out = []\r\n\t\tfor (var i in arr) {\r\n\t\t\tif (arr[i].parentId == parent) {\r\n\t\t\t\tvar children = this.makeNestedObj(arr, arr[i].managementStructureId)\r\n\t\t\t\tarr[i] = { \"data\": arr[i] };\r\n\t\t\t\tif (children.length) {\r\n\t\t\t\t\tarr[i].children = children\r\n\t\t\t\t}\r\n\t\t\t\tout.push(arr[i])\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn out\r\n\t}\r\n\r\n\tmakeNestedObj1(child, arr, parent)\r\n\t{\r\n\r\n\t\tvar out = []\r\n\t\tif (child) {\r\n\t\t\tfor (var i = 0; i < child.length; i++)\r\n\t\t\t{\r\n\t\t\t\tfor (var j = 0; j < arr.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (arr[j].data)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (child[i].managementStructureId == arr[j].data.managementStructureId) {\r\n\t\t\t\t\t\t\tarr[j].data.managementSiteId = child[i].managementSiteId;\r\n\t\t\t\t\t\t\tarr[j].data.siteId = child[i].siteId;\r\n\t\t\t\t\t\t\tout.push(arr[j]);\r\n\t\t\t\t\t\t\tconsole.log(arr[j].data);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (child[i].managementStructureId == arr[j].managementStructureId)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\tarr[j].data.managementSiteId = child[i].managementSiteId;\r\n\t\t\t\t\t\t\tarr[j].data.siteId = child[i].siteId;\r\n\t\t\t\t\t\t\tout.push(arr[j]);\r\n\t\t\t\t\t\t\tconsole.log(arr[j].data);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn out;\r\n\t}\r\n\r\n\tnodeSelect(event) {\r\n\t\tdebugger;\r\n\t\t//event.node = selected node\r\n\t\tconsole.log(\"selected node\", event, event.node);\r\n\t}\r\n\r\n\tmanagementStructureClick(data)\r\n\t{\r\n\t\tconsole.log(this.selectedNodeTest);\r\n\t\t//this.localSelectedManagement.push(this.selectedNodeTest);\r\n\t\t//console.log(this.localSelectedManagement);\r\n\t\t//let j = this.localSelectedManagement.length; //for Getting Selected Data Based on Click Event\r\n\t\t//if (j > 0)\r\n\t\t//{\r\n\t\t//\tlet spliceed:boolean = true;\r\n\t\t//\tfor (let i in this.localSelectedManagement)\r\n\t\t//\t{\r\n\t\t//\t\tthis.index = i;\r\n\t\t//\t\tif (data.managementStructureId == this.localSelectedManagement[i].managementStructureId)\r\n\t\t//\t\t{\r\n\t\t//\t\t\tconsole.log(\"entered\");\r\n\t\t//\t\t\tconsole.log(this.index);\r\n\t\t//\t\t\tthis.localSelectedManagement.splice(this.index,1);\r\n\t\t//\t\t\tspliceed = false;\r\n\t\t//\t\t}\r\n\t\t//\t}\r\n\r\n\t\t//\tif (spliceed)\r\n\t\t//\t{\r\n\t\t//\t\tdata.selectedManagementValues = true;\r\n\t\t//\t\tthis.localSelectedManagement.push(data);\r\n\t\t//\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t//}\r\n\t\t//else\r\n\t\t//{\r\n\t\t//\tdata.selectedManagementValues = true;\r\n\t\t//\tthis.localSelectedManagement.push(data);\r\n\t\t//}\r\n\t\t\r\n\t}\r\n\t\r\n\t//ApplyFilter\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\r\n\r\n\t//Refresh\r\n\tprivate refresh() {\r\n\t\t// Causes the filter to refresh there by updating with recently added data.\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\t//OnDataLoadSuccessful\r\n\tprivate onDataLoadSuccessful(getSiteList: Site[]) {\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getSiteList; //need\r\n\t\tthis.allSites = getSiteList; //Contain first array of Loaded table Data will put in Html as [value]\r\n\r\n\t\t//console.log(this.allSites);\r\n\r\n\r\n\t}\r\n\r\n\t//OnDataLoadFailed\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\r\n\t//OnDataMasterCompaniesLoadSuccessful\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\r\n\r\n\r\n\t//LoadMasterCompanies\r\n\tprivate loadMasterCompanies()\r\n\t{\r\n\r\n\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\t//Getting Master Company Data\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t//Open\r\n\topen(content) //it will Open Form and Creating New Site Object\r\n\t{\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.loadManagementdata(); //Calling Management Data\r\n\t\tthis.disableSaveManufacturer = false;\r\n\t\tthis.sourceSite = new Site(); //Creating sourceSite Object and use in [(ngModel)]\r\n\t\tthis.name = \"\";\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\t\r\n\t//OpenDelete\r\n\topenDelete(content, row) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourceSite = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t} \r\n\r\n\tlocalManagementSiteCollectionEdit(data)\r\n\t{\r\n\t\tconsole.log(data);\r\n\t}\r\n\t//OpenEdit\r\n\topenEdit(content, row) {\r\n\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.isSaving = true; \r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.disableSaveManufacturer = false;\r\n\t\tthis.sourceSite = row;\r\n\t\t//Getting ManagementSite Data\r\n\t\tthis.workFlowtService.getManagementSiteEditData(this.sourceSite.siteId).subscribe(data11 => {\r\n\t\t\tthis.localManagementSiteEditCollection = data11; //local SiteManagement Data for Edit Collection\r\n\t\t\tif (this.localManagementSiteEditCollection)\r\n\t\t\t{\r\n\t\t\t\tif (this.gridData)\r\n\t\t\t\t{\r\n\t\t\t\t\t//this.gridData = this.makeNestedObj(this.localManagementSiteEditCollection, null);\r\n\t\t\t\t\tthis.gridData1 = this.makeNestedObj1(this.localManagementSiteEditCollection, this.allManagemtninfo, null);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.gridData = this.makeNestedObj(this.allManagemtninfo, null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//this.selectedNodeTest = this.localManagementSiteEditCollection;\r\n\t\t\tthis.selectedNodeTest = this.gridData1;\r\n\t\t})\r\n\t\tthis.name = this.sourceSite.name;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//OpenHist\r\n\topenHist(content, row) {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.sourceSite = row;\r\n\t\tthis.workFlowtService.historySite(this.sourceSite.siteId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t}\r\n\r\n\t//OpenView\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourceSite = row;\r\n\t\tthis.name = row.name;\r\n\t\tthis.address1 = row.address1;\r\n\t\tthis.address2 = row.address2;\r\n\t\tthis.address3 = row.address3;\r\n\t\tthis.city = row.city;\r\n\t\tthis.stateOrProvince = row.stateOrProvince;\r\n\t\tthis.country = row.country;\r\n\t\tthis.postalCode = row.postalCode;\r\n\t\tthis.memo = row.memo;\r\n\r\n\t\tthis.createdBy = row.createdBy;\r\n\t\tthis.updatedBy = row.updatedBy;\r\n\t\tthis.createdDate = row.createdDate;\r\n\t\tthis.updatedDate = row.updatedDate;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//OpenHelpText\r\n\topenHelpText(content) {\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\tManufacturerdescription(event)\r\n\t{\r\n\t\t//\r\n\t\tif (this.allSites) {\r\n\t\t\t\r\n\t\t\tfor (let i = 0; i < this.actionamecolle.length; i++) {\r\n\t\t\t\tif (event == this.actionamecolle[i][0].siteName) {\r\n\t\t\t\t\t//this.sourceSite.name = this.allSites[i][0].name;\r\n\t\t\t\t\tthis.disableSaveManufacturer = true;\r\n\r\n\t\t\t\t\tthis.selectedSite = event;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tManufacturerHandler(event) //auto suzition start hear and value will pass to \r\n\t{\r\n\t\t\r\n\t\tif (event.target.value != \"\") {\r\n\t\t\tlet value = event.target.value.toLowerCase();\r\n\t\t\tif (this.selectedSite) {\r\n\t\t\t\tif (value == this.selectedSite.toLowerCase()) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disableSaveManufacturer = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.disableSaveManufacturer = false;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//filtermanufacturer(event) {\r\n\r\n\t//\tthis.localCollection = [];\r\n\t//\tfor (let i = 0; i < this.allSites.length; i++) {\r\n\t//\t\tlet name = this.allSites[i].name;\r\n\t//\t\tif (name.toLowerCase().indexOf(event.query.toLowerCase()) == 0)\r\n\t//\t\t{\r\n\t//\t\t\tthis.siteNamecolle.push([{\r\n\t//\t\t\t\t\"siteId\": this.allSites[i].siteId,\r\n\t//\t\t\t\t\"name\": name\r\n\t//\t\t\t}]),\r\n\t//\t\t\t\tthis.localCollection.push(name)\r\n\r\n\t//\t\t}\r\n\t//\t}\r\n\t//}\r\n\r\n\r\n\t//partnmId(event) {\r\n\t//\t//debugger;\r\n\t//\tfor (let i = 0; i < this.actionamecolle.length; i++) {\r\n\t//\t\tif (event == this.actionamecolle[i][0].gLAccountCategoryName) {\r\n\t//\t\t\t//alert(\"Action Name already Exists\");\r\n\t//\t\t\tthis.disableSave = true;\r\n\t//\t\t\tthis.selectedSiteName = event;\r\n\t//\t\t}\r\n\t//\t}\r\n\t//}\r\n\r\n\t//eventHandler(event) {\r\n\t//\tif (event.target.value != \"\") {\r\n\t//\t\tlet value = event.target.value.toLowerCase();\r\n\t//\t\tif (this.selectedSiteName) {\r\n\t//\t\t\tif (value == this.selectedSiteName.toLowerCase()) {\r\n\t//\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t//\t\t\t\tthis.selectedSiteName = true;\r\n\r\n\t//\t\t\t}\r\n\t//\t\t\telse {\r\n\t//\t\t\t\tthis.disableSaveManufacturer = false;\r\n\r\n\t//\t\t\t}\r\n\t//\t\t}\r\n\r\n\t//\t}\r\n\t//}\r\n\r\n\tfiltermanufacturer(event) // will call when we click droup down button\r\n\t{\r\n\r\n\t\tthis.localCollection = [];\r\n\t\tfor (let i = 0; i < this.allSites.length; i++) {\r\n\t\t\tlet siteName = this.allSites[i].name;\r\n\t\t\tif (siteName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\tthis.actionamecolle.push([{\r\n\t\t\t\t\t\"siteId\": this.allSites[i].siteId,\r\n\t\t\t\t\t\"siteName\": siteName\r\n\t\t\t\t}]),\r\n\t\t\t\t\tthis.localCollection.push(siteName)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\r\n\t\r\n\r\n\t//DeleteItemAndCloseModel\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourceSite.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deleteSite(this.sourceSite.siteId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourceSite),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\r\n\t\t////tryed for Management Delete But not Need \r\n\t\t//this.workFlowtService.deleteManagementSite(this.sourceSite.siteId).subscribe(\r\n\t\t//\terror => this.saveFailedHelper(error));\r\n\t\t//this.modal.close();\r\n\t}\r\n\r\n\r\n\t//OnHistoryLoadSuccessful\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n\t}\r\n\r\n\r\n\t\r\n\r\n\r\n\t\r\n\r\n\r\n\t//SaveCompleted\r\n\tprivate saveCompleted(user?: Site) {\r\n\t\tthis.isSaving = false;\r\n\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\t//SaveSuccessHelper\r\n\tprivate saveSuccessHelper(role?: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\r\n\t//DismissModel\r\n\tpublic dismissModel() {\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\t//SaveSuccessCompleted\r\n\tprivate savesuccessCompleted(user?: any)\r\n\t{\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\tpublic saveManagement(siteId, data1) //retriving SiteManagement Array\r\n\t{\r\n\t\tdebugger;\r\n\t\tfor (let i = 0; i < data1.length; i++) {\r\n\t\t\tif (data1[i].data.managementStructureId != null) {\r\n\t\t\t\tdata1[i].data.siteId = siteId;\r\n\t\t\t\tthis.workFlowtService.newManagementSite(data1[i].data).subscribe(data11 =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.localManagementSiteCollection = data11; //local SiteManagement Data\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\t\r\n\r\n\t//GetUserName\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\r\n\r\n\t//SaveFailedHelper\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured while saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\r\n\t\r\n\t//EditItem\r\n\teditItemAndCloseModel()\r\n\t{\r\n\t\tthis.isSaving = true;\r\n\t\tif (this.isEditMode == false)\r\n\t\t{\r\n\t\t\tthis.sourceSite.createdBy = this.userName;\r\n\t\t\tthis.sourceSite.updatedBy = this.userName;\r\n\t\t\tthis.sourceSite.masterCompanyId = 1;\r\n\t\t\tthis.sourceSite.name = this.name;\r\n\t\t\t\r\n\t\t\tthis.workFlowtService.newSite(this.sourceSite).subscribe(data => {\r\n\t\t\t\tthis.siteInfo = data;\r\n\t\t\t\t//retrive after enter siteid get and submit managementsite\r\n\t\t\t\tif (data != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.saveManagement(data.siteId, this.selectedNodeTest); //pushing Site Management Need Site Value so after getting SiteId we are calling\r\n\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\tthis.loadData();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\r\n\t\t\tthis.sourceSite.updatedBy = this.userName;\r\n\t\t\tthis.sourceSite.name = this.name;\r\n\t\t\tthis.sourceSite.masterCompanyId = 1;\r\n\t\t\tthis.workFlowtService.updateSite(this.sourceSite).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceSite),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\r\n\t\t\tthis.workFlowtService.deleteManagementSite(this.selectedNodeTest).subscribe(data => {\r\n\t\t\t});\r\n\r\n\t\t\tthis.saveManagement(this.selectedNodeTest[0].data.siteId, this.selectedNodeTest); // will call ManagementSite Edit Data\r\n\r\n\t\t\t\r\n\r\n\t\t\tthis.selectedNodeTest = []; //after Edit making empty\r\n\t\t}\r\n\r\n\t\tthis.modal.close();\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\t\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/site/site.component.ts","import { Component, ViewChild, OnInit, AfterViewInit, ChangeDetectorRef, OnChanges } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { ATAMain } from '../../models/atamain.model';\r\nimport { AtaMainService } from '../../services/atamain.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { MasterCompany } from '../../models/mastercompany.model'\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { MessageSeverity, AlertService } from '../../services/alert.service';\r\nimport { SiteService } from '../../services/site.service';\r\nimport { WarehouseService } from '../../services/warehouse.service';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { Site } from '../../models/site.model';\r\nimport { Warehouse } from '../../models/warehouse.model';\r\nimport { TreeNode, MenuItem } from 'primeng/api';\r\nimport { LegalEntityService } from '../../services/legalentity.service';\r\n@Component({\r\n    selector: 'app-warehouse',\r\n    template: require('./warehouse.component.html'),\r\n\tstyles: [require('./warehouse.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** warehouse component*/\r\nexport class WarehouseComponent implements OnInit, AfterViewInit{\r\n\tdisableSaveSiteName: boolean;\r\n\r\n\tpublic sourceWarehouse: any = {};\r\n\r\n\taddressId: any;\r\n\twareHouseID: any;\r\n\r\n\twareHouseName: any;\r\n\tsiteName: any;\r\n\tmemo: any = \"\";\r\n\r\n\taddress1: any=\"\";\r\n\taddress2: any=\"\";\r\n\taddress3: any=\"\";\r\n\tcity: any=\"\";\r\n\tstate: any=\"\";\r\n\tcountry: any=\"\";\r\n\tpostalCode: any=\"\";\r\n\t\r\n\tcreatedBy: any = \"\";\r\n\tupdatedBy: any = \"\";\r\n\tcreatedDate: any = \"\";\r\n\tupdatedDate: any = \"\";\r\n\r\n\tsiteId: any;\r\n\twarehouseId: any;\r\n\tname: any;\r\n\r\n\tcountrycollection: any;\r\n\tcountryName: string;\r\n\tallCountryinfo: any[];\r\n\t\r\n\tlocalCollection: any[] = [];\r\n\t\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\tdataSource: MatTableDataSource<any>;\r\n\tshowLable: boolean;\r\n\tcloseCmpny: boolean = true;\r\n\tloadingIndicator: boolean;\r\n\tmodal: NgbModalRef;\r\n\taction_name: any = \"\";\r\n\tprivate isSaving: boolean;\r\n\tactionName: string;\r\n\tallComapnies: MasterCompany[] = [];\r\n\tpublic auditHisory: AuditHistory[] = [];\r\n\tallActions: Warehouse[] = [];\r\n\tdisplayedColumns = ['siteId', 'name', 'siteName', 'address1', 'address2', 'address3', 'city', 'stateOrProvince', 'country', 'postalCode','memo'];\r\n\tselectedColumn: Site[];\r\n\tselectedColumns: any[];\r\n\tcols: any[];\r\n\twarehouse_Name: any = \"\";\r\n    allWareHouses: any[];\r\n    stateOrProvince: any;\r\n    zipCode: any;\r\n\tlocalWareHouseCollction: any[];\r\n\tallSites: any[]=[];\r\n    selectedSiteIdValue: string;\r\n    selectedSiteIdNumber: Number;\r\n    allAddress: any[]=[];\r\n\tshowAddress: boolean;\r\n\r\n\tgridData: TreeNode[];//Managemnt\r\n\tgridData1: TreeNode[];//Managemnt\r\n\tgridData2: TreeNode[];//Managemnt\r\n\r\n\tcols1: any[];\r\n    allManagemtninfo: any[];\r\n    selectedNodeTest: any;\r\n    localManagementWarehouseCollection: any;\r\n\tshowManagement: boolean;\r\n\tActive: string = \"Active\";\r\n    localSiteManagementWarehouseCollection: any;\r\n\tactionamecolle: any[] = [];\r\n\tdisableSaveManufacturer: boolean = false;\r\n    selectedWareHouse: any;\r\n    warehouseName: any;\r\n\r\n\tngOnInit(): void\r\n\t{\r\n\t\tthis.cols = [\r\n\t\t\t{ field: 'warehouseId', header: 'WareHosue Id' },\r\n\t\t\t{ field: 'name', header: 'Warehouse Name' },\r\n\t\t\t{ field: 'siteName', header: 'Site Name' },\r\n\t\t\t{ field: 'address1', header: 'Address Line 1' },\r\n\t\t\t{ field: 'address2', header: 'Address Line 2' },\r\n\t\t\t{ field: 'address3', header: 'Address Line 3' },\r\n\t\t\t{ field: 'city', header: 'City' },\r\n\t\t\t{ field: 'stateOrProvince', header: 'State' },\r\n\t\t\t{ field: 'country', header: 'Country' },\r\n\t\t\t{ field: 'postalCode', header: 'Zip Code' },\r\n\t\t\t{ field: 'memo', header: 'memo' }\r\n\t\t\t//{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t//{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t\t//{ field: 'updatedDate', header: 'Updated Date' },\r\n\t\t\t//{ field: 'createdDate', header: 'createdDate' }\r\n\t\t];\r\n\r\n        this.loadData();\r\n        this.loadManagementdata();//loading Management Data\r\n\t\tthis.loadSiteData();\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-warehouse';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n\t\r\n\t\r\n\r\n\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\t/** site ctor */\r\n    constructor(public manageMentService: LegalEntityService,public workFlowtService1: SiteService,private breadCrumb: SingleScreenBreadcrumbService, private http: HttpClient, public ataservice: AtaMainService, private changeDetectorRef: ChangeDetectorRef, private router: Router, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: WarehouseService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\tthis.sourceWarehouse = new Warehouse(); //change\r\n\r\n\t}\r\n\r\n\tclosethis() {\r\n\t\tthis.closeCmpny = false;\r\n\t}\r\n\r\n\thandleChange(rowData, e) {\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourceWarehouse = rowData;\r\n\t\t\tthis.sourceWarehouse.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourceWarehouse.isActive == false;\r\n\t\t\tthis.workFlowtService.updateWarehouse(this.sourceWarehouse).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceWarehouse),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourceWarehouse = rowData;\r\n\t\t\tthis.sourceWarehouse.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourceWarehouse.isActive == true;\r\n\t\t\tthis.workFlowtService.updateWarehouse(this.sourceWarehouse).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceWarehouse),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsiteValueChange(data) //Site Valu Selection in Form\r\n\t{\r\n\t\tthis.showAddress = true;\r\n\t\tthis.showManagement = true;\r\n\t\tconsole.log(this.sourceWarehouse.siteId);\r\n\t\t\r\n\r\n\t\tthis.workFlowtService.getAddressDate(this.sourceWarehouse.siteId).subscribe( //calling and Subscribing for Address Data\r\n\t\t\tresults => this.addressDataArray(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t\tthis.workFlowtService.getManagementSiteData(this.sourceWarehouse.siteId).subscribe(\r\n\t\t\tdata2 => {\r\n\t\t\t\tthis.localSiteManagementWarehouseCollection = data2; //local SiteManagement Site Data for Site Date Selected\r\n\t\t\t\tthis.gridData2 = this.makeNestedObj1(this.localSiteManagementWarehouseCollection, this.allManagemtninfo, null);\r\n\t\t\t\tthis.selectedNodeTest = this.gridData2;\r\n\t\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tselectedManagementSiteData(data: any)\r\n\t{\r\n\r\n\t}\r\n\r\n\r\n\taddressDataArray(data:any) //Getting Address\r\n\t{\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tif (data) {\r\n\t\tthis.allAddress = data;\r\n\t\tthis.address1 = data.address1;\r\n\t\tthis.address2 = data.address2;\r\n\t\tthis.address3 = data.address3;\r\n\t\tthis.city = data.city;\r\n\t\tthis.country = data.country;\r\n\t\tthis.postalCode = data.postalCode;\r\n\t\tthis.stateOrProvince = data.stateOrProvince;\r\n\t\t}\r\n\t\t //Storing Address Details\r\n\t\t\r\n\t}\r\n\r\n\tpublic allWorkFlows: Warehouse[] = [];\r\n\r\n\tprivate loadData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.workFlowtService.getWarehouseList().subscribe( //change\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t\t\r\n\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\r\n\t//private loadSiteAddressData()\r\n\t//{\r\n\t//\tthis.alertService.startLoadingMessage();\r\n\t//\tthis.loadingIndicator = true;\r\n\r\n\t//\tthis.workFlowtService.getWarehouseList().subscribe( //change\r\n\t//\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t//\t\terror => this.onDataLoadFailed(error)\r\n\t//\t);\r\n\t//}\r\n\r\n\tprivate loadSiteData()  //retriving Information\r\n\t{\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.workFlowtService1.getSiteList().subscribe(   //Getting Site List Hear\r\n\t\t\tresults => this.onSaiteDataLoadSuccessful(results[0]), //Pasing first Array and calling Method\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\tprivate onSaiteDataLoadSuccessful(getSiteList: Site[]) {\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getSiteList; //need\r\n\t\tthis.allSites = getSiteList; //Contain first array of Loaded table Data will put in Html as [value]\r\n\r\n\t\t//console.log(this.allSites);\r\n    }\r\n\r\n    private loadManagementdata() //Loading Management Structure Data\r\n    {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.manageMentService.getManagemententity().subscribe(\r\n            results => this.onManagemtntdataLoad(results[0]),\r\n            error => this.onDataLoadFailed(error)\r\n        );\r\n        this.selectedColumns = this.cols;\r\n    }\r\n\r\n    private onManagemtntdataLoad(getAtaMainList: any[]) {\r\n        // alert('success');\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n        this.dataSource.data = getAtaMainList;\r\n        this.allManagemtninfo = getAtaMainList;\r\n        //debugger;\r\n        if (this.allManagemtninfo) {\r\n            this.gridData = this.makeNestedObj(this.allManagemtninfo, null);\r\n        }\r\n\r\n        this.cols1 = [\r\n            { field: 'code', header: 'Code' },\r\n            { field: 'description', header: 'Description' },\r\n            { field: 'legalEntityId', header: 'ID' },\r\n        ];\r\n    }\r\n\r\n    makeNestedObj(arr, parent) {\r\n        var out = []\r\n        for (var i in arr) {\r\n            if (arr[i].parentId == parent) {\r\n                var children = this.makeNestedObj(arr, arr[i].managementStructureId)\r\n                arr[i] = { \"data\": arr[i] };\r\n                if (children.length) {\r\n                    arr[i].children = children\r\n                }\r\n                out.push(arr[i])\r\n            }\r\n        }\r\n        return out\r\n\t}\r\n\r\n\tmakeNestedObj1(child, arr, parent) {\r\n\r\n\t\tvar out = []\r\n\t\tif (child) {\r\n\t\t\tfor (var i = 0; i < child.length; i++)\r\n\t\t\t{\r\n\t\t\t\tfor (var j = 0; j < arr.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (arr[j].data)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (child[i].managementStructureId == arr[j].data.managementStructureId)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tarr[j].data.managementWarehouseId = child[i].managementWarehouseId;\r\n\t\t\t\t\t\t\tarr[j].data.warehouseId = child[i].warehouseId;\r\n\t\t\t\t\t\t\tout.push(arr[j]);\r\n\t\t\t\t\t\t\tconsole.log(arr[j].data);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (child[i].managementStructureId == arr[j].managementStructureId)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tarr[j].data.managementWarehouseId = child[i].managementWarehouseId;\r\n\t\t\t\t\t\tarr[j].data.warehouseId = child[i].warehouseId;\r\n\t\t\t\t\t\tout.push(arr[j]);\r\n\t\t\t\t\t\tconsole.log(arr[j].data);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn out;\r\n\t}\r\n\r\n    public saveManagement(warehouseId, data1) //retriving SiteManagement Array\r\n    {\r\n        debugger;\r\n        for (let i = 0; i < data1.length; i++) {\r\n            if (data1[i].data.managementStructureId != null) {\r\n                data1[i].data.warehouseId = warehouseId;\r\n                this.workFlowtService.newManagementWareHouse(data1[i].data).subscribe(data11 => {\r\n\t\t\t\t\tthis.localManagementWarehouseCollection = data11; //local SiteManagement Data\r\n                })\r\n            }\r\n\t\t}\r\n\t\tthis.loadData();\r\n    }\r\n\r\n    nodeSelect(event) {\r\n        debugger;\r\n        //event.node = selected node\r\n        console.log(\"selected node\", event, event.node);\r\n\t}\r\n\r\n\tManufacturerdescription(event) {\r\n\t\t//\r\n\t\tif (this.allWareHouses) {\r\n\r\n\t\t\tfor (let i = 0; i < this.actionamecolle.length; i++) {\r\n\t\t\t\tif (event == this.actionamecolle[i][0].warehouseName) {\r\n\t\t\t\t\t//this.sourceWarehouse.name = this.allWareHouses[i][0].name;\r\n\t\t\t\t\tthis.disableSaveManufacturer = true;\r\n\r\n\t\t\t\t\tthis.selectedWareHouse = event;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tManufacturerHandler(event) //auto suzition start hear and value will pass to \r\n\t{\r\n\r\n\t\tif (event.target.value != \"\") {\r\n\t\t\tlet value = event.target.value.toLowerCase();\r\n\t\t\tif (this.selectedWareHouse) {\r\n\t\t\t\tif (value == this.selectedWareHouse.toLowerCase()) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disableSaveManufacturer = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.disableSaveManufacturer = false;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tfiltermanufacturer(event) // will call when we click droup down button\r\n\t{\r\n\r\n\t\tthis.localCollection = [];\r\n\t\tfor (let i = 0; i < this.allWareHouses.length; i++) {\r\n\t\t\tlet warehouseName = this.allWareHouses[i].name;\r\n\t\t\tif (warehouseName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\tthis.actionamecolle.push([{\r\n\t\t\t\t\t\"warehouseId\": this.allWareHouses[i].warehouseId,\r\n\t\t\t\t\t\"warehouseName\": warehouseName\r\n\t\t\t\t}]),\r\n\t\t\t\t\tthis.localCollection.push(warehouseName)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    \r\n\r\n\t//ApplyFilter\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\r\n\r\n\t//Refresh\r\n\tprivate refresh() {\r\n\t\t// Causes the filter to refresh there by updating with recently added data.\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\t//OnDataLoadSuccessful\r\n\tprivate onDataLoadSuccessful(getWarehouseList: any[]) {\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = getWarehouseList; //cha\r\n\t\tthis.allWareHouses = getWarehouseList; //cha\r\n\t\t//this.localWareHouseCollction = getWarehouseList;\r\n\t\t\r\n\t\t//console.log(this.allActions);\r\n\r\n\r\n\t}\r\n\r\n\t//OnDataLoadFailed\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\r\n\t//OnDataMasterCompaniesLoadSuccessful\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\r\n\r\n\t//LoadMasterCompanies\r\n\tprivate loadMasterCompanies() {\r\n\r\n\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t//Open\r\n\topen(content) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isSaving = true;\r\n\t\t\r\n\t\tthis.loadMasterCompanies();\r\n\r\n\t\tthis.sourceWarehouse = new Warehouse(); //chang\r\n\t\tthis.loadManagementdata(); //Calling Management Data\r\n\t\tthis.selectedNodeTest = []; //while Open new Node Data Should Be Empty\r\n\t\tthis.disableSaveManufacturer = false;\r\n\t\tthis.address1 = \"\";\r\n\t\tthis.address2 = \"\";\r\n\t\tthis.address3 = \"\";\r\n\t\tthis.city = \"\";\r\n\t\tthis.country = \"\";\r\n\t\tthis.postalCode = \"\";\r\n\t\tthis.stateOrProvince = \"\";\r\n\t\tthis.name = \"\";\r\n\r\n\t\tthis.name = \"\";\r\n\r\n\t\t\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\t\r\n\r\n\t//OpenDelete\r\n\topenDelete(content, row) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourceWarehouse = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\t//OpenEdit\r\n\topenEdit(content, row) {\r\n\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.showManagement = true;\r\n\t\tthis.disableSaveManufacturer = false;\r\n\t\tthis.sourceWarehouse = row;//chang\r\n\t\tif (row.siteId) {\r\n\t\t\tthis.siteValueChange(row.siteId);\r\n\t\t}\r\n\r\n\t\tthis.workFlowtService.getManagementWarehouseEditData(this.sourceWarehouse.warehouseId).subscribe(data11 => {\r\n\t\t\tthis.localManagementWarehouseCollection = data11; //local SiteManagement Data for Edit Collection\r\n\t\t\tif (this.localManagementWarehouseCollection) {\r\n\t\t\t\tif (this.gridData) \r\n\t\t\t\t{\r\n\t\t\t\t\t//this.gridData = this.makeNestedObj(this.localManagementWarehouseCollection, null);\r\n\t\t\t\t\tthis.gridData1 = this.makeNestedObj1(this.localManagementWarehouseCollection, this.allManagemtninfo, null);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.gridData = this.makeNestedObj(this.allManagemtninfo, null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.selectedNodeTest = this.gridData1;\r\n\t\t})\r\n\r\n\t\tthis.name = this.sourceWarehouse.name;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//OpenHist\r\n\topenHist(content, row) {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.sourceWarehouse = row;\r\n\t\tthis.workFlowtService.historyWarehouse(this.sourceWarehouse.warehouseId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t}\r\n\r\n\t//OpenView\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourceWarehouse = row;\r\n\t\tthis.warehouseId = row.WarehouseId;\r\n\t\tthis.warehouse_Name = row.name;\r\n\t\tthis.siteName = row.siteName;\r\n\t\tthis.address1 = row.address1;\r\n\t\tthis.address2 = row.address2;\r\n\t\tthis.address3 = row.address3;\r\n\t\tthis.city = row.city;\r\n\t\tthis.stateOrProvince = row.stateOrProvince;\r\n\t\tthis.country = row.country;\r\n\t\tthis.postalCode = row.postalCode;\r\n\t\tthis.memo = row.memo;\r\n\t\tthis.createdBy = row.createdBy;\r\n\t\tthis.updatedBy = row.updatedBy;\r\n\t\tthis.createdDate = row.createdDate;\r\n\t\tthis.updatedDate = row.updatedDate;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//OpenHelpText\r\n\topenHelpText(content) {\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\t//DeleteItemAndCloseModel\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourceWarehouse.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deleteWarehouse(this.sourceWarehouse.warehouseId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourceWarehouse),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\r\n\t//OnHistoryLoadSuccessful\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n\t}\r\n\r\n\r\n\t\r\n\r\n\r\n\t\r\n\r\n\t//SaveCompleted\r\n\tprivate saveCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\r\n\t\r\n\r\n\r\n\t\r\n\r\n\t//SaveSuccessHelper\r\n\tprivate saveSuccessHelper(role?: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\r\n\t//DismissModel\r\n\tpublic dismissModel() {\r\n\t\tthis.showAddress = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\t//SaveSuccessCompleted\r\n\tprivate savesuccessCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\r\n\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\t\r\n\t//GetUserName\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\r\n\r\n\t//SaveFailedHelper\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured while saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\r\n\r\n\t//EditItem\r\n\teditItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\r\n        if (this.isEditMode == false) {\r\n\t\t\tthis.showAddress = false;\r\n\t\t\tthis.showManagement = false;\r\n            this.sourceWarehouse.createdBy = this.userName;\r\n            this.sourceWarehouse.updatedBy = this.userName;\r\n            this.sourceWarehouse.masterCompanyId = 1;\r\n            this.sourceWarehouse.name = this.name;\r\n            //this.sourceWarehouse.siteId = this.siteId;\r\n            //this.sourceWarehouse.siteID = this.selectedSiteIdValue;\r\n            this.workFlowtService.newWarehouse(this.sourceWarehouse).subscribe(data => {\r\n               \r\n            if (data != null) {\r\n                this.saveManagement(data.warehouseId, this.selectedNodeTest); //pushing Site Management Need Site Value so after getting SiteId we are calling\r\n\r\n            }\r\n\t\t\t})\t\r\n\t\t\tthis.loadData();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.showAddress = true;\r\n\t\t\tthis.showManagement = true;\r\n\t\t\tthis.sourceWarehouse.updatedBy = this.userName;\r\n\t\t\tthis.sourceWarehouse.name = this.name;\r\n\t\t\tthis.sourceWarehouse.masterCompanyId = 1;\r\n\t\t\tthis.workFlowtService.updateWarehouse(this.sourceWarehouse).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceWarehouse),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\r\n\t\t\tthis.workFlowtService.deleteManagementWarehouse(this.selectedNodeTest).subscribe(data => {\r\n\t\t\t\t//alert(\"getting delete\");\r\n\t\t\t});\r\n\t\t\tthis.saveManagement(this.selectedNodeTest[0].data.warehouseId, this.selectedNodeTest); // will call ManagementSite Edit Data\r\n\t\t\tthis.selectedNodeTest = []; //after Edit making empty\r\n\t\t}\r\n\r\n\t\tthis.modal.close();\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\t\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/warehouse/warehouse.component.ts","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\r\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport { ActionService } from '../../services/action.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\n\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { GLAccountCategoryService } from '../../services/glaccount-category.service';\r\nimport { DataTableModule } from 'primeng/datatable';\r\nimport { TableModule } from 'primeng/table'\r\nimport { ButtonModule } from 'primeng/button'\r\nimport { SelectButtonModule } from 'primeng/selectbutton'\r\nimport { InputTextModule } from 'primeng/inputtext'\r\nimport { MultiSelectModule } from 'primeng/multiselect'\r\nimport { Action } from 'rxjs/scheduler/Action';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\n\r\n@Component({\r\n\tselector: 'app-glaccount-category',\r\n\ttemplate: require('./gl-account-categories.component.html'),\r\n\tstyles: [require('./gl-account-categories.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** ActionsAttribute component*/\r\nexport class GLAccountCategoryComponent implements OnInit, AfterViewInit {\r\n\tdisableSave: boolean;\r\n\tselectedGLAccountCategoryName: any;\r\n\tactionamecolle: any[] = [];\r\n\tauditHisory: any[];\r\n\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tcols: any[];\r\n\tselectedColumns: any[];\r\n\tdataSource: MatTableDataSource<any>;\r\n\tallGLAccountCategory: any[] = [];\r\n\tallComapnies: MasterCompany[] = [];\r\n\tprivate isSaving: boolean;\r\n\tpublic sourceGLAccountCatrgory: any = {};\r\n\tprivate bodyText: string;\r\n\tloadingIndicator: boolean;\r\n\tcloseResult: string;\r\n\ttitle: string = \"Create\";\r\n\tid: number;\r\n\terrorMessage: any;\r\n\tmodal: NgbModalRef;\r\n\t/** Actions ctor */\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\t\r\n\tfilteredBrands: any[];\r\n\tlocalCollection: any[] = [];\r\n\tselectedColumn: any[];\r\n\tActive: string = \"Active\";\r\n    glAccountCategoryName: string;\r\n    disablecategory: boolean;\r\n    secelectcategory: any;\r\n\tcategoryViewFileds: any = {};\r\n\r\n\tconstructor( private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: GLAccountCategoryService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\t\t\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\t\r\n\r\n\t}\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.loadData();\r\n\t\tthis.cols = [\r\n\t\t\t//{ field: 'actionAttributeId', header: 'ACID' },\r\n\t\t\t{ field: 'glAccountCategoryName', header: 'Expenditure Type' },\r\n\t\t\t//{ field: 'gLCID', header: 'GLCID' },\r\n\t\t\t{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t\t//{ field: 'createdDate', header: 'Created Date' },\r\n\t\t\t//{ field: 'updatedDate', header: 'Updated Date' }\r\n\r\n\r\n\t\t];\r\n\t\t\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\tngAfterViewInit() {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\tpublic allWorkFlows: any[] = [];\r\n\tprivate loadData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.workFlowtService.getWorkFlows().subscribe(\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tprivate loadMasterCompanies() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\r\n\tprivate refresh() {\r\n\t\t// Causes the filter to refresh there by updating with recently added data.\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\tprivate onDataLoadSuccessful(allWorkFlows: any[]) {\r\n\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = allWorkFlows;\r\n\t\tthis.allGLAccountCategory = allWorkFlows;\r\n\r\n\t}\r\n\r\n\r\n\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\t\r\n\topen(content) {\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\r\n\t\tthis.glAccountCategoryName = \"\";\r\n\t\tthis.sourceGLAccountCatrgory.isActive = true;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\r\n\r\n\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\topenDelete(content, row) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourceGLAccountCatrgory = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenEdit(content, row) {\r\n\t\tthis.disableSave=false;\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourceGLAccountCatrgory = row;\r\n\t\tthis.glAccountCategoryName = this.sourceGLAccountCatrgory.glAccountCategoryName;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenHist(content, row) {\r\n\r\n\t\tthis.sourceGLAccountCatrgory = row;\r\n\r\n\t\tthis.workFlowtService.historyGLAccountCategory(this.sourceGLAccountCatrgory.GLAccountCategoryId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t}\r\n\thandleChange(rowData, e) {\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourceGLAccountCatrgory = rowData;\r\n\t\t\tthis.sourceGLAccountCatrgory.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourceGLAccountCatrgory.isActive == false;\r\n\t\t\tthis.workFlowtService.updateGLAccountCategory(this.sourceGLAccountCatrgory).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceGLAccountCatrgory),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourceGLAccountCatrgory = rowData;\r\n\t\t\tthis.sourceGLAccountCatrgory.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourceGLAccountCatrgory.isActive == true;\r\n\t\t\tthis.workFlowtService.updateGLAccountCategory(this.sourceGLAccountCatrgory).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceGLAccountCatrgory),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\teventHandler(event) {\r\n\t\tif (event.target.value != \"\") {\r\n\t\t\tlet value = event.target.value.toLowerCase();\r\n\t\t\tif (this.selectedGLAccountCategoryName) {\r\n\t\t\t\tif (value == this.selectedGLAccountCategoryName.toLowerCase()) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disablecategory = true;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.disablecategory = false;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpartnmId(event) {\r\n\t\t//\r\n\t\tif (this.allGLAccountCategory) {\r\n\r\n\t\t\tfor (let i = 0; i < this.allGLAccountCategory.length; i++) {\r\n\t\t\t\tif (event == this.allGLAccountCategory[i].glAccountCategoryName) {\r\n\t\t\t\t\tthis.sourceGLAccountCatrgory.glAccountCategoryName = this.allGLAccountCategory[i].glAccountCategoryName;\r\n\t\t\t\t\tthis.disablecategory = true;\r\n\r\n\t\t\t\t\tthis.selectedGLAccountCategoryName = event;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//}\r\n\t//partnmId(event) {\r\n\t//\t//debugger;\r\n\t//\tfor (let i = 0; i < this.actionamecolle.length; i++) {\r\n\t//\t\tif (event == this.actionamecolle[i][0].gLAccountCategoryName) {\r\n\t//\t\t\t//alert(\"Action Name already Exists\");\r\n\t//\t\t\tthis.disableSave = true;\r\n\t//\t\t\tthis.selectedGLAccountCategoryName = event;\r\n\t//\t\t}\r\n\t//\t}\r\n\t//}\r\n\tfilterGLAccountCategory(event) {\r\n\r\n\t\tthis.localCollection = [];\r\n\t\tfor (let i = 0; i < this.allGLAccountCategory.length; i++) {\r\n\t\t\tlet gLAccountCategoryName = this.allGLAccountCategory[i].glAccountCategoryName;\r\n\t\t\tif (gLAccountCategoryName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\tthis.actionamecolle.push([{\r\n\t\t\t\t\t\"GLAccountCategoryId\": this.allGLAccountCategory[i].GLAccountCategoryId,\r\n\t\t\t\t\t\"gLAccountCategoryName\": gLAccountCategoryName\r\n\t\t\t\t}]),\r\n\t\t\t\t\tthis.localCollection.push(gLAccountCategoryName)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n\t}\r\n\r\n\r\n\teditItemAndCloseModel() {\r\n\r\n\t\tthis.isSaving = true;\r\n\r\n\t\tif (this.isEditMode == false) {\r\n\t\t\tthis.sourceGLAccountCatrgory.createdBy = this.userName;\r\n\t\t\tthis.sourceGLAccountCatrgory.updatedBy = this.userName;\r\n\t\t\tthis.sourceGLAccountCatrgory.masterCompanyId = 1;\r\n\t\t\tthis.sourceGLAccountCatrgory.glAccountCategoryName = this.glAccountCategoryName;\r\n\t\t\tthis.workFlowtService.newGLAccountCategory(this.sourceGLAccountCatrgory).subscribe(\r\n\t\t\t\trole => this.saveSuccessHelper(role),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.sourceGLAccountCatrgory.updatedBy = this.userName;\r\n\t\t\tthis.sourceGLAccountCatrgory.gLAccountCategoryName = this.glAccountCategoryName;\r\n\t\t\tthis.sourceGLAccountCatrgory.masterCompanyId = 1;\r\n\t\t\tthis.workFlowtService.updateGLAccountCategory(this.sourceGLAccountCatrgory).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceGLAccountCatrgory),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\t\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourceGLAccountCatrgory.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deleteGLAccountCategory(this.sourceGLAccountCatrgory.glAccountCategoryId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourceGLAccountCatrgory),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\tdismissModel() {\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tprivate saveCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\tprivate saveSuccessHelper(role?: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n\t\tthis.loadData();\r\n\r\n\t}\r\n\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\r\n\t//private getDismissReason(reason: any): string {\r\n\t//\tif (reason === ModalDismissReasons.ESC) {\r\n\t//\t\treturn 'by pressing ESC';\r\n\t//\t} else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n\t//\t\treturn 'by clicking on a backdrop';\r\n\t//\t} else {\r\n\t//\t\treturn `with: ${reason}`;\r\n\t//\t}\r\n\t//}\r\n\t\r\n\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourceGLAccountCatrgory = row;\r\n\t\tthis.categoryViewFileds.glAccountCategoryName = row.glAccountCategoryName;\r\n\t\tthis.categoryViewFileds.glcid = row.glcid;\r\n\t\t//this.createdBy = row.createdBy;\r\n\t\t//this.updatedBy = row.updatedBy;\r\n\t\t//this.createdDate = row.createdDate;\r\n\t\t//this.updatedDate = row.updatedDate;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/gl-account-categories/gl-account-categories.component.ts","//import { Component, ViewChild } from '@angular/core';\r\n//import { SingleScreenBreadcrumbService } from '../../services/single-screens-breadcrumb.service';\r\n//import { AuthService } from '../../services/auth.service';\r\n//import { NgbModal, NgbActiveModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\n//import { FormBuilder } from '@angular/forms';\r\n//import { AlertService, MessageSeverity } from '../../services/alert.service';\r\n//import { ManufacturerService } from '../../services/manufacturer.service';\r\n//import { MatDialog, MatPaginator, MatTableDataSource, MatSort } from '@angular/material';\r\n//import { MasterComapnyService } from '../../services/mastercompany.service';\r\n//import { MasterCompany } from '../../models/mastercompany.model';\r\n//import { AuditHistory } from '../../models/audithistory.model';\r\n//import { fadeInOut } from '../../services/animations';\r\n//import { Manufacturer } from '../../models/manufacturer.model';\r\nimport { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport * as $ from 'jquery';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { ManufacturerService } from '../../services/manufacturer.service';\r\nimport { DataTableModule } from 'primeng/datatable';\r\nimport { TableModule } from 'primeng/table'\r\nimport { ButtonModule } from 'primeng/button'\r\nimport { SelectButtonModule } from 'primeng/selectbutton'\r\nimport { InputTextModule } from 'primeng/inputtext'\r\nimport { MultiSelectModule } from 'primeng/multiselect'\r\nimport { Action } from 'rxjs/scheduler/Action';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { MatTableDataSource, MatDialog, MatPaginator, MatSort } from '@angular/material';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { AlertService, MessageSeverity } from '../../services/alert.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { Manufacturer } from '../../models/manufacturer.model';\r\n\r\n\r\n@Component({\r\n\tselector: 'app-manufacturer',\r\n\ttemplate: require('./manufacturer.component.html'),\r\n\tstyles: [require('./manufacturer.component.scss')],\r\n\tanimations: [fadeInOut]\r\n\r\n})\r\n/** manufacturer1 component*/\r\nexport class ManufacturerComponent implements OnInit, AfterViewInit {\r\n\r\n\t\r\n\tauditHisory: any[];\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tcols: any[];\r\n\tselectedColumns: any[];\r\n\tdisplayedColumns = ['name','comments', 'createdDate', 'companyName'];\r\n\tdataSource: MatTableDataSource<any>;\r\n\tallComapnies: MasterCompany[] = [];\r\n\tprivate isSaving: boolean;\r\n\tpublic sourcemanufacturer: any = {}\r\n\tprivate bodyText: string;\r\n\tloadingIndicator: boolean;\r\n\tcloseResult: string;\r\n\ttitle: string = \"Create\";\r\n\tid: number;\r\n    namecolle: any[] = [];\r\n\tactionamecolle: any[]=[];\r\n\terrorMessage: any;\r\n\tmodal: NgbModalRef;\r\n\t/** Actions ctor */\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\tfilteredBrands: any[];\r\n\tlocalCollection: any[] = [];\r\n\tselectedColumn: any[];\r\n\tActive: string = \"Active\";\r\n\tallManufacturer: any[];\r\n\tmanufacturerId: any;\r\n\tname: string =\"\";\r\n\tsourceAction: any;\r\n\tintegrationName: any;\r\n\tselectedManufacturer: any;\r\n\t//disablesave: boolean=false;\r\n\tallManufacturerInfo: any[]=[];\r\n\tlocalmanufacturer: any[];\r\n    comments: any=\" \";\r\n\tcreatedBy: any= \"\";\r\n\tupdatedBy: any = \"\";\r\n\tcreatedDate: any = \"\";\r\n\tupdatedDate: any = \"\";\r\n\tmanufactureViewField: any = {};\r\n\tdisableSave: boolean = false;\r\n\t/** manufacturer1 ctor */\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: ManufacturerService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\r\n\t}\r\n\tngAfterViewInit(): void {\r\n\t\t\r\n\t}\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.loadData();\r\n\t\t\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-manufacturer';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t\r\n\t}\r\n\r\n\r\n\tprivate loadMasterCompanies() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\tprivate refresh() {\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\topen(content) {\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\t//this.disableSave = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourcemanufacturer = new Manufacturer();\r\n\t\tthis.name = \"\";\r\n\t\tthis.sourcemanufacturer.isActive = true;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\r\n\r\n\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenDelete(content, row) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourcemanufacturer = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\tManufacturerHandler(event) {\r\n\t\tif (event.target.value != \"\") {\r\n\t\t\tlet value = event.target.value.toLowerCase();\r\n\t\t\tif (this.selectedManufacturer) {\r\n\t\t\t\tif (value == this.selectedManufacturer.toLowerCase()) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disableSave = true;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.disableSave = false;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//ManufacturerHandler(event) {\r\n\t//\tlet value = event.target.value.toLowerCase();\r\n\t//\tif (this.selectedManufacturer) {\r\n\t//\t\tif (value == this.selectedManufacturer.toLowerCase()) {\r\n\t//\t\t\t//alert(\"Action Name already Exists\");\r\n\t//\t\t\tthis.disableSave = true;\r\n\t//\t\t}\r\n\t//\t\telse {\r\n\t//\t\t\tthis.disableSave = false;\r\n\t//\t\t}\r\n\t//\t}\r\n\t//\telse {\r\n\t//\t\tfor (let i = 0; i < this.actionamecolle.length; i++) {\r\n\t//\t\t\tif (value == this.actionamecolle[i][0].name.toLowerCase()) {\r\n\t//\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t//\t\t\t\tthis.disableSave = true;\r\n\t//\t\t\t\tthis.selectedManufacturer = event;\r\n\t//\t\t\t}\r\n\t//\t\t}\r\n\t//\t}\r\n\r\n\t//}\r\n\tManufacturerdescription(event) {\r\n\t\t//\r\n\t\tif (this.allManufacturerInfo) {\r\n\r\n\t\t\tfor (let i = 0; i < this.allManufacturerInfo.length; i++) {\r\n\t\t\t\tif (event == this.allManufacturerInfo[i].name) {\r\n\t\t\t\t\tthis.sourcemanufacturer.name = this.allManufacturerInfo[i].name;\r\n\t\t\t\t\tthis.disableSave = true;\r\n\r\n\t\t\t\t\tthis.selectedManufacturer = event;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\teditItemAndCloseModel() {\r\n\r\n\t\tthis.isSaving = true;\r\n\r\n\t\tif (this.isEditMode == false) {\r\n\t\t\tthis.sourcemanufacturer.createdBy = this.userName;\r\n\t\t\tthis.sourcemanufacturer.updatedBy = this.userName;\r\n\t\t\tthis.sourcemanufacturer.masterCompanyId = 1;\r\n\t\t\t//this.sourceglaccountclass.glaccountclassname = this.glAccountclassName;\r\n\t\t\tthis.workFlowtService.newManufacturer(this.sourcemanufacturer).subscribe(\r\n\t\t\t\trole => this.saveSuccessHelper(role),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.sourcemanufacturer.updatedBy = this.userName;\r\n\t\t\t//this.sourcemanufacturer.name = this.name;\r\n\t\t\tthis.sourcemanufacturer.masterCompanyId = 1;\r\n\t\t\tthis.workFlowtService.updateManufacturer(this.sourcemanufacturer).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourcemanufacturer),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\r\n\t\tthis.modal.close();\r\n\t}\r\n\tprivate saveSuccessHelper(role?: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n\t\tthis.loadData();\r\n\r\n\t}\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourcemanufacturer.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deleteManufacturer(this.sourcemanufacturer.manufacturerId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourcemanufacturer),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\tprivate onmanufacturerSuccessful(allWorkFlows: any[]) {\r\n\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\t//this.dataSource.data = allWorkFlows;\r\n\t\tthis.allManufacturerInfo = allWorkFlows;\r\n\r\n\r\n\t\t//console.log(this.allActions);\r\n\r\n\r\n\t}\r\n\tfiltermanufacturer(event) {\r\n\r\n\t\tthis.localCollection = [];\r\n\t\tfor (let i = 0; i < this.allManufacturerInfo.length; i++) {\r\n\t\t\tlet name = this.allManufacturerInfo[i].name;\r\n\t\t\tif (name.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\tthis.namecolle.push([{\r\n\t\t\t\t\t\"manufacturerId\": this.allManufacturerInfo[i].manufacturerId,\r\n\t\t\t\t\t\"name\": name\r\n\t\t\t\t}]),\r\n\t\t\t\t\tthis.localCollection.push(name)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\topenEdit(content, row) {\r\n\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.disableSave = false;\r\n\t\tthis.sourcemanufacturer = row;\t\r\n\t\tthis.name = this.sourcemanufacturer.name;\r\n\t\t//this.comments = this.sourcemanufacturer.comments;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourcemanufacturer = row;\r\n\t\tthis.manufactureViewField.name = row.name;\r\n\t\tthis.manufactureViewField.comments = row.comments;\r\n\t\tthis.createdBy = row.createdBy;\r\n\t\tthis.updatedBy = row.updatedBy;\r\n\t\tthis.createdDate = row.createdDate;\r\n\t\tthis.updatedDate = row.updatedDate;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenHist(content, row) {\r\n\r\n\t\tthis.sourcemanufacturer = row;\r\n\r\n\t\tthis.workFlowtService.historyManufacturer(this.sourcemanufacturer.manufacturerId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t}\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\thandleChange(rowData, e) {\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourcemanufacturer = rowData;\r\n\t\t\tthis.sourcemanufacturer.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourcemanufacturer.isActive == false;\r\n\t\t\tthis.workFlowtService.updateManufacturer(this.sourcemanufacturer).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourcemanufacturer),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourcemanufacturer = rowData;\r\n\t\t\tthis.sourcemanufacturer.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourcemanufacturer.isActive == true;\r\n\t\t\tthis.workFlowtService.updateManufacturer(this.sourcemanufacturer).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourcemanufacturer),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate loadData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.workFlowtService.getWorkFlows().subscribe(\r\n\t\t\tresults => this.onmanufacturerSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t\tthis.cols = [\r\n\r\n\r\n\t\t\t{ field: 'name', header: 'Manufacturer Name' },\r\n\t\t\t{ field: 'comments', header: 'Comments' },\r\n\t\t\t{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t\t//{ field: 'createdDate', header: 'Created Date' },\r\n\t\t\t//{ field: 'updatedDate', header: 'Updated Date' }\r\n\r\n\r\n\t\t];\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\tprivate onDataLoadSuccessful(allWorkFlows: any[]) {\r\n\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\t//this.dataSource.data = allWorkFlows;\r\n\t\tthis.allManufacturer = allWorkFlows;\r\n\r\n\t}\r\n\tprivate saveCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n\t}\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\tdismissModel() {\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/manufacturer/manufacturer.component.ts","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport * as $ from 'jquery';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { VendorCapabilitiesService } from '../../services/vendorcapabilities.service';\r\nimport { DataTableModule } from 'primeng/datatable';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { Action } from 'rxjs/scheduler/Action';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { MatTableDataSource, MatDialog, MatPaginator, MatSort } from '@angular/material';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { AlertService, MessageSeverity } from '../../services/alert.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { VendorCapabilities} from '../../models/vendorcapabilities.model';\r\nimport { VendorCapabilitiesEndpoint } from '../../services/VendorCapabilities-endpoint.service';\r\n\r\n@Component({\r\n    selector: 'app-vendorcapabilities',\r\n    template: require('./vendorcapabilities.component.html'),\r\n\tstyles: [require('./vendorcapabilities.component.scss')],\r\n\tanimations: [fadeInOut],\r\n\t//providers: [VendorCapabilities] \r\n})\r\n\r\nexport class VendorcapabilitiesComponent implements OnInit, AfterViewInit {\r\n\tcapabilityViewfield: any = {};\r\n    ngAfterViewInit(): void {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n    }\r\n\tdisableSave: boolean;\r\n\tauditHisory: any[];\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tcols: any[];\r\n\tselectedColumns: any[];\r\n\tdisplayedColumns = ['capabilityName', 'capabilityId', 'createdDate', 'companyName'];\r\n\tdataSource: MatTableDataSource<any>;\r\n\tcapabilityNamecolle: any[] = [];\r\n\tallComapnies: MasterCompany[] = [];\r\n\tprivate isSaving: boolean;\r\n\tpublic sourcevendorcapabilities: any = {}\r\n\tprivate bodyText: string;\r\n\tloadingIndicator: boolean;\r\n\tcloseResult: string;\r\n\ttitle: string = \"Create\";\r\n\tid: number;\r\n\tactionamecolle: any;\r\n\tcapabilityId: number;\r\n\terrorMessage: any;\r\n\tmodal: NgbModalRef;\r\n\t/** Actions ctor */\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\tfilteredBrands: any[];\r\n\tlocalCollection: any[] = [];\r\n\tselectedColumn: any[];\r\n\tActive: string = \"Active\";\r\n\tallvendorcapabilities: any[];\r\n\tsourceAction: any;\r\n\tintegrationName: any;\r\n\tselectedvendorcapabilities: any;\r\n\tdisableSavevendorcapabilities: boolean = false;\r\n\t//allvendorcapabilities: any[]=[];\r\n\tlocalvendorcapabilities: any[];\t\r\n\tcreatedBy: any;\r\n\tupdatedBy: any;\r\n\tcreatedDate: any;\r\n\tupdatedDate: any;\r\n    capabilityName: string;\r\n\tconstructor (private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: VendorCapabilitiesService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\t\tthis.displayedColumns.push('action');\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\tthis.sourcevendorcapabilities = new VendorCapabilities();\r\n\t}\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.loadData();\r\n\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-vendorcapabilities';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\r\n\t}\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\tprivate loadData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.workFlowtService.getWorkFlows().subscribe(\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t\tthis.cols = [\r\n\r\n\r\n\t\t\t{ field: 'capabilityName', header: 'Capability Name' },\r\n\t\t\t//{ field: 'capabilityId', header: 'VCID' },\r\n\t\t\t{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t//\t{ field: 'createdDate', header: 'Created Date' },\r\n\t\t//\t{ field: 'updatedDate', header: 'Updated Date' }\r\n\r\n\r\n\t\t];\r\n\t\t//this.breadCrumb.currentUrl = '/singlepages/singlepages/app-vendor-capabilities';\r\n\t\t//this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\tprivate onDataLoadSuccessful(allWorkFlows: any[]) {\r\n\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\t//this.dataSource.data = allWorkFlows;\r\n\t\tthis.allvendorcapabilities = allWorkFlows;\r\n\r\n\t}\r\n\tprivate loadMasterCompanies() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\tprivate refresh() {\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\topen(content) {\r\n\t\tthis.disableSavevendorcapabilities = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourcevendorcapabilities = new VendorCapabilities();\r\n\t\tthis.capabilityName = \"\";\r\n\t\tthis.sourcevendorcapabilities.isActive = true;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\r\n\r\n\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenDelete(content, row) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourcevendorcapabilities = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\tdismissModel() {\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\tVendorcapabilitiesHandler(event) {\r\n\t\tif (event.target.value != \"\") {\r\n\t\t\tlet value = event.target.value.toLowerCase();\r\n\t\t\tif (this.selectedvendorcapabilities) {\r\n\t\t\t\tif (value == this.selectedvendorcapabilities.toLowerCase()) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disableSavevendorcapabilities = true;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.disableSavevendorcapabilities = false;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\tVendorcapabilitiesdescription(event) {\r\n\t\t//\r\n\t\tif (this.allvendorcapabilities) {\r\n\r\n\t\t\tfor (let i = 0; i < this.allvendorcapabilities.length; i++) {\r\n\t\t\t\tif (event == this.allvendorcapabilities[i].capabilityName) {\r\n\t\t\t\t\tthis.sourcevendorcapabilities.capabilityName = this.allvendorcapabilities[i].capabilityName;\r\n\t\t\t\t\tthis.disableSavevendorcapabilities = true;\r\n\r\n\t\t\t\t\tthis.selectedvendorcapabilities = event;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\teditItemAndCloseModel() {\r\n\r\n\t\tthis.isSaving = true;\r\n\r\n\t\tif (this.isEditMode == false) {\r\n\t\t\tthis.sourcevendorcapabilities.createdBy = this.userName;\r\n\t\t\tthis.sourcevendorcapabilities.updatedBy = this.userName;\r\n\t\t\tthis.sourcevendorcapabilities.masterCompanyId = 1;\t\t\t\r\n\t\t\tthis.workFlowtService.newvendorcapabilities(this.sourcevendorcapabilities).subscribe(\r\n\t\t\t\trole => this.saveSuccessHelper(role),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.sourcevendorcapabilities.updatedBy = this.userName;\r\n\t\t\t//this.sourcemanufacturer.name = this.name;\r\n\t\t\tthis.sourcevendorcapabilities.masterCompanyId = 1;\r\n\t\t\tthis.workFlowtService.updatevendorcapabilities(this.sourcevendorcapabilities).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourcevendorcapabilities),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\r\n\t\tthis.modal.close();\r\n\t}\r\n\t//private  onvendorcapabilitiesSuccessful(allWorkFlows: any[]) {\r\n\r\n\t//\tthis.alertService.stopLoadingMessage();\r\n\t//\tthis.loadingIndicator = false;\r\n\t//\tthis.dataSource.data = allWorkFlows;\r\n\t//\tthis.allvendorcapabilitiesInfo = allWorkFlows;\r\n\t\t\r\n\t//}\r\n\tfiltervendor(event) {\r\n\r\n\t\tthis.localCollection = [];\r\n\t\tfor (let i = 0; i < this.allvendorcapabilities.length; i++) {\r\n\t\t\tlet capabilityName = this.allvendorcapabilities[i].capabilityName;\r\n\t\t\tif (capabilityName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\tthis.capabilityNamecolle.push([{\r\n\t\t\t\t\t\"vendorCapabilityId\": this.allvendorcapabilities[i].vendorCapabilityId,\r\n\t\t\t\t\t\"capabilityName\": capabilityName\r\n\t\t\t\t}]),\r\n\t\t\t\t\tthis.localCollection.push(capabilityName)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//filtervendor(event) {\r\n\r\n\t//\tthis.localvendorcapabilities = [];\r\n\t//\tif (this.allvendorcapabilitiesInfo) {\r\n\t//\t\tfor (let i = 0; i < this.allvendorcapabilitiesInfo.length; i++) {\r\n\t//\t\t\tlet capabilityName = this.allvendorcapabilitiesInfo[i].capabilityName;\r\n\t//\t\t\tif (capabilityName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t//\t\t\t\tthis.localvendorcapabilities.push(capabilityName);\r\n\t//\t\t\t}\r\n\t//\t\t}\r\n\t//\t}\r\n\t//}\r\n\tprivate saveSuccessHelper(role?: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n\t\tthis.loadData();\r\n\r\n\t}\r\n\tprivate saveCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\topenEdit(content, row) {\r\n\t\tthis.disableSavevendorcapabilities = false;\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourcevendorcapabilities = row;\r\n\t\tthis.capabilityName = this.sourcevendorcapabilities.capabilityName;\r\n\t\t//this.comments = this.sourcemanufacturer.comments;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenHist(content, row) {\r\n\r\n\t\tthis.sourcevendorcapabilities = row;\r\n\r\n\t\tthis.workFlowtService.historyvendorcapabilities(this.sourcevendorcapabilities.vendorCapabilityId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t}\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n\t}\r\n\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourcevendorcapabilities.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deletevendorcapabilities(this.sourcevendorcapabilities.vendorCapabilityId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourcevendorcapabilities),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\r\n\thandleChange(rowData, e) {\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourcevendorcapabilities = rowData;\r\n\t\t\tthis.sourcevendorcapabilities.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourcevendorcapabilities.isActive == false;\r\n\t\t\tthis.workFlowtService.updatevendorcapabilities(this.sourcevendorcapabilities).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourcevendorcapabilities),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourcevendorcapabilities = rowData;\r\n\t\t\tthis.sourcevendorcapabilities.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourcevendorcapabilities.isActive == true;\r\n\t\t\tthis.workFlowtService.updatevendorcapabilities(this.sourcevendorcapabilities).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourcevendorcapabilities),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourcevendorcapabilities = row;\r\n\t\tthis.capabilityViewfield.capabilityName = row.capabilityName;\r\n\t\tthis.capabilityViewfield.capabilityId = row.capabilityId;\r\n\t\tthis.createdBy = row.createdBy;\r\n\t\tthis.updatedBy = row.updatedBy;\r\n\t\tthis.createdDate = row.createdDate;\r\n\t\tthis.updatedDate = row.updatedDate;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/vendorcapabilities/vendorcapabilities.component.ts","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { NgbModalRef, NgbModal, NgbActiveModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LaborAndOverheadCostService } from '../../services/laborandoverheadcost.service';\r\nimport { SingleScreenBreadcrumbService } from '../../services/single-screens-breadcrumb.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { AlertService, MessageSeverity } from '../../services/alert.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { Laborandoverheadcostsetup } from '../../models/laborandoverheadcostsetup.model';\r\n\r\n@Component({\r\n    selector: 'app-laber-and-overhead-cost-setup',\r\n    template: require('./laber-and-overhead-cost-setup.component.html'),\r\n\tstyles: [require('./laber-and-overhead-cost-setup.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** Laber-and-overhead-cost-setup component*/\r\nexport class LaberAndOverheadCostSetupComponent implements OnInit, AfterViewInit {\r\n\tdisableSave: boolean;\r\n\tselectedActionName: any;\r\n\tactionamecolle: any[] = [];\r\n\tauditHisory: any[];\r\n\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tcols: any[];\r\n\tselectedColumns: any[];\r\n\t//displayedColumns = ['actionattributeid', 'description', 'createdDate', 'companyName'];\r\n\tdataSource: MatTableDataSource<any>;\r\n\tallLaberOverheadCost: any[] = [];\r\n\tallComapnies: MasterCompany[] = [];\r\n\tprivate isSaving: boolean;\r\n\tpublic sourceAction: any;\r\n\tprivate bodyText: string;\r\n\tloadingIndicator: boolean;\r\n\tcloseResult: string;\r\n\ttitle: string = \"Create\";\r\n\tid: number;\r\n\t\r\n\r\n\terrorMessage: any;\r\n\tmodal: NgbModalRef;\r\n\t/** Actions ctor */\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\tLaborOverheadCostName: string;\r\n\tfilteredBrands: any[];\r\n\tlocalCollection: any[] = [];\r\n\tselectedColumn: any[];\r\n\tActive: string = \"Active\";\r\n\tsourceLaborOverheadCost: any = {};\r\n\tshowAsPercentOfTechHourlyRate: boolean = false;\r\n\tshowUseIndTechLaborRate: boolean = false;\r\n    showFlatAmtPerHour: boolean=false;\r\n\tshowFlatAmtPerWO: boolean = false;\r\n\tshowUseAvgRateTechByAction: boolean = false;\r\n\tshowUseAvgRateOfAllTech: boolean = false;\r\n    displayedColumns: any;\r\n\t\r\n\r\n\tconstructor(private labcost: LaborAndOverheadCostService, private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: LaborAndOverheadCostService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\r\n\t\t//this.displayedColumns.push('action');\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\tthis.sourceLaborOverheadCost = new Laborandoverheadcostsetup();\r\n\r\n\t}\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.loadData();\r\n\t\tthis.cols = [\r\n\t\t\t{ field: 'averagerateofalltechnicianmechanic', header: 'USE AVERAGE RATE OF ALL TECHNICIAN/MECHANIC' },\r\n\t\t\t//{ field: 'flatamountperhour', header: 'Flat Amount Per Hour' },\r\n\t\t\t{ field: 'flatamountperworkorder', header: 'Flat Amount Per Work order' },\r\n\t\t\t{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t{ field: 'updatedBy', header: 'Updated By' },\r\n\t\t\t{ field: 'createdDate', header: 'Created Date' },\r\n\t\t\t{ field: 'updatedDate', header: 'Updated Date' }\r\n\r\n\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-labor-and-overhead-cost-setup';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t\tthis.selectedColumns = this.cols;\r\n\t}\r\n\tngAfterViewInit() {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\tshowinputs(event) {\r\n\t\tif (event == \"AsPercentOfTechHourlyRate\") {\r\n\t\t\tthis.showAsPercentOfTechHourlyRate = true;\r\n\t\t\tthis.showFlatAmtPerHour = false;\r\n\t\t\tthis.showFlatAmtPerWO = false;\r\n\t\t\t//this.sourceLaborOverheadCost.asPercentOfTechHourlyRate = true;\r\n\t\t\t//this.sourceLaborOverheadCost.flatAmtPerHour = false;\r\n\t\t\t//this.sourceLaborOverheadCost.flatAmtPerWO = false;\r\n\t\t\t\r\n\t\t}\r\n\t\telse if (event == \"FlatAmtPerHour\") {\r\n\t\t\tthis.showFlatAmtPerHour = true;\r\n\t\t\tthis.showAsPercentOfTechHourlyRate = false;\r\n\t\t\tthis.showFlatAmtPerWO = false;\r\n\t\t\t//this.sourceLaborOverheadCost.asPercentOfTechHourlyRate = false;\r\n\t\t\t//this.sourceLaborOverheadCost.flatAmtPerHour = true;\r\n\t\t\t//this.sourceLaborOverheadCost.flatAmtPerWO = false;\r\n\t\t}\r\n\t\telse if (event == \"FlatAmtPerWO\") {\r\n\t\t\tthis.showFlatAmtPerWO = true;\r\n\t\t\tthis.showFlatAmtPerHour = false;\r\n\t\t\tthis.showAsPercentOfTechHourlyRate = false;\r\n\t\t\t//this.sourceLaborOverheadCost.asPercentOfTechHourlyRate = false;\r\n\t\t\t//this.sourceLaborOverheadCost.flatAmtPerHour = false;\r\n\t\t\t//this.sourceLaborOverheadCost.flatAmtPerWO = true;\r\n\t\t}\r\n\t}\r\n\r\n\tenableinputs(event) {\r\n\t\tif (event == \"UseIndTechLaborRate\") {\r\n\t\t\tthis.showUseIndTechLaborRate = true;\t\t\t\r\n\t\t\tthis.showUseAvgRateOfAllTech = false;\r\n\t\t\t//this.sourceLaborOverheadCost.useIndTechLaborRate = true;\r\n\t\t\t//this.sourceLaborOverheadCost.useAvgRateOfAllTech = false;\r\n\t\t\t}\r\n\t\t\r\n\t\telse if (event == \"UseAvgRateOfAllTech\") {\r\n\t\t\tthis.showUseIndTechLaborRate = false;\t\t\t\r\n\t\t\tthis.showUseAvgRateOfAllTech = true;\r\n\t\t\t//this.sourceLaborOverheadCost.useIndTechLaborRate = false;\r\n\t\t\t//this.sourceLaborOverheadCost.useAvgRateOfAllTech = true;\r\n\t\t}\r\n\t}\r\n\tapplyHours(event) {\r\n\t\tif (event == \"AssignHoursBySpecificAction\") {\r\n\t\t\t//this.sourceLaborOverheadCost.assignHoursBySpecificAction = true;\r\n\t\t\t//this.sourceLaborOverheadCost.assignTotalHoursToWO = false;\r\n\r\n\t\t}\r\n\t\telse if (event == \"AssignTotalHoursToWO\") {\r\n\t\t\t//this.sourceLaborOverheadCost.assignHoursBySpecificAction = false;\r\n\t\t\t//this.sourceLaborOverheadCost.assignTotalHoursToWO = true;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tpublic allWorkFlows: any[] = [];\r\n\tprivate loadData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.workFlowtService.getWorkFlows().subscribe(\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tprivate loadMasterCompanies() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\r\n\tprivate refresh() {\r\n\t\t// Causes the filter to refresh there by updating with recently added data.\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\tprivate onDataLoadSuccessful(allWorkFlows: any[]) {\r\n\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.dataSource.data = allWorkFlows;\r\n\t\tthis.allLaberOverheadCost = allWorkFlows;\r\n\r\n\t}\r\n\r\n\r\n\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\topen(content) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.disableSave = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourceLaborOverheadCost = new Laborandoverheadcostsetup();\r\n\t\tthis.LaborOverheadCostName = \"\";\r\n\t\tthis.sourceLaborOverheadCost.isActive = true;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\r\n\r\n\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\topenDelete(content, row) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourceLaborOverheadCost = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenEdit(content, row) {\r\n\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourceLaborOverheadCost = row;\r\n\t\tthis.LaborOverheadCostName = this.sourceLaborOverheadCost.description;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenHist(content, row) {\r\n\r\n\t\tthis.sourceLaborOverheadCost = row;\r\n\r\n\t\tthis.workFlowtService.historyLaborandOverheadcost(this.sourceLaborOverheadCost.laborOverloadCostId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t}\r\n\thandleChange(rowData, e) {\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourceLaborOverheadCost = rowData;\r\n\t\t\tthis.sourceLaborOverheadCost.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourceLaborOverheadCost.isActive == false;\r\n\t\t\tthis.workFlowtService.updateLaborandOverheadcost(this.sourceLaborOverheadCost).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceLaborOverheadCost),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourceLaborOverheadCost = rowData;\r\n\t\t\tthis.sourceLaborOverheadCost.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourceLaborOverheadCost.isActive == true;\r\n\t\t\tthis.workFlowtService.updateLaborandOverheadcost(this.sourceLaborOverheadCost).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceLaborOverheadCost),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\teventHandler(event) {\r\n\t\tlet value = event.target.value.toLowerCase();\r\n\t\tif (this.selectedActionName) {\r\n\t\t\tif (value == this.selectedActionName.toLowerCase()) {\r\n\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\tthis.disableSave = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.disableSave = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let i = 0; i < this.actionamecolle.length; i++) {\r\n\t\t\t\tif (value == this.actionamecolle[i][0].LaborOverheadCostName.toLowerCase()) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disableSave = true;\r\n\t\t\t\t\tthis.selectedActionName = event;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\t//partnmId(event) {\r\n\t//\t//debugger;\r\n\t//\tfor (let i = 0; i < this.actionamecolle.length; i++) {\r\n\t//\t\tif (event == this.actionamecolle[i][0].LaborOverheadCostName) {\r\n\t//\t\t\t//alert(\"Action Name already Exists\");\r\n\t//\t\t\tthis.disableSave = true;\r\n\t//\t\t\tthis.selectedActionName = event;\r\n\t//\t\t}\r\n\t//\t}\r\n\t//}\r\n\t//filterActionAttributes(event) {\r\n\r\n\t//\tthis.localCollection = [];\r\n\t//\tfor (let i = 0; i < this.allLaberOverheadCost.length; i++) {\r\n\t//\t\tlet LaborOverheadCostName = this.allLaberOverheadCost[i].description;\r\n\t//\t\tif (LaborOverheadCostName.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t//\t\t\tthis.actionamecolle.push([{\r\n\t//\t\t\t\t\"LaborOverloadCostId\": this.allLaberOverheadCost[i].LaborOverloadCostId,\r\n\t//\t\t\t\t\"LaborOverheadCostName\": LaborOverheadCostName\r\n\t//\t\t\t}]),\r\n\t//\t\t\t\tthis.localCollection.push(LaborOverheadCostName)\r\n\r\n\t//\t\t}\r\n\t//\t}\r\n\t//}\r\n\r\n\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n\t}\r\n\r\n\r\n\teditItemAndCloseModel() {\r\n\r\n\t\tthis.isSaving = true;\r\n\r\n\t\tif (this.isEditMode == false) {\r\n\t\t\tthis.sourceLaborOverheadCost.createdBy = this.userName;\r\n\t\t\tthis.sourceLaborOverheadCost.updatedBy = this.userName;\r\n\t\t\tthis.sourceLaborOverheadCost.masterCompanyId = 1;\r\n\t\t\t//this.sourceLaborOverheadCost.description = this.LaborOverheadCostName;\r\n\t\t\tthis.workFlowtService.newLaborandOverheadcost(this.sourceLaborOverheadCost).subscribe(\r\n\t\t\t\trole => this.saveSuccessHelper(role),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.sourceLaborOverheadCost.updatedBy = this.userName;\r\n\t\t\t//this.sourceLaborOverheadCost.description = this.LaborOverheadCostName;\r\n\t\t\tthis.sourceLaborOverheadCost.masterCompanyId = 1;\r\n\t\t\tthis.workFlowtService.updateLaborandOverheadcost(this.sourceLaborOverheadCost).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourceLaborOverheadCost),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t}\r\n\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourceLaborOverheadCost.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deleteLaborandOverheadcost(this.sourceLaborOverheadCost.laborOverloadCostId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourceLaborOverheadCost),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tdismissModel() {\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tprivate saveCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\tprivate saveSuccessHelper(role?: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n\t\tthis.loadData();\r\n\r\n\t}\r\n\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\r\n\tprivate getDismissReason(reason: any): string {\r\n\t\tif (reason === ModalDismissReasons.ESC) {\r\n\t\t\treturn 'by pressing ESC';\r\n\t\t} else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n\t\t\treturn 'by clicking on a backdrop';\r\n\t\t} else {\r\n\t\t\treturn `with: ${reason}`;\r\n\t\t}\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/laber-and-overhead-cost-setup/laber-and-overhead-cost-setup.component.ts","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { PageHeaderComponent } from '../../shared/page-header.component';\r\nimport * as $ from 'jquery';\r\nimport { MenuItem } from 'primeng/api';//bread crumb\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\r\nimport { MasterCompany } from '../../models/mastercompany.model';\r\nimport { GLAccountClassService } from '../../services/glaccountclass.service';\r\nimport { DataTableModule } from 'primeng/datatable';\r\nimport { TableModule } from 'primeng/table'\r\nimport { ButtonModule } from 'primeng/button'\r\nimport { SelectButtonModule } from 'primeng/selectbutton'\r\nimport { InputTextModule } from 'primeng/inputtext'\r\nimport { MultiSelectModule } from 'primeng/multiselect'\r\nimport { Action } from 'rxjs/scheduler/Action';\r\nimport { AuditHistory } from '../../models/audithistory.model';\r\nimport { SingleScreenBreadcrumbService } from \"../../services/single-screens-breadcrumb.service\";\r\nimport { MatTableDataSource, MatDialog, MatPaginator, MatSort } from '@angular/material';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { AlertService, MessageSeverity } from '../../services/alert.service';\r\nimport { MasterComapnyService } from '../../services/mastercompany.service';\r\nimport { CertificationtypeService } from '../../services/certificationtype.service';\r\nimport { CertificationType } from '../../models/certificationtype.model';\r\n\r\n\r\n@Component({\r\n\tselector: 'app-certification-type',\r\n\ttemplate: require('./certification-type.component.html'),\r\n\tstyles: [require('./certification-type.component.scss')],\r\n\tanimations: [fadeInOut]\r\n})\r\n/** GlAccountClass component*/\r\nexport class CertificationTypeComponent implements OnInit, AfterViewInit {\r\n\tdisablesave: boolean;\r\n\tselectedcertificationName: any;\r\n\tauditHisory: any[];\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tcertificationNamecolle: any[] = [];\r\n\tcols: any[];\r\n\tselectedColumns: any[];\r\n\tdisplayedColumns = ['description', 'createdDate', 'companyName'];\r\n\tdataSource: MatTableDataSource<any>;\r\n\tallCertification: any[];\r\n\tallComapnies: MasterCompany[] = [];\r\n\tprivate isSaving: boolean;\r\n\tpublic sourcecertificationtype: any = {}\r\n\tprivate bodyText: string;\r\n\tloadingIndicator: boolean;\r\n\tcloseResult: string;\r\n\ttitle: string = \"Create\";\r\n\tid: number;\r\n\tdisplay: boolean = false;\r\n\tmodelValue: boolean = false;\r\n\terrorMessage: any;\r\n\tmodal: NgbModalRef;\r\n\t/** Actions ctor */\r\n\tprivate isEditMode: boolean = false;\r\n\tprivate isDeleteMode: boolean = false;\r\n\tdescription: string;\r\n\tfilteredBrands: any[];\r\n\tlocalCollection: any[] = [];\r\n\tselectedColumn: any[];\r\n\tActive: string = \"Active\";\r\n\tcertificationViewFileds: any = {};\r\n\t//disablesave: boolean = false;\r\n\r\n\r\n\t\r\n\tconstructor(private breadCrumb: SingleScreenBreadcrumbService, private authService: AuthService, private modalService: NgbModal, private activeModal: NgbActiveModal, private _fb: FormBuilder, private alertService: AlertService, public workFlowtService: CertificationtypeService, private dialog: MatDialog, private masterComapnyService: MasterComapnyService) {\r\n\t\tthis.displayedColumns.push('action');\r\n\t\tthis.dataSource = new MatTableDataSource();\r\n\t\tthis.sourcecertificationtype = new CertificationType();\r\n\t}\r\n\tngOnInit(): void {\r\n\t\tthis.loadData();\r\n\t\tthis.cols = [\r\n\r\n\r\n\t\t\t{ field: 'description', header: 'Certification Name' },\r\n\t\t\t{ field: 'createdBy', header: 'Created By' },\r\n\t\t\t{ field: 'updatedBy', header: 'Updated By' },\r\n\r\n\r\n\t\t];\r\n\t\tthis.breadCrumb.currentUrl = '/singlepages/singlepages/app-certification-type';\r\n\t\tthis.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl);\r\n\t\tthis.selectedColumns = this.cols;\r\n\r\n\t}\r\n\tngAfterViewInit() {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\r\n\t}\r\n\tprivate loadData() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.workFlowtService.getWorkFlows().subscribe(\r\n\t\t\tresults => this.onDataLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\t}\r\n\tprivate loadMasterCompanies() {\r\n\t\tthis.alertService.startLoadingMessage();\r\n\t\tthis.loadingIndicator = true;\r\n\t\tthis.masterComapnyService.getMasterCompanies().subscribe(\r\n\t\t\tresults => this.onDataMasterCompaniesLoadSuccessful(results[0]),\r\n\t\t\terror => this.onDataLoadFailed(error)\r\n\t\t);\r\n\r\n\t}\r\n\tpublic applyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue;\r\n\t}\r\n\tprivate refresh() {\r\n\t\tthis.applyFilter(this.dataSource.filter);\r\n\t}\r\n\r\n\r\n\tprivate onDataMasterCompaniesLoadSuccessful(allComapnies: MasterCompany[]) {\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\tthis.allComapnies = allComapnies;\r\n\r\n\t}\r\n\tprivate onDataLoadSuccessful(allWorkFlows: any[]) {\r\n\r\n\t\t// alert('success');\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\t\t//this.dataSource.data = allWorkFlows;\r\n\t\tthis.allCertification = allWorkFlows;\r\n\r\n\t}\r\n\tprivate onDataLoadFailed(error: any) {\r\n\t\t// alert(error);\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t}\r\n\topen(content) {\r\n\t\t\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.disablesave = false;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourcecertificationtype = new CertificationType();\r\n\t\tthis.description = \"\";\r\n\t\tthis.sourcecertificationtype.isActive = true;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\r\n\r\n\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\r\n\topenView(content, row) {\r\n\r\n\t\tthis.sourcecertificationtype = row;\r\n\t\tthis.certificationViewFileds.capabilityName = row.description;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\topenDelete(content, row) {\r\n\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.isDeleteMode = true;\r\n\t\tthis.sourcecertificationtype = row;\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenEdit(content, row) {\r\n\t\tthis.disablesave = false;\r\n\t\tthis.isEditMode = true;\r\n\t\tthis.isSaving = true;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.sourcecertificationtype = row;\r\n\t\tthis.description = this.sourcecertificationtype.description;\r\n\t\tthis.loadMasterCompanies();\r\n\t\tthis.modal = this.modalService.open(content, { size: 'sm' });\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\t}\r\n\r\n\topenHist(content, row) {\r\n\r\n\t\tthis.sourcecertificationtype = row;\r\n\r\n\t\tthis.workFlowtService.historyCertificationtype(this.sourcecertificationtype.employeeLicenseTypeId).subscribe(\r\n\t\t\tresults => this.onHistoryLoadSuccessful(results[0], content),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t}\r\n\r\n\thandleChange(rowData, e) {\r\n\t\tif (e.checked == false) {\r\n\t\t\tthis.sourcecertificationtype = rowData;\r\n\t\t\tthis.sourcecertificationtype.updatedBy = this.userName;\r\n\t\t\tthis.Active = \"In Active\";\r\n\t\t\tthis.sourcecertificationtype.isActive == false;\r\n\t\t\tthis.workFlowtService.updateCertificationtype(this.sourcecertificationtype).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourcecertificationtype),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sourcecertificationtype = rowData;\r\n\t\t\tthis.sourcecertificationtype.updatedBy = this.userName;\r\n\t\t\r\n\t\t\tthis.Active = \"Active\";\r\n\t\t\tthis.sourcecertificationtype.isActive == true;\r\n\t\t\tthis.workFlowtService.updateCertificationtype(this.sourcecertificationtype).subscribe(\r\n\t\t\t\tresponse => this.saveCompleted(this.sourcecertificationtype),\r\n\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t\r\n\t\t}\r\n\r\n\t}\r\n\teventHandler(event) {\r\n\t\tif (event.target.value != \"\") {\r\n\t\tlet value = event.target.value.toLowerCase();\r\n\t\t\tif (this.selectedcertificationName) {\r\n\t\t\t\tif (value == this.selectedcertificationName.toLowerCase()) {\r\n\t\t\t\t\t//alert(\"Action Name already Exists\");\r\n\t\t\t\t\tthis.disablesave = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.disablesave = false;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpartnmId(event) {\r\n\r\n\t\tfor (let i = 0; i < this.allCertification.length; i++) {\r\n\t\t\tif (event == this.allCertification[i].description) {\r\n\t\t\t\tthis.disablesave = true;\r\n\t\t\t\tthis.selectedcertificationName = event;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//partnmId(event) {\r\n\t\t\r\n\r\n\t//\t\tfor (let i = 0; i < this.allCertification.length; i++) {\r\n\t//\t\t\tif (event == this.allCertification[i][0].description) {\r\n\t//\t\t\t\t//this.sourcecertificationtype.certificationName = this.allCertification[i].certificationName;\r\n\t//\t\t\t\tthis.disablesave = true;\r\n\r\n\t//\t\t\t\tthis.selectedcertificationName = event;\r\n\t//\t\t\t}\r\n\t//\t\t}\r\n\t//}\r\n\tfilterGlAccountclass(event) {\r\n\r\n\t\tthis.localCollection = [];\r\n\t\tfor (let i = 0; i < this.allCertification.length; i++) {\r\n\t\t\tlet description = this.allCertification[i].description;\r\n\t\t\tif (description.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\r\n\t\t\t\tthis.certificationNamecolle.push([{\r\n\t\t\t\t\t\"employeeLicenseTypeId\": this.allCertification[i].employeeLicenseTypeId,\r\n\t\t\t\t\t\"description\": description\r\n\t\t\t\t}]),\r\n\t\t\t\t\tthis.localCollection.push(description)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\teditItemAndCloseModel() {\r\n\t\tif (!(this.sourcecertificationtype.description)) {\r\n\t\t\tthis.display = true;\r\n\t\t\tthis.modelValue = true;\r\n\t\t}\r\n\t\tif ((this.sourcecertificationtype.description)) {\r\n\t\t\tthis.isSaving = true;\r\n\r\n\t\t\tif (this.isEditMode == false) {\r\n\t\t\t\tthis.sourcecertificationtype.createdBy = this.userName;\r\n\t\t\t\tthis.sourcecertificationtype.updatedBy = this.userName;\r\n\t\t\t\t//this.sourcecertificationtype.certificationName = this.certificationName;\r\n\t\t\t\tthis.sourcecertificationtype.masterCompanyId = 1;\r\n\t\t\t\tthis.workFlowtService.newCertificationtype(this.sourcecertificationtype).subscribe(\r\n\t\t\t\t\trole => this.saveSuccessHelper(role),\r\n\t\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tthis.sourcecertificationtype.updatedBy = this.userName;\r\n\t\t\t\t//this.sourcecertificationtype.certificationName = this.certificationName;\r\n\t\t\t\tthis.sourcecertificationtype.masterCompanyId = 1;\r\n\t\t\t\tthis.workFlowtService.updateCertificationtype(this.sourcecertificationtype).subscribe(\r\n\t\t\t\t\tresponse => this.saveCompleted(this.sourcecertificationtype),\r\n\t\t\t\t\terror => this.saveFailedHelper(error));\r\n\t\t\t}\r\n\r\n\t\t\tthis.modal.close();\r\n\t\t}\r\n\t}\r\n\tdeleteItemAndCloseModel() {\r\n\t\tthis.isSaving = true;\r\n\t\tthis.sourcecertificationtype.updatedBy = this.userName;\r\n\t\tthis.workFlowtService.deleteCertificationtype(this.sourcecertificationtype.employeeLicenseTypeId).subscribe(\r\n\t\t\tresponse => this.saveCompleted(this.sourcecertificationtype),\r\n\t\t\terror => this.saveFailedHelper(error));\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tdismissModel() {\r\n\t\tthis.isDeleteMode = false;\r\n\t\tthis.isEditMode = false;\r\n\t\tthis.modal.close();\r\n\t}\r\n\r\n\tprivate saveSuccessHelper(role?: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.showMessage(\"Success\", `Action was created successfully`, MessageSeverity.success);\r\n\r\n\t\tthis.loadData();\r\n\r\n\t}\r\n\r\n\tprivate saveCompleted(user?: any) {\r\n\t\tthis.isSaving = false;\r\n\r\n\t\tif (this.isDeleteMode == true) {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was deleted successfully`, MessageSeverity.success);\r\n\t\t\tthis.isDeleteMode = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alertService.showMessage(\"Success\", `Action was edited successfully`, MessageSeverity.success);\r\n\r\n\t\t}\r\n\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\tget userName(): string {\r\n\t\treturn this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n\t}\r\n\r\n\tprivate onHistoryLoadSuccessful(auditHistory: AuditHistory[], content) {\r\n\r\n\t\t// debugger;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.loadingIndicator = false;\r\n\r\n\t\tthis.auditHisory = auditHistory;\r\n\r\n\r\n\t\tthis.modal = this.modalService.open(content, { size: 'lg' });\r\n\r\n\t\tthis.modal.result.then(() => {\r\n\t\t\tconsole.log('When user closes');\r\n\t\t}, () => { console.log('Backdrop click') })\r\n\r\n\r\n\t}\r\n\tprivate saveFailedHelper(error: any) {\r\n\t\tthis.isSaving = false;\r\n\t\tthis.alertService.stopLoadingMessage();\r\n\t\tthis.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n\t\tthis.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\t}\r\n\r\n\tprivate getDismissReason(reason: any): string {\r\n\t\tif (reason === ModalDismissReasons.ESC) {\r\n\t\t\treturn 'by pressing ESC';\r\n\t\t} else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n\t\t\treturn 'by clicking on a backdrop';\r\n\t\t} else {\r\n\t\t\treturn `with: ${reason}`;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/certification-type/certification-type.component.ts","import { OnInit, Component } from \"@angular/core\";\r\nimport { fadeInOut } from \"../../services/animations\";\r\nimport { AlertService } from \"../../services/alert.service\";\r\nimport { AssetStatus } from \"../../models/asset-status.model\";\r\nimport { AssetStatusService } from \"../../services/asset-status/asset-status.service\";\r\nimport { NgbModalRef, NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AssetStatusAudit} from \"../../models/asset-status-audit.model\";\r\nimport { forEach } from \"@angular/router/src/utils/collection\";\r\nimport { SingleScreenAuditDetails, AuditChanges } from \"../../models/single-screen-audit-details.model\";\r\n\r\n@Component({\r\n    selector: 'asset-status',\r\n    template: require('./asset-status.component.html'),\r\n    styles: [],\r\n    animations: [fadeInOut]\r\n})\r\nexport class AssetStatusComponent implements OnInit {\r\n\r\n    currentAssetStatus: AssetStatus;\r\n    assetStatusToUpdate: AssetStatus;\r\n    assetStatusToRemove: AssetStatus;\r\n    assetStatusList: AssetStatus[];\r\n    assetStatusAuditList: AssetStatusAudit[];\r\n    modal: NgbModalRef;\r\n    display: boolean = false;\r\n    modelValue: boolean = false;\r\n    Active: string;\r\n    AuditDetails: SingleScreenAuditDetails[];\r\n    constructor(private alertService: AlertService, private assetStatusService: AssetStatusService, private modalService: NgbModal) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.assetStatusService.getAll().subscribe(assets => {\r\n            this.assetStatusList = assets[0];\r\n            this.assetStatusList.forEach(function (assetStatus) {\r\n                assetStatus.isActive = assetStatus.isActive == false ? false : true;\r\n            });\r\n        });\r\n        this.currentAssetStatus = new AssetStatus();\r\n    }\r\n\r\n    addAssetStatus(): void {\r\n        if (!(this.currentAssetStatus.identification && this.currentAssetStatus.name && this.currentAssetStatus.memo)) {\r\n            this.display = true;\r\n            return;\r\n        }\r\n\r\n        this.assetStatusService.add(this.currentAssetStatus).subscribe(asset => {\r\n            this.alertService.showMessage('Asset Status added successfully.');\r\n            this.assetStatusService.getAll().subscribe(assets => {\r\n                this.assetStatusList = assets[0];\r\n            });\r\n            this.resetAddAssetStatus();\r\n        });\r\n\r\n    }\r\n\r\n    setAssetStatusToUpdate(editAssetStatusPopup: any, id: number): void {\r\n        this.assetStatusToUpdate = Object.assign({}, this.assetStatusList.filter(function (asset) {\r\n            return asset.id == id;\r\n        })[0]);\r\n        this.modal = this.modalService.open(editAssetStatusPopup, { size: 'sm' });\r\n    }\r\n\r\n    updateAssetStatus(): void {\r\n        this.assetStatusService.update(this.assetStatusToUpdate).subscribe(asset => {\r\n            this.alertService.showMessage('Asset Status updated successfully.');\r\n            this.assetStatusService.getAll().subscribe(assets => {\r\n                this.assetStatusList = assets[0];\r\n            });\r\n            this.resetUpdateAssetStatus();\r\n            this.dismissModel();\r\n        });\r\n    }\r\n\r\n    removeAssetStatus(): void {\r\n        this.assetStatusService.remove(this.assetStatusToRemove.id).subscribe(response => {\r\n            this.alertService.showMessage(\"Asset Status removed successfully.\");\r\n            this.assetStatusService.getAll().subscribe(assets => {\r\n                this.assetStatusList = assets[0];\r\n                this.modal.close();\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n\r\n    resetAddAssetStatus(): void {\r\n        this.currentAssetStatus = new AssetStatus();\r\n    }\r\n\r\n    resetUpdateAssetStatus(): void {\r\n        this.assetStatusToUpdate = new AssetStatus();\r\n    }\r\n\r\n    dismissModel(): void {\r\n        if (this.modal != undefined) {\r\n            this.modal.close();\r\n        }\r\n    }\r\n\r\n    confirmDelete(content, id): void {\r\n        this.assetStatusToRemove = Object.assign({}, this.assetStatusList.filter(function (asset) {\r\n            return asset.id == id;\r\n        })[0]);;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n    }\r\n\r\n    toggleIsActive(assetStatus: any, event): void {\r\n        this.assetStatusToUpdate = assetStatus;\r\n        this.assetStatusToUpdate.isActive = event.checked == false ? false : true;\r\n        this.updateAssetStatus();\r\n    }\r\n\r\n    showAuditPopup(template, id): void {\r\n        this.auditAssetStatus(id);\r\n        this.modal = this.modalService.open(template, { size: 'sm' });\r\n    }\r\n\r\n    auditAssetStatus(assetStatusId: number): void {\r\n        this.assetStatusService.getAssetAudit(assetStatusId).subscribe(audits => {\r\n            var columnsToAvoid = [\"assetStatusAuditId\", \"id\", \"createdBy\", \"createdDate\",\"updatedDate\"];\r\n            this.AuditDetails = this.extractAuditChangedValues(audits.result, columnsToAvoid);\r\n        });\r\n    }\r\n\r\n    extractAuditChangedValues(audits: any[], columnsToAvoid: string[]): SingleScreenAuditDetails[] {\r\n        var singleScreenAuditList = [];\r\n        var index = 1;\r\n        audits.forEach(function (audit) {\r\n\r\n            var singleScreenAudit = new SingleScreenAuditDetails();\r\n            singleScreenAudit.LastUpdatedTime = audit.updatedDate.toString();\r\n            singleScreenAudit.LastUpdatedBy = audit.updatedBy != undefined ? audit.updatedBy : \"admin\";\r\n            singleScreenAudit.AuditChanges = [];\r\n            singleScreenAudit.Visible = false;\r\n            var properties = Object.keys(audit);\r\n            properties.forEach(function (property) {\r\n                if (audit[property] != null && columnsToAvoid.indexOf(property) == -1) {\r\n                    var auditChanges = new AuditChanges();\r\n                    auditChanges.FieldFriendlyname = property;\r\n                    auditChanges.NewValue = audit[property];\r\n\r\n                    if (index < audits.length) {\r\n                        var oldValueAudit = audits.slice(index, audits.length).filter(function (o) {\r\n                            return o[property] != null;\r\n                        })[0];\r\n                        auditChanges.OldValue = oldValueAudit != undefined ? oldValueAudit[property] : \"\";\r\n                    }\r\n                    else {\r\n                        auditChanges.OldValue = \"-\";\r\n                    }\r\n\r\n                    singleScreenAudit.AuditChanges.push(auditChanges);\r\n                }\r\n            });\r\n\r\n            singleScreenAuditList.push(singleScreenAudit);\r\n            index += 1;\r\n        });\r\n\r\n        return singleScreenAuditList;\r\n    }\r\n\r\n    ToggleChangedPropertiesSection(SingleScreenAudit: SingleScreenAuditDetails): void {\r\n        SingleScreenAudit.Visible = !SingleScreenAudit.Visible;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/AssetStatus/asset-status.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { AlertService } from '../../services/alert.service';\r\nimport { DepriciationMethodService } from '../../services/depriciation-method/depriciation.service';\r\nimport { DepriciationMethod } from '../../models/depriciation-method.model';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n    selector: 'app-depriciation-method',\r\n    template: require('./depriciation-method.component.html'),\r\n    styles: [require('./depriciation-method.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** DepriciationMethod component*/\r\nexport class DepriciationMethodComponent implements OnInit {\r\n    currentDepriciationmethod: DepriciationMethod;\r\n    depriciationMethodList: DepriciationMethod[];\r\n    depriciationToUpdate: DepriciationMethod;\r\n    updateMode: boolean;\r\n    private isDeleteMode: boolean = false;\r\n    private isEditMode: boolean = false;\r\n    modal: NgbModalRef;\r\n    display: boolean = false;\r\n    modelValue: boolean = false;\r\n    Active: string;\r\n\r\n    /** DepriciationMethod ctor */\r\n    constructor(private alertService: AlertService, private authService: AuthService, private depriciationMethodService: DepriciationMethodService, private modalService: NgbModal) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.depriciationMethodService.getAll().subscribe(depriciationmethods => {\r\n            this.depriciationMethodList = depriciationmethods[0];\r\n        });\r\n        this.currentDepriciationmethod = new DepriciationMethod();\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    adddepriciationmethod(): void {\r\n        if (!(this.currentDepriciationmethod.assetDepreciationMethodName && this.currentDepriciationmethod.assetDepreciationBasis && this.currentDepriciationmethod.assetDepreciationMemo)) {\r\n            this.display = true;\r\n            this.modelValue = true;\r\n        }\r\n        if ((this.currentDepriciationmethod.assetDepreciationMethodName && this.currentDepriciationmethod.assetDepreciationBasis && this.currentDepriciationmethod.assetDepreciationMemo)) {\r\n            this.currentDepriciationmethod.createdBy = this.userName;\r\n            this.currentDepriciationmethod.updatedBy = this.userName;\r\n            this.depriciationMethodService.add(this.currentDepriciationmethod).subscribe(depriciationmethod => {\r\n                this.currentDepriciationmethod = depriciationmethod;\r\n                this.alertService.showMessage('Depriciation Method  added successfully.');\r\n                this.depriciationMethodService.getAll().subscribe(depriciationmethods => {\r\n                    this.depriciationMethodList = depriciationmethods[0];\r\n                });\r\n                this.resetdepriciationmethod();\r\n            });\r\n        }\r\n    }\r\n    \r\n    setdepriciationmethodToUpdate(editAssetStatusPopup: any, id: number): void {\r\n        this.depriciationToUpdate = Object.assign({}, this.depriciationMethodList.filter(function (depriciationmethod) {\r\n            return depriciationmethod.assetDepreciationMethodId == id;\r\n        })[0]);\r\n        this.modal = this.modalService.open(editAssetStatusPopup, { size: 'sm' });\r\n    }\r\n\r\n    updatedepriciationmethod(): void {\r\n        if (!(this.depriciationToUpdate.assetDepreciationMethodName && this.depriciationToUpdate.assetDepreciationBasis && this.depriciationToUpdate.assetDepreciationMemo)) {\r\n            this.display = true;\r\n            this.modelValue = true;\r\n        }\r\n        else {\r\n            this.currentDepriciationmethod.updatedBy = this.userName;\r\n            this.depriciationMethodService.update(this.depriciationToUpdate).subscribe(depriciationmethod => {\r\n                this.alertService.showMessage('Depriciation Method  updated successfully.');\r\n                this.depriciationMethodService.getAll().subscribe(depriciationmethods => {\r\n                    this.depriciationMethodList = depriciationmethods[0];\r\n                });\r\n                this.updateMode = false;\r\n                this.resetdepriciationmethod();\r\n                this.dismissModel();\r\n            });\r\n        }\r\n    }\r\n\r\n    removedepriciationmethod(): void {\r\n        this.depriciationMethodService.remove(this.currentDepriciationmethod.assetDepreciationMethodId).subscribe(response => {\r\n            this.alertService.showMessage(\"Depriciation Method  removed successfully.\");\r\n            this.depriciationMethodService.getAll().subscribe(depriciationmethods => {\r\n                this.depriciationMethodList = depriciationmethods[0];\r\n                this.modal.close();\r\n            });\r\n        });\r\n\r\n    }\r\n    \r\n    resetdepriciationmethod(): void {\r\n        this.updateMode = false;\r\n        this.currentDepriciationmethod = new DepriciationMethod();\r\n    }\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.currentDepriciationmethod = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    toggleIsActive(depriciationMethod: any, e) {\r\n        if (e.checked == false) {\r\n            this.depriciationToUpdate = depriciationMethod;\r\n            this.Active = \"In Active\";\r\n            this.depriciationToUpdate.isActive == false;\r\n            this.depriciationMethodService.update(this.depriciationToUpdate).subscribe(asset => {\r\n                this.alertService.showMessage('Depriciation Method updated successfully.');\r\n                this.depriciationMethodService.getAll().subscribe(assets => {\r\n                    this.depriciationMethodList = assets[0];\r\n                });\r\n\r\n            })\r\n        }\r\n        else {\r\n            this.depriciationToUpdate = depriciationMethod;\r\n            this.Active = \"Active\";\r\n            this.depriciationToUpdate.isActive == true;\r\n            this.depriciationMethodService.update(this.depriciationToUpdate).subscribe(asset => {\r\n                this.alertService.showMessage('Depriciation Method updated successfully.');\r\n                this.depriciationMethodService.getAll().subscribe(assets => {\r\n                    this.depriciationMethodList = assets[0];\r\n                });\r\n            })\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/depriciation-method/depriciation-method.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { DisposalTypeService } from '../../services/disposal-type/disposaltype.service';\r\nimport { AlertService } from '../../services/alert.service';\r\nimport { DisposalType } from '../../models/disposal-type.model';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n    selector: 'app-disposal-type',\r\n    template: require('./disposal-type.component.html'),\r\n    styles: [require('./disposal-type.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** DisposalType component*/\r\nexport class DisposalTypeComponent implements OnInit {\r\n    currentdisposalType: DisposalType;\r\n    disposalTypeList: DisposalType[];\r\n    assetDisposalToUpdate: DisposalType;\r\n    updateMode: boolean;\r\n    private isDeleteMode: boolean = false;\r\n    private isEditMode: boolean = false;\r\n    modal: NgbModalRef;\r\n    display: boolean = false;\r\n    modelValue: boolean = false;\r\n    Active: string;\r\n\r\n    constructor(private alertService: AlertService, private disposalTypeService: DisposalTypeService, private authService: AuthService, private modalService: NgbModal) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.disposalTypeService.getAll().subscribe(disposalTypes => {\r\n            this.disposalTypeList = disposalTypes[0];\r\n        });\r\n        this.currentdisposalType = new DisposalType();\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    adddisposalType(): void {\r\n        if (!(this.currentdisposalType.assetDispoalId && this.currentdisposalType.assetDisposalName && this.currentdisposalType.assetDisposalMemo)) {\r\n            this.display = true;\r\n            this.modelValue = true;\r\n        }\r\n        if ((this.currentdisposalType.assetDispoalId && this.currentdisposalType.assetDisposalName && this.currentdisposalType.assetDisposalMemo)) {\r\n            this.currentdisposalType.createdBy = this.userName;\r\n            this.currentdisposalType.updatedBy = this.userName;\r\n            this.disposalTypeService.add(this.currentdisposalType).subscribe(disposalType => {\r\n                this.currentdisposalType = disposalType;\r\n                this.alertService.showMessage('Disposal Type added successfully.');\r\n                this.disposalTypeService.getAll().subscribe(disposalTypes => {\r\n                    this.disposalTypeList = disposalTypes[0];\r\n                });\r\n            });\r\n        }\r\n    }\r\n    \r\n\r\n    setdisposalTypeToUpdate(editDisposal: any, id: number): void {\r\n        this.assetDisposalToUpdate = Object.assign({}, this.disposalTypeList.filter(function (assetConvention) {\r\n            return assetConvention.assetDisposalTypeId == id;\r\n        })[0]);\r\n        this.modal = this.modalService.open(editDisposal, { size: 'sm' });\r\n    }\r\n\r\n\r\n    updatedisposalType(): void {\r\n        if (!(this.assetDisposalToUpdate.assetDispoalId && this.assetDisposalToUpdate.assetDisposalName && this.assetDisposalToUpdate.assetDisposalMemo)) {\r\n            this.display = true;\r\n            this.modelValue = true;\r\n        }\r\n        else {\r\n            this.currentdisposalType.updatedBy = this.userName;\r\n            this.disposalTypeService.update(this.assetDisposalToUpdate).subscribe(disposalType => {\r\n                this.alertService.showMessage('Disposal Type  updated successfully.');\r\n                this.disposalTypeService.getAll().subscribe(disposalTypes => {\r\n                    this.disposalTypeList = disposalTypes[0];\r\n                });\r\n                this.updateMode = false;\r\n                this.resetdisposalType();\r\n                this.dismissModel();\r\n            });\r\n        }\r\n    }\r\n\r\n    removedisposalType(): void {\r\n        this.disposalTypeService.remove(this.currentdisposalType.assetDisposalTypeId).subscribe(response => {\r\n            this.alertService.showMessage(\"Disposal Type  removed successfully.\");\r\n            this.disposalTypeService.getAll().subscribe(disposalTypes => {\r\n                this.disposalTypeList = disposalTypes[0];\r\n                this.modal.close();\r\n            });\r\n        });\r\n\r\n    }\r\n    \r\n    resetdisposalType(): void {\r\n        this.updateMode = false;\r\n        this.currentdisposalType = new DisposalType();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.currentdisposalType = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    toggleIsActive(assetTypes: any, e) {\r\n        if (e.checked == false) {\r\n            this.assetDisposalToUpdate = assetTypes;\r\n            this.Active = \"In Active\";\r\n            this.assetDisposalToUpdate.isActive == false;\r\n            this.disposalTypeService.update(this.assetDisposalToUpdate).subscribe(asset => {\r\n                this.alertService.showMessage('Disposal Type updated successfully.');\r\n                this.disposalTypeService.getAll().subscribe(assets => {\r\n                    this.disposalTypeList = assets[0];\r\n                });\r\n\r\n            })\r\n        }\r\n        else {\r\n            this.assetDisposalToUpdate = assetTypes;\r\n            this.Active = \"Active\";\r\n            this.assetDisposalToUpdate.isActive == true;\r\n            this.disposalTypeService.update(this.assetDisposalToUpdate).subscribe(asset => {\r\n                this.alertService.showMessage('Disposal Type updated successfully.');\r\n                this.disposalTypeService.getAll().subscribe(assets => {\r\n                    this.disposalTypeList = assets[0];\r\n                });\r\n            })\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/disposal-type/disposal-type.component.ts","import { OnInit, Component } from \"@angular/core\";\r\nimport { fadeInOut } from \"../../services/animations\";\r\nimport { AlertService } from \"../../services/alert.service\";\r\nimport { AssetDepConventionType } from \"../../models/assetDepConventionType.model\";\r\nimport { AssetDepConventionTypeService } from \"../../services/assetDepConventionType/assetDepConventionType.service\";\r\nimport { NgbModal, NgbModalRef } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n    selector: 'app-asset-dep-convention-type',\r\n    template: require('./asset-dep-convention-type.component.html'),\r\n        styles: [require('./asset-dep-convention-type.component.scss')],\r\n        animations: [fadeInOut]\r\n})\r\n\r\nexport class AssetDepConventionTypeComponent implements OnInit {\r\n\r\n    currentAssetDep: AssetDepConventionType;\r\n    assetDepList: AssetDepConventionType[];\r\n    assetDepConventionToUpdate: AssetDepConventionType;\r\n    updateMode: boolean;\r\n    private isDeleteMode: boolean = false;\r\n    private isEditMode: boolean = false;\r\n    modal: NgbModalRef;\r\n    display: boolean = false;\r\n    modelValue: boolean = false;\r\n    Active: string;\r\n\r\n    constructor(private alertService: AlertService, private assetDepConventionTypeService: AssetDepConventionTypeService, private modalService: NgbModal, private authService: AuthService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.assetDepConventionTypeService.getAll().subscribe(assetDeps => {\r\n            this.assetDepList = assetDeps[0];\r\n        });\r\n        this.currentAssetDep = new AssetDepConventionType();\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    addAssetDepConventionType(): void {\r\n        if (!(this.currentAssetDep.assetDepConventionId && this.currentAssetDep.assetDepConventionName && this.currentAssetDep.assetDepConventionMemo)) {\r\n            this.display = true;\r\n            this.modelValue = true;\r\n        }\r\n        if ((this.currentAssetDep.assetDepConventionId && this.currentAssetDep.assetDepConventionName && this.currentAssetDep.assetDepConventionMemo)) {\r\n            this.currentAssetDep.updatedBy = this.userName;\r\n            this.currentAssetDep.createdBy = this.userName;\r\n            this.assetDepConventionTypeService.add(this.currentAssetDep).subscribe(assetDep => {\r\n                this.currentAssetDep = assetDep;\r\n                this.alertService.showMessage('Asset Dep Convention added successfully.');\r\n                this.assetDepConventionTypeService.getAll().subscribe(assetDeps => {\r\n                    this.assetDepList = assetDeps[0];\r\n                });\r\n                this.resetAssetDepConventionType();\r\n            });\r\n        }\r\n    }\r\n    \r\n    setAssetDepConventionTypeToUpdate(editassetConvention: any, id: number): void {\r\n        this.assetDepConventionToUpdate = Object.assign({}, this.assetDepList.filter(function (assetConvention) {\r\n            return assetConvention.assetDepConventionTypeId == id;\r\n        })[0]);\r\n        this.modal = this.modalService.open(editassetConvention, { size: 'sm' });\r\n    }\r\n\r\n    updateAssetDepConventionType(): void {\r\n        if (!(this.assetDepConventionToUpdate.assetDepConventionId && this.assetDepConventionToUpdate.assetDepConventionName && this.assetDepConventionToUpdate.assetDepConventionMemo)) {\r\n            this.display = true;\r\n            this.modelValue = true;\r\n        }\r\n        else {\r\n            this.currentAssetDep.updatedBy = this.userName;\r\n            this.assetDepConventionTypeService.update(this.assetDepConventionToUpdate).subscribe(assetDep => {\r\n                this.alertService.showMessage('Asset Dep Convention updated successfully.');\r\n                this.assetDepConventionTypeService.getAll().subscribe(assetDep => {\r\n                    this.assetDepList = assetDep[0];\r\n                });\r\n                this.updateMode = false;\r\n                this.resetAssetDepConventionType();\r\n                this.dismissModel();\r\n            });\r\n        }\r\n    }\r\n\r\n    removeAssetDepConventionType(): void {\r\n        this.assetDepConventionTypeService.remove(this.currentAssetDep.assetDepConventionTypeId).subscribe(response => {\r\n            this.alertService.showMessage(\"Asset Dep Convention removed successfully.\");\r\n            this.assetDepConventionTypeService.getAll().subscribe(assetDeps => {\r\n                this.assetDepList = assetDeps[0];\r\n                this.modal.close();\r\n            });\r\n        });\r\n\r\n    }\r\n   \r\n    resetAssetDepConventionType(): void {\r\n        this.updateMode = false;\r\n        this.currentAssetDep = new AssetDepConventionType();\r\n    }\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.currentAssetDep = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    toggleIsActive(assetDepConventions: any, e) {\r\n        if (e.checked == false) {\r\n            this.assetDepConventionToUpdate = assetDepConventions;\r\n            this.Active = \"In Active\";\r\n            this.assetDepConventionToUpdate.isActive == false;\r\n            this.assetDepConventionTypeService.update(this.assetDepConventionToUpdate).subscribe(asset => {\r\n                this.alertService.showMessage('Asset Dep Convention updated successfully.');\r\n                this.assetDepConventionTypeService.getAll().subscribe(assets => {\r\n                    this.assetDepList = assets[0];\r\n                });\r\n\r\n            })\r\n        }\r\n        else {\r\n            this.assetDepConventionToUpdate = assetDepConventions;\r\n            this.Active = \"Active\";\r\n            this.assetDepConventionToUpdate.isActive == true;\r\n            this.assetDepConventionTypeService.update(this.assetDepConventionToUpdate).subscribe(asset => {\r\n                this.alertService.showMessage('Asset Dep Convention updated successfully.');\r\n                this.assetDepConventionTypeService.getAll().subscribe(assets => {\r\n                    this.assetDepList = assets[0];\r\n                });\r\n            })\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/asset-dep-convention-type/asset-dep-convention-type.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { AlertService } from '../../services/alert.service';\r\nimport { DepreciationIntervalsService } from '../../services/Depreciation -intervals/depreciation-intervals.service ';\r\nimport { DepreciationIntervals } from '../../models/depriciationIntervals.model';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n    selector: 'app-depreciation-intervals',\r\n    template: require('./depreciation-intervals.component.html'),\r\n    styles: [require('./depreciation-intervals.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\n/** Depreciation-Intervals component*/\r\nexport class DepreciationIntervalsComponent implements OnInit {\r\n\r\n    currentDepreciationIntervals: DepreciationIntervals;\r\n    depreciationIntervalsList: DepreciationIntervals[];\r\n    depriciationIntervalsToUpdate: DepreciationIntervals;\r\n    updateMode: boolean;\r\n    private isDeleteMode: boolean = false;\r\n    private isEditMode: boolean = false;\r\n    modal: NgbModalRef;\r\n    display: boolean = false;\r\n    modelValue: boolean = false;\r\n    Active: string;\r\n\r\n    constructor(private alertService: AlertService, private authService: AuthService, private depreciationIntervalsService: DepreciationIntervalsService, private modalService: NgbModal) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.depreciationIntervalsService.getAll().subscribe(depreciationIntervals => {\r\n            this.depreciationIntervalsList = depreciationIntervals[0];\r\n        });\r\n        this.currentDepreciationIntervals = new DepreciationIntervals();\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    adddepreciationIntervals(): void {\r\n        if (!(this.currentDepreciationIntervals.assetDepreciationIntervalId && this.currentDepreciationIntervals.assetDepreciationIntervalName && this.currentDepreciationIntervals.assetDepreciationIntervalMemo)) {\r\n            this.display = true;\r\n            this.modelValue = true;\r\n        }\r\n        if ((this.currentDepreciationIntervals.assetDepreciationIntervalId && this.currentDepreciationIntervals.assetDepreciationIntervalName && this.currentDepreciationIntervals.assetDepreciationIntervalMemo)) {\r\n            this.currentDepreciationIntervals.createdBy = this.userName;\r\n            this.currentDepreciationIntervals.updatedBy = this.userName;\r\n            this.depreciationIntervalsService.add(this.currentDepreciationIntervals).subscribe(depreciationInterval => {\r\n                this.currentDepreciationIntervals = depreciationInterval;\r\n                this.alertService.showMessage('Depreciation Interval  added successfully.');\r\n                this.depreciationIntervalsService.getAll().subscribe(depreciationIntervals => {\r\n                    this.depreciationIntervalsList = depreciationIntervals[0];\r\n                });\r\n                this.resetDepreciationInterval();\r\n            });\r\n        }\r\n    }\r\n    resetDepreciationInterval(): void {\r\n        this.updateMode = false;\r\n        this.currentDepreciationIntervals = new DepreciationIntervals();\r\n    }\r\n    \r\n    setdepreciationIntervalsToUpdate(editassetConvention: any, id: number): void {\r\n        this.depriciationIntervalsToUpdate = Object.assign({}, this.depreciationIntervalsList.filter(function (assetConvention) {\r\n            return assetConvention.assetDepreciationIntervalTypeId == id;\r\n        })[0]);\r\n        this.modal = this.modalService.open(editassetConvention, { size: 'sm' });\r\n    }\r\n\r\n    updatedepreciationIntervals(): void {\r\n        if (!(this.depriciationIntervalsToUpdate.assetDepreciationIntervalId && this.depriciationIntervalsToUpdate.assetDepreciationIntervalName && this.depriciationIntervalsToUpdate.assetDepreciationIntervalMemo)) {\r\n            this.display = true;\r\n            this.modelValue = true;\r\n        }\r\n        else {\r\n            this.currentDepreciationIntervals.updatedBy = this.userName;\r\n            this.depreciationIntervalsService.update(this.depriciationIntervalsToUpdate).subscribe(depreciationInterval => {\r\n                this.alertService.showMessage('Depreciation Interval  updated successfully.');\r\n                this.depreciationIntervalsService.getAll().subscribe(depreciationIntervals => {\r\n                    this.depreciationIntervalsList = depreciationIntervals[0];\r\n                });\r\n                this.updateMode = false;\r\n                this.resetdepreciationIntervals();\r\n                this.dismissModel();\r\n            });\r\n        }\r\n    }\r\n\r\n    removedepreciationIntervals(): void {\r\n        this.depreciationIntervalsService.remove(this.currentDepreciationIntervals.assetDepreciationIntervalTypeId).subscribe(response => {\r\n            this.alertService.showMessage(\"Depreciation Interval  removed successfully.\");\r\n            this.depreciationIntervalsService.getAll().subscribe(depreciationIntervals => {\r\n                this.depreciationIntervalsList = depreciationIntervals[0];\r\n                this.modal.close();\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    resetdepreciationIntervals(): void {\r\n        this.updateMode = false;\r\n        this.currentDepreciationIntervals = new DepreciationIntervals();\r\n    }\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.currentDepreciationIntervals = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    toggleIsActive(assetTypes: any, e) {\r\n        if (e.checked == false) {\r\n            this.depriciationIntervalsToUpdate = assetTypes;\r\n            this.Active = \"In Active\";\r\n            this.depriciationIntervalsToUpdate.isActive == false;\r\n            this.depreciationIntervalsService.update(this.depriciationIntervalsToUpdate).subscribe(asset => {\r\n                this.alertService.showMessage('Asset Depreciation Interval Type updated successfully.');\r\n                this.depreciationIntervalsService.getAll().subscribe(assets => {\r\n                    this.depreciationIntervalsList = assets[0];\r\n                });\r\n\r\n            })\r\n        }\r\n        else {\r\n            this.depriciationIntervalsToUpdate = assetTypes;\r\n            this.Active = \"Active\";\r\n            this.depriciationIntervalsToUpdate.isActive == true;\r\n            this.depreciationIntervalsService.update(this.depriciationIntervalsToUpdate).subscribe(asset => {\r\n                this.alertService.showMessage('Asset Depreciation Interval Type updated successfully.');\r\n                this.depreciationIntervalsService.getAll().subscribe(assets => {\r\n                    this.depreciationIntervalsList = assets[0];\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/depreciation-intervals/depreciation-intervals.component.ts","import { OnInit, Component } from \"@angular/core\";\r\nimport { fadeInOut } from \"../../services/animations\";\r\nimport { AlertService } from \"../../services/alert.service\";\r\nimport { AssetIntangibleTypeSingleScreen } from \"../../models/assetIntangibleTypeSingleScreen.model\";\r\nimport { AssetIntangibleTypeSingleScreenService } from \"../../services/AssetIntangibleTypeSingleScreen/assetIntangibleTypeSingleScreen.service\";\r\nimport { NgbModalRef, NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n     selector: 'app-asset-intangible-type-single-screen',\r\n     template: require('./asset-intangible-type-single-screen.component.html'),\r\n     styles: [],\r\n     animations: [fadeInOut]\r\n})\r\nexport class AssetIntangibleTypeSingleScreenComponent implements OnInit {\r\n\r\n    currentAssetIntangible: AssetIntangibleTypeSingleScreen;\r\n    assetIntangibleList: AssetIntangibleTypeSingleScreen[];\r\n    assetIntangibleToUpdate: AssetIntangibleTypeSingleScreen;\r\n    updateMode: boolean;\r\n    private isDeleteMode: boolean = false;\r\n    private isEditMode: boolean = false;\r\n    modal: NgbModalRef;\r\n    display: boolean = false;\r\n    modelValue: boolean = false;\r\n    Active: string;\r\n\r\n    constructor(private alertService: AlertService, private assetIntangibleService: AssetIntangibleTypeSingleScreenService, private modalService: NgbModal, private authService: AuthService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.assetIntangibleService.getAll().subscribe(assetIntangible => {\r\n            this.assetIntangibleList = assetIntangible[0];\r\n        });\r\n        this.currentAssetIntangible = new AssetIntangibleTypeSingleScreen();\r\n    }\r\n\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    addAssetIntangible(): void {\r\n        if (!(this.currentAssetIntangible.assetIntangibleSingleId && this.currentAssetIntangible.assetIntangibleName && this.currentAssetIntangible.assetIntangibleMemo)) {\r\n            this.display = true;\r\n            this.modelValue = true;\r\n        }\r\n        if ((this.currentAssetIntangible.assetIntangibleSingleId && this.currentAssetIntangible.assetIntangibleName && this.currentAssetIntangible.assetIntangibleMemo)) {\r\n            this.currentAssetIntangible.updatedBy = this.userName;\r\n            this.currentAssetIntangible.createdBy = this.userName;\r\n            this.assetIntangibleService.add(this.currentAssetIntangible).subscribe(assetIntangible => {\r\n                this.currentAssetIntangible = assetIntangible;\r\n                this.alertService.showMessage('Asset Intangible added successfully.');\r\n                this.assetIntangibleService.getAll().subscribe(assetIntangible => {\r\n                    this.assetIntangibleList = assetIntangible[0];\r\n                });\r\n                this.resetAssetIntangible();\r\n            });\r\n        }\r\n    }\r\n\r\n    setAssetIntangibleToUpdate(editassetConvention: any, id: number): void {\r\n        this.assetIntangibleToUpdate = Object.assign({}, this.assetIntangibleList.filter(function (assetIntangible) {\r\n            return assetIntangible.assetIntangibleTypeSingleId == id;\r\n        })[0]);\r\n        this.modal = this.modalService.open(editassetConvention, { size: 'sm' });\r\n    }\r\n    updateAssetIntangible(): void {\r\n        if (!(this.assetIntangibleToUpdate.assetIntangibleSingleId && this.assetIntangibleToUpdate.assetIntangibleName && this.assetIntangibleToUpdate.assetIntangibleMemo)) {\r\n            this.display = true;\r\n            this.modelValue = true;\r\n        }\r\n        else {\r\n            this.currentAssetIntangible.updatedBy = this.userName;\r\n            this.assetIntangibleService.update(this.assetIntangibleToUpdate).subscribe(assetIntangible => {\r\n                this.alertService.showMessage('Asset Intangible updated successfully.');\r\n                this.assetIntangibleService.getAll().subscribe(assetIntangible => {\r\n                    this.assetIntangibleList = assetIntangible[0];\r\n                });\r\n                this.updateMode = false;\r\n                this.resetAssetIntangible();\r\n                this.dismissModel();\r\n            });\r\n        }\r\n    }\r\n\r\n    removeAssetIntangible(): void {\r\n        this.assetIntangibleService.remove(this.currentAssetIntangible.assetIntangibleTypeSingleId).subscribe(response => {\r\n            this.alertService.showMessage(\"Asset Intangible removed successfully.\");\r\n            this.assetIntangibleService.getAll().subscribe(assets => {\r\n                this.assetIntangibleList = assets[0];\r\n                this.modal.close();\r\n            });\r\n        });\r\n   }\r\n    \r\n    resetAssetIntangible(): void {\r\n        this.updateMode = false;\r\n        this.currentAssetIntangible = new AssetIntangibleTypeSingleScreen();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.currentAssetIntangible = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n\r\n    toggleIsActive(intangibleTypes: any, e) {\r\n        if (e.checked == false) {\r\n            this.assetIntangibleToUpdate = intangibleTypes;\r\n            this.Active = \"In Active\";\r\n            this.assetIntangibleToUpdate.isActive == false;\r\n            this.assetIntangibleService.update(this.assetIntangibleToUpdate).subscribe(asset => {\r\n                this.alertService.showMessage('Asset Intangible updated successfully.');\r\n                this.assetIntangibleService.getAll().subscribe(assets => {\r\n                    this.assetIntangibleList = assets[0];\r\n                });\r\n\r\n            })\r\n        }\r\n        else {\r\n            this.assetIntangibleToUpdate = intangibleTypes;\r\n            this.Active = \"Active\";\r\n            this.assetIntangibleToUpdate.isActive == true;\r\n            this.assetIntangibleService.update(this.assetIntangibleToUpdate).subscribe(asset => {\r\n                this.alertService.showMessage('Asset Intangible updated successfully.');\r\n                this.assetIntangibleService.getAll().subscribe(assets => {\r\n                    this.assetIntangibleList = assets[0];\r\n                });\r\n            })\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/asset-intangible-type-single-screen/asset-intangible-type-single-screen.component.ts","import { OnInit, Component } from \"@angular/core\";\r\nimport { fadeInOut } from \"../../services/animations\";\r\nimport { AlertService } from \"../../services/alert.service\";\r\nimport { AssetTypeSingleScreenService } from \"../../services/AssetTypeSingleScreen/assettypesinglescreen.service\";\r\nimport { AssetTypeSingleScreen } from \"../../models/assettypesinglescreen.model\";\r\nimport { NgbModal, NgbModalRef } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n    selector: 'app-asset-type-single-screen',\r\n    template: require('./asset-type-single-screen.component.html'),\r\n    styles: [require('./asset-type-single-screen.component.scss')],\r\n    animations: [fadeInOut]\r\n})\r\nexport class AssetTypeSingleScreenComponent implements OnInit {\r\n\r\n    currentAssetTypeetStatus: AssetTypeSingleScreen;\r\n    assetTypeList: AssetTypeSingleScreen[];\r\n    assetTypeToUpdate: AssetTypeSingleScreen;\r\n    updateMode: boolean;\r\n    private isDeleteMode: boolean = false;\r\n    private isEditMode: boolean = false;\r\n    modal: NgbModalRef;\r\n    display: boolean = false;\r\n    modelValue: boolean = false;\r\n    Active: string;\r\n\r\n    constructor(private alertService: AlertService, private assetTypeService: AssetTypeSingleScreenService, private modalService: NgbModal, private authService: AuthService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.assetTypeService.getAll().subscribe(AssetTypes => {\r\n            this.assetTypeList = AssetTypes[0];\r\n        });\r\n        this.currentAssetTypeetStatus = new AssetTypeSingleScreen();\r\n    }\r\n\r\n    get userName(): string {\r\n        return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n    }\r\n\r\n    addAssetType(): void {\r\n        if (!(this.currentAssetTypeetStatus.assetTypeSingleId && this.currentAssetTypeetStatus.assetTypeName && this.currentAssetTypeetStatus.assetTypeMemo)) {\r\n            this.display = true;\r\n            this.modelValue = true;\r\n        }\r\n        if ((this.currentAssetTypeetStatus.assetTypeSingleId && this.currentAssetTypeetStatus.assetTypeName && this.currentAssetTypeetStatus.assetTypeMemo)) {\r\n            this.currentAssetTypeetStatus.createdBy = this.userName;\r\n            this.currentAssetTypeetStatus.updatedBy = this.userName;\r\n            this.assetTypeService.add(this.currentAssetTypeetStatus).subscribe(asset => {\r\n                this.currentAssetTypeetStatus = asset;\r\n                this.alertService.showMessage('Asset Type added successfully.');\r\n                this.assetTypeService.getAll().subscribe(AssetTypes => {\r\n                    this.assetTypeList = AssetTypes[0];\r\n                });\r\n                this.resetAssetTypeAdd();\r\n            });\r\n        }\r\n    }\r\n\r\n    resetAssetTypeAdd(): void {\r\n        this.currentAssetTypeetStatus = new AssetTypeSingleScreen();\r\n    }\r\n   \r\n    setAssetTypeToUpdate(editAssetTypes: any, id: number): void {\r\n        this.assetTypeToUpdate = Object.assign({}, this.assetTypeList.filter(function (asset) {\r\n            return asset.assetTypeSingleScreenId == id;\r\n        })[0]);\r\n        this.modal = this.modalService.open(editAssetTypes, { size: 'sm' });\r\n    }\r\n\r\n    updateAssetType(): void {\r\n        if (!(this.assetTypeToUpdate.assetTypeSingleId && this.assetTypeToUpdate.assetTypeName && this.assetTypeToUpdate.assetTypeMemo)) {\r\n            this.display = true;\r\n            this.modelValue = true;\r\n        }\r\n        else {\r\n            this.currentAssetTypeetStatus.updatedBy = this.userName;\r\n            this.assetTypeService.update(this.assetTypeToUpdate).subscribe(asset => {\r\n                this.alertService.showMessage('Asset Type updated successfully.');\r\n                this.assetTypeService.getAll().subscribe(AssetTypes => {\r\n                    this.assetTypeList = AssetTypes[0];\r\n                });\r\n                this.updateMode = false;\r\n                this.resetAssetType();\r\n                this.dismissModel();\r\n            });\r\n        }\r\n    }\r\n\r\n    removeAssetType(): void {\r\n        this.assetTypeService.remove(this.currentAssetTypeetStatus.assetTypeSingleScreenId).subscribe(response => {\r\n            this.alertService.showMessage(\"Asset Type removed successfully.\");\r\n            this.assetTypeService.getAll().subscribe(AssetTypes => {\r\n                this.assetTypeList = AssetTypes[0];\r\n                this.modal.close();\r\n            });\r\n        });\r\n\r\n    }\r\n    \r\n    resetAssetType(): void {\r\n        this.updateMode = false;\r\n        this.currentAssetTypeetStatus = new AssetTypeSingleScreen();\r\n    }\r\n\r\n    dismissModel() {\r\n        this.isDeleteMode = false;\r\n        this.isEditMode = false;\r\n        this.modal.close();\r\n    }\r\n\r\n    openDelete(content, row) {\r\n\r\n        this.isEditMode = false;\r\n        this.isDeleteMode = true;\r\n        this.currentAssetTypeetStatus = row;\r\n        this.modal = this.modalService.open(content, { size: 'sm' });\r\n        this.modal.result.then(() => {\r\n            console.log('When user closes');\r\n        }, () => { console.log('Backdrop click') })\r\n    }\r\n    toggleIsActive(assetTypes: any, e) {\r\n        if (e.checked == false) {\r\n            this.assetTypeToUpdate = assetTypes;\r\n            this.Active = \"In Active\";\r\n            this.assetTypeToUpdate.isActive == false;\r\n            this.assetTypeService.update(this.assetTypeToUpdate).subscribe(asset => {\r\n                this.alertService.showMessage('Asset Type updated successfully.');\r\n                this.assetTypeService.getAll().subscribe(assets => {\r\n                    this.assetTypeList = assets[0];\r\n                });\r\n\r\n            })\r\n        }\r\n        else {\r\n            this.assetTypeToUpdate = assetTypes;\r\n            this.Active = \"Active\";\r\n            this.assetTypeToUpdate.isActive == true;\r\n            this.assetTypeService.update(this.assetTypeToUpdate).subscribe(asset => {\r\n                this.alertService.showMessage('Asset Type updated successfully.');\r\n                this.assetTypeService.getAll().subscribe(assets => {\r\n                    this.assetTypeList = assets[0];\r\n                });\r\n            })\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/components/asset-type-single-screen/asset-type-single-screen.component.ts","// ===============================\r\n// info@ebenmonney.comss\r\n// www.ebenmonney.com/quickapp-pro\r\n// ===============================\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { SingleComponent } from \"./singlepages.component\";\r\nimport { ActionsComponent } from '../components/actions/actions.component';\r\nimport { ActionAttributesComponent } from '../components/action-attributes/action-attributes.component';\r\nimport { AtaMainComponent } from '../components/ata-main/ata-main.component';\r\n//import { ConditionsComponent } from '../components/conditions/conditions.component';\r\nimport { CreditTermsComponent } from '../components/credit-terms/credit-terms.component';\r\nimport { CurrencyComponent } from '../components/currency/currency.component';\r\nimport { CustomerClassificationComponent } from '../components/customer-classification/customer-classification.component';\r\nimport { DocumentsComponent } from '../components/documents/documents.component';\r\nimport { EmployeeExpertiseComponent } from '../components/employee-expertise/employee-expertise.component';\r\nimport { ExpenditureComponent } from '../components/expenditure/expenditure.component';\r\nimport { FindingsComponent } from '../components/findings/findings.component';\r\nimport { GateCodeComponent } from '../components/gate-code/gate-code.component';\r\nimport { IntegrationComponent } from '../components/integration/integration.component';\r\nimport { ItemClassificationComponent } from '../components/item-classification/item-classification.component';\r\nimport { ItemGroupComponent } from '../components/item-group/item-group.component';\r\nimport { JobTitleComponent } from '../components/job-title/job-title.component';\r\nimport { PriorityComponent } from '../components/priority/priority.component';\r\nimport { ProvisionComponent } from '../components/provision/provision.component';\r\nimport { PublicationComponent } from '../components/publication/publication.component';\r\n//import { DefaultMessagesComponent } from '../components/default-messages/default-messages.component';\r\nimport { ReasonComponent } from '../components/reason/reason.component';\r\nimport { TaxRateComponent } from '../components/tax-rate/tax-rate.component';\r\nimport { UnitOfMeasureComponent } from '../components/unit-of-measure/unit-of-measure.component';\r\nimport { VendorClassificationComponent } from '../components/vendor-classification/vendor-classification.component';\r\nimport { WorkPerformedComponent } from '../components/work-performed/work-performed.component';\r\nimport { WorkScopeComponent } from '../components/work-scope/work-scope.component';\r\n\r\n\r\n\r\nimport { ActionAttributeMappingComponent } from '../components/action-attribute-mapping/action-attribute-mapping.component';\r\nimport { AtaSubChapter1Component } from '../components/ata-sub-chapter1/ata-sub-chapter1.component';\r\nimport { AtaSubChapter2Component } from '../components/ata-sub-chapter2/ata-sub-chapter2.component';\r\n\r\nimport { LocationComponent } from '../components/location/location.component';\r\nimport { ShelfComponent } from '../components/shelf/shelf.component';\r\nimport { BinComponent } from '../components/bin/bin.component';\r\nimport { CapabilitiesComponent } from '../components/capabilities/capabilities.component';\r\nimport { FinancialStatementMappingComponent } from '../components/financial-statement-mapping/financial-statement-mapping.component';\r\nimport { GlAccountClassComponent } from '../components/gl-account-class/gl-account-class.component';\r\nimport { GlCashFlowClassificationComponent } from '../components/gl-cash-flow-classification/gl-cash-flow-classification.component';\r\nimport { GlFinancialStatementComponent } from '../components/gl-financial-statement/gl-financial-statement.component';\r\nimport { JournalApprovalsComponent } from '../components/journal-approvals/journal-approvals.component';\r\nimport { RfqEngineComponent } from '../components/rfq-engine/rfq-engine.component';\r\n\r\n\r\nimport { ActionsEditorComponent } from '../components/actions/actions-editor.component';\r\n\r\n\r\nimport { AuthService } from '../services/auth.service';\r\nimport { AuthGuard } from '../services/auth-guard.service';\r\nimport { ChargesComponent } from '../components/charges/charges.component';\r\nimport { DefaultMessageComponent } from '../components/default-message/default-message.component';\r\nimport { TaxTypeComponent } from '../components/tax-type/tax-type.component';\r\nimport { ConditionsComponent } from '../components/conditions/conditions.component';\r\nimport { SiteComponent } from '../components/site/site.component';\r\n//import { Warehouse } from '../models/warehouse.model';\r\nimport { WarehouseComponent } from '../components/warehouse/warehouse.component';\r\n\r\nimport { GLAccountCategoryComponent } from '../components/gl-account-categories/gl-account-categories.component';\r\nimport { ManufacturerComponent } from \"../components/manufacturer/manufacturer.component\";\r\nimport { VendorcapabilitiesComponent } from '../components/vendorcapabilities/vendorcapabilities.component';\r\nimport { LaberAndOverheadCostSetupComponent } from '../components/laber-and-overhead-cost-setup/laber-and-overhead-cost-setup.component';\r\nimport { CertificationTypeComponent } from '../components/certification-type/certification-type.component';\r\nimport { AssetStatusComponent } from '../components/AssetStatus/asset-status.component';\r\nimport { DepriciationMethodComponent } from '../components/depriciation-method/depriciation-method.component';\r\nimport { DisposalTypeComponent } from '../components/disposal-type/disposal-type.component';\r\nimport { AssetDepConventionTypeComponent } from '../components/asset-dep-convention-type/asset-dep-convention-type.component';\r\nimport { DepreciationIntervalsComponent } from '../components/depreciation-intervals/depreciation-intervals.component';\r\nimport { AssetIntangibleTypeSingleScreenComponent } from '../components/asset-intangible-type-single-screen/asset-intangible-type-single-screen.component';\r\nimport { AssetTypeSingleScreenComponent } from '../components/asset-type-single-screen/asset-type-single-screen.component';\r\n\r\n\r\nconst singlePagesRoutes: Routes = [\r\n    {\r\n        path: 'singlepages',\r\n        component: SingleComponent ,\r\n        children: [\r\n            {\r\n                path: 'asset-status',\r\n                component: AssetStatusComponent,\r\n                data: { title:'Asset Status' }\r\n            },\r\n            {\r\n                path: 'app-actions',\r\n                component: ActionsComponent,\r\n                data: { title: \"Actions\" }\r\n            },\r\n            {\r\n                path: 'app-action-attributes',\r\n                component: ActionAttributesComponent,\r\n                data: { title: \"Action Attributes\" }\r\n            }\r\n            ,\r\n            {\r\n                path: 'app-ata-main',\r\n                component: AtaMainComponent,\r\n                data: { title: \"Ata Chapter\" }\r\n            },\r\n            {\r\n                path: 'app-charges',\r\n                component:ChargesComponent,\r\n                data: { title: \"Charges\" }\r\n            },\r\n            { path: \"app-conditions\", component: ConditionsComponent, data: { title: \"Conditions\" } },\r\n            { path: \"app-credit-terms\", component: CreditTermsComponent, data: { title: \"Credit Terms\" } },\r\n            { path: \"app-currency\", component: CurrencyComponent, data: { title: \"Currency\" } },\r\n            { path: \"app-customer-classification\", component: CustomerClassificationComponent, data: { title: \"Customer Classification\" } },\r\n         \r\n            { path: \"app-documents\", component: DocumentsComponent, data: { title: \"Documents\" } },\r\n            { path: \"app-employee-expertise\", component: EmployeeExpertiseComponent, data: { title: \"Employee Expertise\" } },\r\n            { path: \"app-expenditure\", component: ExpenditureComponent, data: { title: \"Expenditure\" } },\r\n            { path: \"app-findings\", component: FindingsComponent, data: { title: \"Findings\" } },\r\n            { path: \"app-gate-code\", component: GateCodeComponent, data: { title: \"Gate Code\" } },\r\n            { path: \"app-integration\", component: IntegrationComponent, data: { title: \"Integration\" } },\r\n            { path: \"app-item-classification\", component: ItemClassificationComponent, data: { title: \"Item Classification\" } },\r\n            { path: \"app-item-group\", component: ItemGroupComponent, data: { title: \"Item Group\" } },\r\n            { path: \"app-job-title\", component: JobTitleComponent, data: { title: \"Job Title\" } },\r\n            { path: \"app-priority\", component: PriorityComponent, data: { title: \"Priority\" } },\r\n            { path: \"app-provision\", component: ProvisionComponent, data: { title: \"Provision\" } },\r\n            { path: \"app-publication\", component: PublicationComponent, data: { title: \"Publication\" } },\r\n            { path: \"app-reason\", component: ReasonComponent, data: { title: \"Reason\" } },\r\n            { path: \"app-tax-rate\", component: TaxRateComponent, data: { title: \"Tax Rate\" } },\r\n            { path: \"app-unit-of-measure\", component: UnitOfMeasureComponent, data: { title: \"Unit of Measure\" } },\r\n            { path: \"app-vendor-classification\", component: VendorClassificationComponent, data: { title: \"Vendor Classification\" } },\r\n            { path: \"app-work-performed\", component: WorkPerformedComponent, data: { title: \"Work Performed\" } },\r\n            { path: \"app-work-scope\", component: WorkScopeComponent, data: { title: \"Work Scope\" } },\r\n            { path: \"edit-action\", component: ActionsEditorComponent, data: { title: \"Edit Action\" } },\r\n\t\t\t{ path: \"app-defaultmessage\", component: DefaultMessageComponent, data: { title: \"Defualt message\" } },\r\n\t\t\t{ path: \"app-tax-type\", component: TaxTypeComponent, data: { title: \"Tax type\" } },\r\n\t\t\t{ path: \"app-action-attribute-mapping\", component: ActionAttributeMappingComponent, data: { title: \"Action Attribute Mapping\" } },\r\n\t\t\t{ path: \"app-ata-sub-chapter1\", component: AtaSubChapter1Component, data: { title: \"Ata Sub Chapter\" } },\r\n\t\t\t{ path: \"app-ata-sub-chapter2\", component: AtaSubChapter2Component, data: { title: \"Ata Sub Chapter 2\" } },\r\n\t\t\t{ path: \"app-site\", component: SiteComponent, data: { title: \"Site\" } },\r\n\t\t\t{ path: \"app-location\", component: LocationComponent, data: { title: \"Location\" } },\r\n\t\t\t{ path: \"app-shelf\", component: ShelfComponent, data: { title: \"Shelf\" } },\r\n\t\t\t{ path: \"app-bin\", component: BinComponent, data: { title: \"Bin\" } },\r\n\t\t\t{ path: \"app-capabilities\", component: CapabilitiesComponent, data: { title: \"Capabilities\" } },\r\n\t\t\t{ path: \"app-financial-statement-mapping\", component: FinancialStatementMappingComponent, data: { title: \"Financial Statement Mapping\" } },\r\n\t\t\t{ path: \"app-gl-account-class\", component: GlAccountClassComponent, data: { title: \"Gl Account Class\" } },\r\n\t\t\t{ path: \"app-gl-cash-flow-classification\", component: GlCashFlowClassificationComponent, data: { title: \"Gl CashFlow Classification\" } },\r\n\t\t\t{ path: \"app-gl-financial-statement\", component: GlFinancialStatementComponent, data: { title: \"GL Financial Statement\" } },\r\n\t\t\t{ path: \"app-glaccount-category\", component: GLAccountCategoryComponent, data: { title: \"Expenditure Type\" } },\r\n\t\t\t{ path: \"app-journal-approvals\", component: JournalApprovalsComponent, data: { title: \"Journal Approvals\" } },\r\n\t\t\t{ path: \"app-rfq-engine\", component: RfqEngineComponent, data: { title: \"RFQ Engine\" } },\r\n\t\t\t{ path: \"app-warehouse\", component: WarehouseComponent, data: { title: \"Ware House\" } },\r\n\t\t\t{ path: \"app-manufacturer\", component: ManufacturerComponent, data: { title: \"Manufacturer\" } },\r\n\t\t\t{ path: \"app-vendorcapabilities\", component: VendorcapabilitiesComponent, data: { title: \"Vendor Setup\" } },\r\n\t\t\t{ path: \"app-labor-and-overhead-cost-setup\", component: LaberAndOverheadCostSetupComponent, data: { title: \"Labor And Overhead Cost SetUp\" } },\r\n            { path: \"app-certification-type\", component: CertificationTypeComponent, data: { title: \"Certification Type\" } },\r\n             { path: \"app-depriciation-method\", component: DepriciationMethodComponent, data: { title: \"Certification Type\" } },\r\n            { path: \"app-disposal-type\", component: DisposalTypeComponent, data: { title: \"Disposal Type\" } },\r\n            { path: \"app-asset-dep-convention-type\", component: AssetDepConventionTypeComponent, data: { title: \"Depreciation Convension\" } },\r\n            { path: \"app-depreciation-intervals\", component: DepreciationIntervalsComponent, data: { title: \"Depreciation Intervals\" } },\r\n            { path: \"app-asset-intangible-type-single-screen\", component: AssetIntangibleTypeSingleScreenComponent, data: { title: \"Intangible Type\" } },\r\n\r\n            { path: \"app-asset-type-single-screen\", component: AssetTypeSingleScreenComponent, data: { title: \"Asset Type\" } }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(singlePagesRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ],\r\n    providers: [\r\n        AuthService, AuthGuard\r\n    ]\r\n})\r\nexport class SinglePagesRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/singlepages/singlepages-routing.module.ts","module.exports = \"<p-breadcrumb [model]=\\\"items\\\" [home]=\\\"home\\\"></p-breadcrumb>\\r\\n<router-outlet></router-outlet>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/singlepages/singlepages.component.html\n// module id = 1697\n// module chunks = 0","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Action {\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, actionId?: number, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n        this.actionId = actionId;\r\n        this.description = description;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n\r\n    }\r\n\r\n    public actionId: number;\r\n    public description: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n\r\n        \r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/action.model.ts","module.exports = \"\\r\\n<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Actions</li>\\r\\n\\t\\t\\t</ol>\\r\\n\\t\\t</nav>-->\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Actions</h4>\\r\\n\\t\\t\\t\\t<span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allActions\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [metaKeySelection]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Action\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<app-company></app-company>-->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!--<button class=\\\"btn-fa fa-eye\\\" mat-icon-button (click)=\\\"openView(contentEdit,rowData)\\\" matTooltip=\\\"View\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>View</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>-->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"Edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"Delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"History\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete 'Receive' Action ?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Action</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Action</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"actionname\\\" class=\\\"control-label\\\">Action Name<span class=\\\"clr-red\\\">*</span></label></div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"actionName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterActions($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"2\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template let-actionName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{actionName}}</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Entry Already Exists</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\tMemo Name required.\\r\\n\\t</div>\\r\\n\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\tMemo must be at least 2 characters long.\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n\\t</div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of Action</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n                        <th>Field Name</th>\\r\\n                        <th>Value After</th>\\r\\n                        <th>Value Before</th>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n  \\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n                <h4 class=\\\"modal-title\\\">Action Details</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body viewform\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Action Name: </b></span><span class=\\\"value\\\">{{action_name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createddate | date: 'MM/dd/yyyy'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy'}}</span></p>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\"  (click)=\\\"dismissModel()\\\">Close</button>\\r\\n            </div>\\r\\n        </div>\\r\\n   \\r\\n  </ng-template>\\r\\n\\r\\n    <ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n        \\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n                    <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <p>Sample Point 1 about Page Description</p>\\r\\n                    <p>Sample Point 2 about Page Description</p>\\r\\n                    <p>Sample Point 3 about Page Description</p>\\r\\n                    <p>Sample Point 4 about Page Description</p>\\r\\n                    <p>Sample Point 5 about Page Description</p>\\r\\n                    <hr />\\r\\n                    <p><b>Excell format to upload the Data - <a href=\\\"http://design.poweraerosuites.com/admin/documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n                </div>\\r\\n            </div>\\r\\n      \\r\\n    </ng-template>\\r\\n\\r\\n   \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/actions/actions.component.html\n// module id = 1699\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./actions.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/actions/actions.component.scss\n// module id = 1700\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/actions/actions.component.scss\n// module id = 1701\n// module chunks = 0","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class ActionAttribute {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, actionAttributeId?: number, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n        this.actionAttributeId = actionAttributeId;\r\n        this.description = description;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public actionAttributeId: number;\r\n    public description: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/actionattribute.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Action Attribute</h4>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allActionAttribute\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\" [scrollable]=\\\"true\\\" scrollHeight=\\\"450px\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Action Attribute\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<colgroup>\\r\\n\\t\\t\\t\\t\\t\\t\\t<col *ngFor=\\\"let col of columns\\\" style=\\\"width:130px\\\">\\r\\n\\t\\t\\t\\t\\t\\t</colgroup>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width:200px\\\"></th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width:200px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Action Attribute</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Action Attribute</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"netdays\\\" class=\\\"control-label\\\">action attribute name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" required #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netdays\\\" class=\\\"control-label\\\">Action Attribute Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"actionAttributeName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterActionAttributes($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minlength]=\\\"2\\\" [minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-actionAttributeName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{actionAttributeName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Entry Already Exists</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\tMemo is required.\\r\\n\\t</div>\\r\\n\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\tMemo category must be at least 2 characters long.\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of Action Attributes</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th>AID</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Field Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>After Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedDate| date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Action Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>Action Attribute Name: </b></span><span class=\\\"value\\\">{{sourceView.description}}</span></p>\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{sourceView.memo}}</span></p>\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{sourceView.createdBy}}</span></p>\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{sourceView.createdDate | date: 'MM/dd/yyyy'}}</span></p>\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{sourceView.updatedBy}}</span></p>\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{sourceView.updatedDate | date: 'MM/dd/yyyy'}}</span></p>\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/action-attributes/action-attributes.component.html\n// module id = 1703\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./action-attributes.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/action-attributes/action-attributes.component.scss\n// module id = 1704\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/action-attributes/action-attributes.component.scss\n// module id = 1705\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class ATAChapter {\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(ataChapterCode?: number, ataChapterId?: number, isActive?: boolean, ataChapterName?: string, ataChapterCategory?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, memo?: string) {\r\n\r\n\t\tthis.ataChapterId = ataChapterId;\r\n        this.ataChapterName = ataChapterName;\r\n\t\tthis.ataChapterCategory = ataChapterCategory;\r\n\t\tthis.ataChapterCode = ataChapterCode;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n\tpublic ataChapterId: number;\r\n\tpublic ataChapterName: string;\r\n\tpublic ataChapterCode: number;\r\n    public ataChapterCategory: string;\r\n    public isActive?: boolean;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n\tpublic memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/atachapter.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">ATA</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n\\r\\n                <h4 class=\\\"page-heading clr-green\\\">ATA Main</h4>\\r\\n\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n                <p-table #dt [value]=\\\"allATAMaininfo\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add ATA Main\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Delete Contact Modal -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit ATA MAin</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add ATA MAin</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"ataChapterName\\\" class=\\\"control-label\\\">ATA Name <span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"ataChapterName\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" required minlength=\\\"5\\\" #ataChapterName=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.ataChapterName\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\r\\n\\t\\t\\t\\t<label for=\\\"ataChapterName\\\" class=\\\"control-label\\\">ATA Name <span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"ataChapterName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterAtamains($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"2\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-ataChapterName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{ataChapterName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Entry Already Exists</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"ataChapterCategory\\\" class=\\\"control-label\\\">ATA Chapter Category<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"ataChapterCategory\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"sourceAction.ataChapterCategory\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"ataChapterCategory.dirty && ataChapterCategory.errors?.required && ataChapterCategory.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\tATA Chapter category required.\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"ataChapterCategory.dirty && ataChapterCategory.errors?.minlength && ataChapterCategory.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\tATA Chapter category must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"ataChapterCategory\\\" class=\\\"control-label\\\">ATA Chapter Code<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  [(ngModel)]=\\\"sourceAction.ataChapterCode\\\" >\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t<input placeholder=\\\"Memo\\\" name=\\\"description\\\" #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\tMemo is required.\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of ATAMain</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>AID</th>\\r\\n                        <th>ATA Main Description</th>\\r\\n                        <th>Previous Value</th>\\r\\n                        <th>New Value</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">ATA Main Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>ATAChapter Name: </b></span><span class=\\\"value\\\">{{ ataChapter_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>ATAChapter Category: </b></span><span class=\\\"value\\\">{{ ataChapterCategory}}</span></p>               \\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/ata-main/ata-main.component.html\n// module id = 1707\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./ata-main.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/ata-main/ata-main.component.scss\n// module id = 1708\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/ata-main/ata-main.component.scss\n// module id = 1709\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Credit Terms</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Credit Terms</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allcreditTermInfo\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [metaKeySelection]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Action\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<app-company></app-company>-->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!--<button class=\\\"btn-fa fa-eye\\\" mat-icon-button (click)=\\\"openView(contentEdit,rowData)\\\" matTooltip=\\\"View\\\">\\r\\n\\t\\t\\t\\t\\t<mat-icon>View</mat-icon>\\r\\n\\t\\t\\t\\t</button>-->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"Edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"Delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"History\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit CreditTerm</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add CreditTerm</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\" class=\\\"control-label\\\">Credit Term<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"creditTermName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filtercreditTerms($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-creditTermName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{creditTermName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n        <label for=\\\"netDays\\\" class=\\\"control-label\\\">Percentage<span class=\\\"clr-red\\\">*</span></label>\\r\\n        <div>\\r\\n            <input type=\\\"number\\\" name=\\\"percentage\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" required #percentage=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.percentage\\\">\\r\\n        </div>\\r\\n        <div class=\\\"clear\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"netDays\\\" class=\\\"control-label\\\">Days<span class=\\\"clr-red\\\">*</span></label>\\r\\n        <div>\\r\\n            <input type=\\\"number\\\" name=\\\"days\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" required #days=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.days\\\">\\r\\n        </div>\\r\\n        <div class=\\\"clear\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"netDays\\\" class=\\\"control-label\\\">Net Days<span class=\\\"clr-red\\\">*</span></label>\\r\\n        <div>\\r\\n            <input type=\\\"number\\\" name=\\\"netDays\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" required #netDays=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.netDays\\\">\\r\\n        </div>\\r\\n        <div class=\\\"clear\\\"></div>\\r\\n    </div>-->\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"percentage\\\" class=\\\"control-label\\\">Percentage</label>\\r\\n\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t<!--<input #percentage=\\\"ngModel\\\" id=\\\"percentage\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.percentage\\\">-->\\r\\n\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" id=\\\"\\\" name=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.percentage\\\">\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\">0%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"11\\\">11%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"12\\\">12%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"13\\\">13%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"14\\\">14%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"15\\\">15%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"16\\\">16%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"17\\\">17%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"18\\\">18%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"19\\\">19%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"20\\\">20%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"21\\\">21%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"22\\\">22%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"23\\\">23%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"24\\\">24%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"25\\\">25%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"26\\\">26%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"27\\\">27%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"28\\\">28%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"29\\\">29%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"30\\\">30%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"31\\\">31%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"32\\\">32%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"33\\\">33%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"34\\\">34%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"35\\\">35%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"36\\\">36%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"37\\\">37%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"38\\\">38%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"39\\\">39%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"40\\\">40%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"41\\\">41%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"42\\\">42%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"43\\\">43%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"44\\\">44%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"45\\\">45%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"46\\\">46%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"47\\\">47%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"48\\\">47%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"49\\\">49%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"50\\\">50%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"51\\\">51%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"52\\\">52%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"53\\\">53%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"54\\\">54%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"55\\\">55%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"56\\\">56%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"57\\\">57%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"58\\\">58%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"59\\\">59%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"60\\\">60%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"61\\\">61%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"62\\\">62%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"63\\\">63%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"64\\\">64%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"65\\\">65%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"66\\\">66%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"67\\\">67%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"68\\\">68%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"69\\\">69%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"70\\\">70%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"71\\\">71%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"72\\\">72%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"73\\\">73%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"74\\\">74%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"75\\\">75%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"76\\\">76%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"77\\\">77%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"78\\\">78%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"79\\\">79%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"80\\\">80%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"81\\\">81%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"82\\\">82%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"83\\\">83%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"84\\\">84%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"85\\\">85%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"86\\\">86%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"87\\\">87%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"88\\\">88%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"89\\\">89%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"90\\\">90%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"91\\\">91%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"92\\\">92%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"93\\\">93%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"94\\\">94%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"95\\\">95%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"96\\\">96%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"97\\\">97%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"98\\\">98%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"99\\\">99%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option value=\\\"100\\\">100%</option>\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t</div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"days\\\" class=\\\"control-label\\\">Days</label>\\r\\n                <div class=\\\"control-data\\\">\\r\\n                    <input #days=\\\"ngModel\\\" id=\\\"days\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.days\\\">\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"netDays\\\" class=\\\"control-label\\\">NetDays</label>\\r\\n                <div class=\\\"control-data\\\">\\r\\n                    <input  #netDays=\\\"ngModel\\\" id=\\\"netDays\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.netDays\\\">\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n                <div class=\\\"control-data\\\">\\r\\n                    <input  #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Credit Terms</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>CTID</th>\\r\\n                    <th>Description</th>\\r\\n                    <th>Previous Value</th>\\r\\n                    <th>New Value</th>\\r\\n                    <th>Last Updated By</th>\\r\\n                    <th>Last Updated Time</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                <td>{{audit.auditHistoryId}}</td>\\r\\n                <td>{{audit.columnName}}</td>\\r\\n                <td>{{audit.previousValue}}</td>\\r\\n                <td>{{audit.newValue}}</td>\\r\\n                <td>{{audit.updatedBy}}</td>\\r\\n                <td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">CreditTerms Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b> CreditTerm Name: </b></span><span class=\\\"value\\\">{{creditTerm_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b> Percentage: </b></span><span class=\\\"value\\\">{{percentage}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b> Days: </b></span><span class=\\\"value\\\">{{days}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b> NetDays: </b></span><span class=\\\"value\\\">{{netDays}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/credit-terms/credit-terms.component.html\n// module id = 1710\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./credit-terms.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/credit-terms/credit-terms.component.scss\n// module id = 1711\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/credit-terms/credit-terms.component.scss\n// module id = 1712\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Currency</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n\\r\\n\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Currency</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n                <p-table #dt [value]=\\\"allCurrencyInfo\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Currency\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Currency</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Currency</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\" class=\\\"control-label\\\">Currency Code<span class=\\\"clr-red\\\">*</span></label>\\r\\n                <div class=\\\"control-data\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control\\\" required #code=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.code\\\">\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>-->\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"control-label\\\">Currency Code<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"currencyName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterCurrency($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-currencyName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{currencyName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">Currency Symbol<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"symbol\\\" class=\\\"form-control\\\" required #symbol=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.symbol\\\" minlength=\\\"1\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"symbol.dirty && symbol.errors?.required && symbol.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tCurrency Symbol is required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"symbol.dirty && symbol.errors?.minlength && symbol.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tCurrency Symbol must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">Currency Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"displayName\\\" class=\\\"form-control\\\" required #displayName=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.displayName\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"displayName.dirty && displayName.errors?.required && displayName.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tCurrency Name required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"displayName.dirty && displayName.errors?.minlength && displayName.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tCurrency Name must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">Country<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo is required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Currency</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>CID</th>\\r\\n                        <th>Currency Name</th>\\r\\n                        <th>Previous Value</th>\\r\\n                        <th>New Value</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Currency Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Currency Code: </b></span><span class=\\\"value\\\">{{ currency_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Currency Symbol: </b></span><span class=\\\"value\\\">{{ symbol}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Currency Name: </b></span><span class=\\\"value\\\">{{ displayName}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/currency/currency.component.html\n// module id = 1713\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./currency.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/currency/currency.component.scss\n// module id = 1714\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/currency/currency.component.scss\n// module id = 1715\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Customer Classification</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Customer Classification</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n                <p-table #dt [value]=\\\"allcustomerclassificationInfo\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Customer Classification\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <!--<div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>-->\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Customer Classification</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Customer Classification</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\" class=\\\"control-label\\\">Customer Classification Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n                <div class=\\\"control-data\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" required minlength=\\\"5\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\">\\r\\n                    <div *ngIf=\\\"description.dirty && description.errors?.required && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Name required.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"description.dirty && description.errors?.minlength && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Name must be at least 5 characters long.\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>-->\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"control-label\\\">Customer Classification Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"classificationName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterclassifications($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-classificationName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{classificationName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Entry Already Exists</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo is required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Customer Classification</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>CCID</th>\\r\\n                        <th>Classification Name</th>\\r\\n                        <th>Previous Value</th>\\r\\n                        <th>New Value</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Customer Classification Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>CustomerClassification Name: </b></span><span class=\\\"value\\\">{{customerClassification_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/customer-classification/customer-classification.component.html\n// module id = 1716\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./customer-classification.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/customer-classification/customer-classification.component.scss\n// module id = 1717\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/customer-classification/customer-classification.component.scss\n// module id = 1718\n// module chunks = 0","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class DocumentModel {\r\n    documentName: any;\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n    constructor(masterCompany?: MasterCompany, isActive?:boolean, documentCode?:string, documentId?: number, description?: string,\r\n        Customer?: boolean, ItemMaster?: boolean, PurchaseOrder?: boolean, RepairOrder?: boolean, SL?: boolean, \r\n        SalesOrder?: boolean, WorkOrder?: boolean, Vendor?: boolean, \r\n\t\tmasterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string\r\n\t\t, memo?: string) {\r\n\r\n        this.documentId = documentId;\r\n        this.documentCode = documentCode;\r\n        this.isActive = isActive;\r\n        this.description = description;\r\n        this.Customer = Customer;\r\n        this.itemmaster = ItemMaster;\r\n        this.purchaseOrder = PurchaseOrder;\r\n        this.RepairOrder = RepairOrder;\r\n        this.SL = SL;\r\n        this.SalesOrder = SalesOrder;\r\n        this.WorkOrder = WorkOrder;\r\n        this.Vendor = Vendor;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.memo = memo;\r\n\r\n    }\r\n\r\n    public documentId: number;\r\n    public description: string;\r\n    public documentCode: string;\r\n    public Customer: boolean;\r\n    public itemmaster: boolean;\r\n    public purchaseOrder: boolean;\r\n    public RepairOrder: boolean;\r\n    public SL: boolean;\r\n    public SalesOrder: boolean;\r\n    public WorkOrder: boolean;\r\n    public isActive: boolean;\r\n    public Vendor: boolean;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic memo: string;\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/document.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\" style=\\\"\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\" matTooltip=\\\"Add Document\\\">Documents</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <div class=\\\"pheading\\\">\\r\\n                    <h4 class=\\\"page-heading clr-green\\\">Documents</h4>\\r\\n                </div>\\r\\n           \\r\\n                <div class=\\\"clear\\\"></div>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n                <p-table #dt [value]=\\\"alldocuments\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Document\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <!--<div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>-->\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <!--<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n\\r\\n                                <p-checkbox [(ngModel)]=\\\"rowData['customer']\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>-->\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                            <td>{{rowData.documentCode}}</td>\\r\\n                            <td>{{rowData.description}}</td>\\r\\n                            <!--<td>{{rowData.memo}}</td>-->\\r\\n                            <td><p-checkbox [(ngModel)]=\\\"rowData['customer']\\\" binary=\\\"true\\\" [disabled]=\\\"true\\\"></p-checkbox></td>\\r\\n                            <td><p-checkbox [(ngModel)]=\\\"rowData['itemMaster']\\\" binary=\\\"true\\\" [disabled]=\\\"true\\\"></p-checkbox></td>\\r\\n                            <td><p-checkbox [(ngModel)]=\\\"rowData['purchaseOrder']\\\" binary=\\\"true\\\" [disabled]=\\\"true\\\"></p-checkbox></td>\\r\\n                            <td><p-checkbox [(ngModel)]=\\\"rowData['repairOrder']\\\" binary=\\\"true\\\" [disabled]=\\\"true\\\"></p-checkbox></td>\\r\\n                            <td><p-checkbox [(ngModel)]=\\\"rowData['sl']\\\" binary=\\\"true\\\" [disabled]=\\\"true\\\"></p-checkbox></td>\\r\\n                            <td><p-checkbox [(ngModel)]=\\\"rowData['salesOrder']\\\" binary=\\\"true\\\" [disabled]=\\\"true\\\"></p-checkbox></td>\\r\\n                            <td><p-checkbox [(ngModel)]=\\\"rowData['workOrder']\\\" binary=\\\"true\\\" [disabled]=\\\"true\\\"></p-checkbox></td>\\r\\n                            <td><p-checkbox [(ngModel)]=\\\"rowData['vendor']\\\" binary=\\\"true\\\" [disabled]=\\\"true\\\"></p-checkbox></td>\\r\\n                            <td>{{rowData.createdBy}}</td>\\r\\n                            <td>{{rowData.updatedBy}}</td>\\r\\n                            <!--<td>{{rowData.createdDate| date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n                            <td>{{rowData.updatedDate| date: 'MM/dd/yyyy h:mm:ss a'}}</td>-->\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Document</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Document</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">Document code</label>\\r\\n\\t\\t\\t\\t<!--<div>\\r\\n\\t\\t<input type=\\\"text\\\" name=\\\"documentCode\\\" class=\\\"form-control\\\" required #documentCode=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.documentCode\\\">\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<p-autoComplete [(ngModel)]=\\\"documentName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (onSelect)=\\\"documentId($event)\\\" (onKeyUp)=\\\"eventHandler($event)\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterDocuments($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-documentName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{documentName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Document Name</label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" required #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.required && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tDescription is required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.minlength && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tDescription is must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group label-mright25\\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"customer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"customer\\\" #customer=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"customer\\\" [(ngModel)]=\\\"sourceAction.customer\\\"> Customer\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"itemMaster\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"itemMaster\\\" #itemMaster=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"itemMaster\\\" [(ngModel)]=\\\"sourceAction.itemMaster\\\"> Item Master\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"purchaseOrder\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"purchaseOrder\\\" #purchaseOrder=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"purchaseOrder\\\" [(ngModel)]=\\\"sourceAction.purchaseOrder\\\"> Purchase Order\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"sl\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"sl\\\" #sl=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"sl\\\" [(ngModel)]=\\\"sourceAction.sl\\\"> SL\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"salesOrder\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"salesOrder\\\" #salesOrder=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"salesOrder\\\" [(ngModel)]=\\\"sourceAction.salesOrder\\\"> Sales Order\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"workOrder\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"workorder\\\" #workOrder=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"workOrder\\\" [(ngModel)]=\\\"sourceAction.workOrder\\\"> Work Order\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"repairOrder\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"repairOrder\\\" #repairOrder=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"repairOrder\\\" [(ngModel)]=\\\"sourceAction.repairOrder\\\"> Repair Order\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"vendor\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"vendor\\\" #vendor=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"vendor\\\" [(ngModel)]=\\\"sourceAction.vendor\\\"> Vendor\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<hr />\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"memo\\\" class=\\\"control-label\\\">Documents</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Documents</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>DMID</th>\\r\\n                        <th>Description</th>\\r\\n                        <th>Previous Value</th>\\r\\n                        <th>New Value</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Documents Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Document Name: </b></span><span class=\\\"value\\\">{{ document_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Description: </b></span><span class=\\\"value\\\">{{ description}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Cust: </b></span><span class=\\\"value\\\">{{customer}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Item Master: </b></span><span class=\\\"value\\\">{{itemMaster}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>PO: </b></span><span class=\\\"value\\\">{{purchaseOrder}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>RO: </b></span><span class=\\\"value\\\">{{repairOrder}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>SL: </b></span><span class=\\\"value\\\">{{sl}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>SO: </b></span><span class=\\\"value\\\">{{salesOrder}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>WO: </b></span><span class=\\\"value\\\">{{workOrder}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Vendor: </b></span><span class=\\\"value\\\">{{vendor}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/documents/documents.component.html\n// module id = 1720\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./documents.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/documents/documents.component.scss\n// module id = 1721\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/documents/documents.component.scss\n// module id = 1722\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">EmployeeExpertise</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Employee Expertise</h4>\\r\\n\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n                <p-table #dt [value]=\\\" allEmployeeExpertiseInfo\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Employee Expertise\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <!--<div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>-->\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete 'Receive' Action ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Employee Expertise</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Employee Expertise</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"control-label\\\">Employee Expertise<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<!--<div class=\\\"control-data\\\">\\r\\n\\r\\n\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" required minlength=\\\"5\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\">\\r\\n\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.required && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tName required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.minlength && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tName must be at least 5 characters long.\\r\\n\\t\\t</div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"employeeName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterEmployeeNames($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-employeeName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{employeeName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n                <div class=\\\"control-data\\\">\\r\\n                    <input  #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n                    <!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Memo required.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Memo must be at least 2 characters long.\\r\\n                    </div>-->\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n                <label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n                <div class=\\\"\\\">\\r\\n                    <select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n                        <option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                    Master company required.\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>-->\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Employee Experties</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>EEID</th>\\r\\n                        <th>Employee Experties</th>\\r\\n                        <th>Previous Value</th>\\r\\n                        <th>New Value</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Employee Expertise Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Employee Expertise Name: </b></span><span class=\\\"value\\\">{{ employeeExpertise_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/employee-expertise/employee-expertise.component.html\n// module id = 1723\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./employee-expertise.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/employee-expertise/employee-expertise.component.scss\n// module id = 1724\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/employee-expertise/employee-expertise.component.scss\n// module id = 1725\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class ExpenditureCategory {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, expenditureCategoryId?: number, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n        this.expenditureCategoryId = expenditureCategoryId;\r\n        this.description = description;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public expenditureCategoryId: number;\r\n    public description: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/expenditurecategory.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\" style=\\\"min-height: 629px;\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Expenditure Category</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Expenditure Category</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\r\\n                <p-table #dt [value]=\\\"allExpenditureCategoryInfo\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Expenditure\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <!--<div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>-->\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Expenditure Category</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Expenditure Category</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\" class=\\\"control-label\\\">Expenditure<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<!--<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\">-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"expenditureName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterExpenditures($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-expenditureName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{expenditureName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" style=\\\"color:red\\\">Already Exists</div>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n                <div class=\\\"control-data\\\">\\r\\n                    <input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\" >\\r\\n                    <!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Memo is required.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Memo must be at least 2 characters long.\\r\\n                    </div>-->\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n                <label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n                <div class=\\\"\\\">\\r\\n                    <select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n                        <option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                    Master company required.\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>-->\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Expenditure</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>EID</th>\\r\\n                        <th>Description</th>\\r\\n                        <th>Previous Value</th>\\r\\n                        <th>New Value</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Expenditure Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Expenditure Name: </b></span><span class=\\\"value\\\">{{ expenditure_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/expenditure/expenditure.component.html\n// module id = 1727\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./expenditure.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/expenditure/expenditure.component.scss\n// module id = 1728\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/expenditure/expenditure.component.scss\n// module id = 1729\n// module chunks = 0","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Finding {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, findingId?: number, findingCode?: string, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n        this.findingId = findingId;\r\n        this.description = description;\r\n        this.memo = memo;\r\n        this.findingCode = findingCode;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public findingId: number;\r\n    public memo: string;\r\n    public findingCode: string;\r\n    public description: string; \r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/finding.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Finding</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Finding</h4>\\r\\n\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n                <p-table #dt [value]=\\\"allFindingsInfo\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Findings\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Finding</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Finding</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\" class=\\\"control-label\\\">Finding Code<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t<!--<input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control\\\" required minlength=\\\"5\\\" #findingCode=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.findingCode\\\">-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"findingName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterFindings($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-findingName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{findingName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" style=\\\"color:red\\\">Already Exist</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"netDays\\\" class=\\\"control-label\\\">Description<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" required #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"description.dirty && description.errors?.required && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\tDescription is required.\\r\\n\\t</div>\\r\\n\\t<div *ngIf=\\\"description.dirty && description.errors?.minlength && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\tDescription must be at least 2 characters long.\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t</div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"netDays\\\" class=\\\"control-label\\\">Memo</label>\\r\\n                <div>\\r\\n                    <input type=\\\"text\\\" name=\\\"memo\\\" class=\\\"form-control\\\" required #memo=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.memo\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\r\\n                    <!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Memo is required.\\r\\n                    </div>-->\\r\\n                    <!--<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Memo is must be at least 2 characters long.\\r\\n                    </div>-->\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n                <label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n                <div class=\\\"\\\">\\r\\n                    <select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n                        <option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                    Master company required.\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>-->\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Findings</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>FID</th>\\r\\n                        <th>Finding Code</th>\\r\\n                        <th>previousValue</th>\\r\\n                        <th>newValue</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Finding Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Finding Name: </b></span><span class=\\\"value\\\">{{finding_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Description: </b></span><span class=\\\"value\\\">{{ description}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/findings/findings.component.html\n// module id = 1731\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./findings.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/findings/findings.component.scss\n// module id = 1732\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/findings/findings.component.scss\n// module id = 1733\n// module chunks = 0","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class GateCode {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, gateCodeId?: number, gateCode?: string, sequence?: string, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n        this.gateCodeId = gateCodeId;\r\n        this.gateCode = gateCode;\r\n        this.description = description;\r\n        this.sequence = sequence;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public gateCodeId: number;\r\n    public gateCode: string;\r\n    public description: string;\r\n    public sequence: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/gatecode.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\" style=\\\"min-height: 629px;\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Gate Code</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Stage Code</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n                <p-table #dt [value]=\\\"allGatecodeInfo\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Status Code\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit GateCode</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add GateCode</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"control-label\\\">Status Code<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<!--<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control\\\" required minlength=\\\"5\\\" #gateCode=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.gateCode\\\">\\r\\n\\t\\t\\t<div *ngIf=\\\"gateCode.dirty && gateCode.errors?.required && gateCode.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tName required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"gateCode.dirty && gateCode.errors?.minlength && gateCode.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tName must be at least 5 characters long.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"gateCodeName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterGatecodes($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-gateCodeName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{gateCodeName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" style=\\\"color:red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">Sequence<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"sequence\\\" class=\\\"form-control\\\" required #sequence=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.sequence\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sequence.dirty && sequence.errors?.required && sequence.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tSequence is required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sequence.dirty && sequence.errors?.minlength && sequence.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tASequence is must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">Status Code Description<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" required #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.required && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tStatus Code is required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.minlength && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tStatus Code must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\" />\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo is required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of  Gate-Code</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>GID</th>\\r\\n                        <th>Description</th>\\r\\n                        <th>previousValue</th>\\r\\n                        <th>newValue</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">ATA Main Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Gate-Code Name: </b></span><span class=\\\"value\\\">{{ gateCode_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Sequence: </b></span><span class=\\\"value\\\">{{ sequence}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>StatusCode Description: </b></span><span class=\\\"value\\\">{{ description}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/gate-code/gate-code.component.html\n// module id = 1735\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./gate-code.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/gate-code/gate-code.component.scss\n// module id = 1736\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/gate-code/gate-code.component.scss\n// module id = 1737\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\" style=\\\"min-height: 629px;\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Integration</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Integration</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n                <p-table #dt [value]=\\\"allIntegrationInfo\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Integration\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Integration</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Integration</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"url\\\" class=\\\"control-label\\\">WebSite url</label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<!--<input type=\\\"text\\\" name=\\\"Portalurl\\\" class=\\\"form-control\\\" required #Portalurl=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.Portalurl\\\">-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"portalURL\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterintegrations($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-integrationName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{integrationName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" style=\\\"color:red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"netDays\\\" class=\\\"control-label\\\">Integration</label>\\r\\n                <div>\\r\\n                    <input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" required #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\" minlength=\\\"2\\\">\\r\\n                    <div *ngIf=\\\"description.dirty && description.errors?.required && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Integration required.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"description.dirty && description.errors?.minlength && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Integration must be at least 2 characters long.\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n                <div class=\\\"control-data\\\">\\r\\n                    <input  #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\" >\\r\\n                    <!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Memo required.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Memo must be at least 2 characters long.\\r\\n                    </div>-->\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n                <label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n                <div class=\\\"\\\">\\r\\n                    <select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n                        <option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                    Master company required.\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>-->\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Integration</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>IN ID</th>\\r\\n                        <th>Description</th>\\r\\n                        <th>previousValue</th>\\r\\n                        <th>newValue</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Integration Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Integration Name: </b></span><span class=\\\"value\\\">{{ integration_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Website Url: </b></span><span class=\\\"value\\\">{{ portalURL}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/integration/integration.component.html\n// module id = 1738\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./integration.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/integration/integration.component.scss\n// module id = 1739\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/integration/integration.component.scss\n// module id = 1740\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\" style=\\\"min-height: 629px;\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Item Classification</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Item Classification</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\r\\n                <p-table #dt [value]=\\\"allitemclassificationInfo\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Item Classification\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <!--<div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>-->\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Item classification</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Item classification</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"control-label\\\">Item Classification Code<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<!--<input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control\\\" required minlength=\\\"5\\\" #itemClassificationCode=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.itemClassificationCode\\\">\\r\\n\\t<div *ngIf=\\\"itemClassificationCode.dirty && itemClassificationCode.errors?.required && itemClassificationCode.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\tName required.\\r\\n\\t</div>\\r\\n\\t<div *ngIf=\\\"itemClassificationCode.dirty && itemClassificationCode.errors?.minlength && itemClassificationCode.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\tName must be at least 5 characters long.\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"itemName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterItems($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-itemName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{itemName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" style=\\\"color:red\\\">Entry Already Exists</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"control-label\\\">Item Classification Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<!--<input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control\\\" required minlength=\\\"5\\\" #itemClassificationCode=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.itemClassificationCode\\\">\\r\\n\\t<div *ngIf=\\\"itemClassificationCode.dirty && itemClassificationCode.errors?.required && itemClassificationCode.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\tName required.\\r\\n\\t</div>\\r\\n\\t<div *ngIf=\\\"itemClassificationCode.dirty && itemClassificationCode.errors?.minlength && itemClassificationCode.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\tName must be at least 5 characters long.\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"classificationId($event)\\\" (onKeyUp)=classeventHandler($event) [(ngModel)]=\\\"className\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localNameCollection\\\" (completeMethod)=\\\"filterItemNames($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-className pTemplate=\\\"description\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{className}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableClassdesc\\\" style=\\\"color:red\\\">Already Exist</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">Item Classification Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t<div>\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" required #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\" minlength=\\\"2\\\">\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">Item Type<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control\\\" required minlength=\\\"5\\\" #itemClassificationCode=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.itemClassificationCode\\\">\\r\\n\\t<div *ngIf=\\\"itemClassificationCode.dirty && itemClassificationCode.errors?.required && itemClassificationCode.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\tName required.\\r\\n\\t</div>\\r\\n\\t<div *ngIf=\\\"itemClassificationCode.dirty && itemClassificationCode.errors?.minlength && itemClassificationCode.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\tName must be at least 5 characters long.\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"classificationtypeId($event)\\\" (onKeyUp)=classeventtypeHandler($event) [(ngModel)]=\\\"itemTypeName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localtypeCollection\\\" (completeMethod)=\\\"filterItemtypes($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template let-itemTypeName pTemplate=\\\"ItemType\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{itemTypeName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"disabletypeSave\\\" style=\\\"color:red\\\">Already Exist</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--<input type=\\\"text\\\" name=\\\"itemType\\\" class=\\\"form-control\\\" required #itemType=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.itemType\\\" minlength=\\\"2\\\">-->\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo Name required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo category must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of item-classification</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>ICID</th>\\r\\n                        <th>Item Classification Code</th>\\r\\n                        <th>previousValue</th>\\r\\n                        <th>newValue</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">ItemClassification Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>ItemClassification Name: </b></span><span class=\\\"value\\\">{{ item_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Description: </b></span><span class=\\\"value\\\">{{ description}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>ItemType: </b></span><span class=\\\"value\\\">{{ itemType}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/item-classification/item-classification.component.html\n// module id = 1741\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./item-classification.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/item-classification/item-classification.component.scss\n// module id = 1742\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/item-classification/item-classification.component.scss\n// module id = 1743\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\" style=\\\"min-height: 629px;\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Item Group</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Item Group</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\r\\n                <p-table #dt [value]=\\\"allitemgroupobjInfo\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Item Group\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <!--<div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>-->\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Item Group</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Item Group</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"control-label\\\">Item Group Id<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control\\\" required minlength=\\\"5\\\" #itemGroupCode=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.itemGroupCode\\\">\\r\\n\\t\\t\\t<div *ngIf=\\\"itemGroupCode.dirty && itemGroupCode.errors?.required && itemGroupCode.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tName required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"itemGroupCode.dirty && itemGroupCode.errors?.minlength && itemGroupCode.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tName must be at least 5 characters long.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete [(ngModel)]=\\\"itemGroupName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (onSelect)=\\\"itemGroupId($event)\\\" (onKeyUp)=\\\"eventHandler($event)\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterItemgroups($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-itemGroupName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{itemGroupName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Entry Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">Item Group Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" required #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.required && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tItem Group Description required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.minlength && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tItem Group Description category must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo Name required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Item-Group</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>IGID</th>\\r\\n                        <th>Item Group Code</th>\\r\\n                        <th>Previous Value</th>\\r\\n                        <th>New Value</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Item Group Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Item Group Name: </b></span><span class=\\\"value\\\">{{ itemGroup_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Description: </b></span><span class=\\\"value\\\">{{ description}}</span></p>       \\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/item-group/item-group.component.html\n// module id = 1744\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./item-group.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/item-group/item-group.component.scss\n// module id = 1745\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/item-group/item-group.component.scss\n// module id = 1746\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\" style=\\\"min-height: 629px;\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Job Titles</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Job Titles</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\r\\n                <p-table #dt [value]=\\\"allJobTitlesinfo\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Job Title\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <!--<div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>-->\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Job Title</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Job Title</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Description<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div>\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" required #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\">\\r\\n\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete [(ngModel)]=\\\"jobName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (onSelect)=\\\"jobTitleId($event)\\\" (onKeyUp)=\\\"eventHandler($event)\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterJobs($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-jobName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{jobName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo is required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Job Title</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>JT ID</th>\\r\\n                        <th>Description</th>\\r\\n                        <th>Created By</th>\\r\\n                        <th>New Value</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Job Title  Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Job Name: </b></span><span class=\\\"value\\\">{{ job_Name}}</span></p>             \\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/job-title/job-title.component.html\n// module id = 1747\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./job-title.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/job-title/job-title.component.scss\n// module id = 1748\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/job-title/job-title.component.scss\n// module id = 1749\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\" style=\\\"min-height: 629px;\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Priority</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Priority</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\r\\n                <p-table #dt [value]=\\\"allPriorityInfo\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"ExportAll Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Priority\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Priority</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Priority</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Priority Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"control-data\\\">\\r\\n\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\">\\r\\n\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<p-autoComplete [(ngModel)]=\\\"priorityName\\\" (onSelect)=\\\"priorityId($event)\\\" (onKeyUp)=\\\"eventHandler($event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterpriorities($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-priorityName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{priorityName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tMemo is required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tMemo is must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Priority</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>PRID</th>\\r\\n                        <th>Description</th>\\r\\n                        <th>previousValue</th>\\r\\n                        <th>newValue</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Priority Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Priority Name: </b></span><span class=\\\"value\\\">{{ priority_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/priority/priority.component.html\n// module id = 1750\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./priority.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/priority/priority.component.scss\n// module id = 1751\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/priority/priority.component.scss\n// module id = 1752\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Provision</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Provison</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\r\\n\\r\\n                <p-table #dt [value]=\\\"allProvisonInfo\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Provision\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Delete Contact Modal -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Provision</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Provision</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Provision Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div class=\\\"control-data\\\">\\r\\n\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\">\\r\\n\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete [(ngModel)]=\\\"provisionName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (onSelect)=\\\"provisionId($event)\\\" (onKeyUp)=\\\"eventHandler($event)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterprovisions($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-provisionName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{provisionName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n                <div class=\\\"control-data\\\">\\r\\n                    <input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\" minlength=\\\"2\\\">\\r\\n                    <!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Memo is required.\\r\\n                    </div>-->\\r\\n                    <!--<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Memo must be at least 2 characters long.\\r\\n                    </div>-->\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n                <label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n                <div class=\\\"\\\">\\r\\n                    <select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n                        <option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                    Master company required.\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>-->\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Provision</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>PID</th>\\r\\n                        <th>Description</th>\\r\\n                        <th>previousValue</th>\\r\\n                        <th>newValue</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Provision Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Provision Name: </b></span><span class=\\\"value\\\">{{ provision_Name}}</span></p>  \\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/provision/provision.component.html\n// module id = 1753\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./provision.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/provision/provision.component.scss\n// module id = 1754\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/provision/provision.component.scss\n// module id = 1755\n// module chunks = 0","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Publication {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, isActive?: boolean, publicationRecordId?: number, publicationId?: string, PartNumber?: string, Platform?: string, description?: string, Model?: string, ATAMain?: string, ATASubChapter?: string, ATAPositionZone?: string, IsActive?: boolean, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, memo?: string) {\r\n        this.publicationRecordId = publicationRecordId;\r\n        this.publicationId = publicationId;\r\n        this.PartNumber = PartNumber;\r\n        this.description = description;\r\n        this.isActive = isActive;\r\n        this.Platform = Platform;\r\n        this.Model = Model;\r\n        this.ATAMain = ATAMain;\r\n        this.ATASubChapter = ATASubChapter;\r\n        this.ATAPositionZone = ATAPositionZone;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.IsActive = IsActive;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public publicationRecordId: number;\r\n    public publicationId: string;\r\n    public isActive: boolean;\r\n    public PartNumber: string;\r\n    public description: string;\r\n    public Platform: string;\r\n    public Model: string;\r\n    public ATAMain:string;\r\n    public ATASubChapter:string;\r\n    public ATAPositionZone:string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public IsActive: boolean;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic memo: string;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/publication.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\" style=\\\"min-height: 629px;\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Publication</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Publication</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\r\\n\\r\\n                <p-table #dt [value]=\\\"allpublicationInfo\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Publication\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Publication</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Publication</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"control-label\\\">Publication Id</label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"code\\\" class=\\\"form-control\\\" required minlength=\\\"5\\\" #publicationId=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.publicationId\\\">\\r\\n\\t\\t\\t<div *ngIf=\\\"publicationId.dirty && publicationId.errors?.required && publicationId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tName required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"publicationId.dirty && publicationId.errors?.minlength && publicationId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tName must be at least 5 characters long.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete [(ngModel)]=\\\"publicationName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (onSelect)=\\\"publicationId($event)\\\" (onKeyUp)=\\\"eventHandler($event)\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterpublications($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-publicationName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{publicationName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">Part Number</label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"partNumber\\\" class=\\\"form-control\\\" required #partNumber=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.partNumber\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tPart Number required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tPart Number must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">Description</label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" required #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.required && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tDescription required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.minlength && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tDescription must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">Model</label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control\\\" required #model=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.model\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"model.dirty && model.errors?.required && model.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tModel required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"model.dirty && model.errors?.minlength && model.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tModel must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">ATA Main</label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"ataMain\\\" class=\\\"form-control\\\" required #ataMain=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.ataMain\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"ataMain.dirty && ataMain.errors?.required && ataMain.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tATA Main required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"ataMain.dirty && ataMain.errors?.minlength && ataMain.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tATA Main must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">ATA SubChapter</label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"ataSubChapter\\\" class=\\\"form-control\\\" required #ataSubChapter=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.ataSubChapter\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"ataSubChapter.dirty && ataSubChapter.errors?.required && ataSubChapter.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tATA SubChapter Name required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"ataSubChapter.dirty && ataSubChapter.errors?.minlength && ataSubChapter.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tATA SubChapter must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">Platform</label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"platform\\\" class=\\\"form-control\\\" required #platform=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.platform\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"platform.dirty && platform.errors?.required && platform.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tPlatform required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"platform.dirty && platform.errors?.minlength && platform.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tPlatform must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"netDays\\\" class=\\\"control-label\\\">ATA PositionZone</label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"ataPositionZone\\\" class=\\\"form-control\\\" required #ataPositionZone=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.ataPositionZone\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"ataPositionZone.dirty && ataPositionZone.errors?.required && ataPositionZone.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tATA PositionZone Name required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"ataPositionZone.dirty && ataPositionZone.errors?.minlength && ataPositionZone.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tATA PositionZone must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tMemo required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Publication</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>PID</th>\\r\\n                        <th>Description</th>\\r\\n                        <th>previousValue</th>\\r\\n                        <th>newValue</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Publication Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Publication Name: </b></span><span class=\\\"value\\\">{{ publication_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Description : </b></span><span class=\\\"value\\\">{{ description}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Part Number: </b></span><span class=\\\"value\\\">{{ partNumber}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Model: </b></span><span class=\\\"value\\\">{{  model}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Ata Main: </b></span><span class=\\\"value\\\">{{ ataMain}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>AtaSub Chapter: </b></span><span class=\\\"value\\\">{{ ataSubChapter}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>AtaPosition Zone: </b></span><span class=\\\"value\\\">{{ ataPositionZone}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Platform: </b></span><span class=\\\"value\\\">{{ platform}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/publication/publication.component.html\n// module id = 1757\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./publication.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/publication/publication.component.scss\n// module id = 1758\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/publication/publication.component.scss\n// module id = 1759\n// module chunks = 0","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Reason {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, reasonId?: number, reasonForRemoval?: string, reasonCode?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean\r\n\t\t, memo?: string) {\r\n\r\n        this.reasonId = reasonId;\r\n        this.reasonForRemoval = reasonForRemoval;\r\n        this.reasonCode = reasonCode;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public reasonId: number;\r\n    public reasonForRemoval: string;\r\n    public reasonCode: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/reason.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Reason</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Reason</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\r\\n                <p-table #dt [value]=\\\"allReasonsInfo\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedcolumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Reason\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Delete Contact Modal -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Reason</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Reason</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"reasonCode\\\" class=\\\"control-label\\\">Reason Code<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div class=\\\"control-data\\\">\\r\\n\\t\\t<input type=\\\"text\\\" name=\\\"reasonCode\\\" class=\\\"form-control\\\" #reasonCode=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.reasonCode\\\">\\r\\n\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete [(ngModel)]=\\\"reasonName\\\" (onSelect)=\\\"itemId($event)\\\" (onKeyUp)=\\\"eventHandler($event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterReasons($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-reasonName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{reasonName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" style=\\\"color:red\\\">Already Exists</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"reasonForRemoval\\\" class=\\\"control-label\\\">Reason For Removal<span class=\\\"clr-red\\\">*</span></label>\\r\\n                <div class=\\\"control-data\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"reasonForRemoval\\\" class=\\\"form-control\\\" #reasonForRemoval=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.reasonForRemoval\\\">\\r\\n                    <!--<div *ngIf=\\\"reasonForRemoval.dirty && reasonForRemoval.errors?.required && reasonForRemoval.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Reason For Removal required.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"reasonForRemoval.dirty && reasonForRemoval.errors?.minlength && reasonForRemoval.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Reason For Removal must be at least 2 characters long.\\r\\n                    </div>-->\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n                <div class=\\\"control-data\\\">\\r\\n                    <input  #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\" minlength=\\\"2\\\">\\r\\n                    <!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Memo required.\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                        Memo must be at least 2 characters long.\\r\\n                    </div>-->\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n                <label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n                <div class=\\\"\\\">\\r\\n                    <select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n                        <option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n                    Master company required.\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>-->\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"clear\\\"></div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                <button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Reason</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>RID</th>\\r\\n                        <th>Description</th>\\r\\n                        <th>previousValue</th>\\r\\n                        <th>newValue</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Reason Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Reason Name: </b></span><span class=\\\"value\\\">{{ reason_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>ReasonFor Removal: </b></span><span class=\\\"value\\\">{{ reasonForRemoval}}</span></p>            \\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/reason/reason.component.html\n// module id = 1761\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./reason.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/reason/reason.component.scss\n// module id = 1762\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/reason/reason.component.scss\n// module id = 1763\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">TaxRate</li>\\r\\n\\t\\t</ol>\\r\\n\\t</nav>-->\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Tax Rate</h4>\\r\\n\\t\\t\\t\\t<span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\t\\t\\t\\t<!--<button type=\\\"button\\\" (click)=\\\"showDialog()\\\" pButton icon=\\\"pi pi-info-circle\\\" label=\\\"Show\\\"></button>-->\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allTaxrateInfo\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Tax Rate\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Delete Contact Modal -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Tax Rate</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Tax Rate</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"taxtype\\\" class=\\\"control-label\\\">Tax Type<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"taxType\\\" class=\\\"form-control\\\" required minlength=\\\"5\\\" #taxType=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.taxType\\\">\\r\\n\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<!--<p-autoComplete [(ngModel)]=\\\"taxRateName\\\" (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterTaxRates($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t<ng-template let-taxRateName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{taxRateName}}</div>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</p-autoComplete>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete [(ngModel)]=\\\"taxRateName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) (completeMethod)=\\\"filterTaxTypes($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-taxRateName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{taxRateName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" style=\\\"color:red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"taxrate\\\" class=\\\"control-label\\\">Tax Rate<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<input type=\\\"text\\\" name=\\\"taxrate\\\" class=\\\"form-control\\\" required #taxRate=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.taxRate\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t<div *ngIf=\\\"taxRate.dirty && taxRate.errors?.required && taxRate.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tTax Rate required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"taxRate.dirty && taxRate.errors?.minlength && taxRate.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tTax Rate must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" id=\\\"\\\" name=\\\"\\\" [(ngModel)]=\\\"sourceAction.taxRate\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\">0%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"11\\\">11%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"12\\\">12%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"13\\\">13%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"14\\\">14%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"15\\\">15%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"16\\\">16%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"17\\\">17%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"18\\\">18%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"19\\\">19%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"20\\\">20%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"21\\\">21%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"22\\\">22%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"23\\\">23%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"24\\\">24%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"25\\\">25%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"26\\\">26%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"27\\\">27%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"28\\\">28%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"29\\\">29%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"30\\\">30%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"31\\\">31%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"32\\\">32%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"33\\\">33%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"34\\\">34%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"35\\\">35%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"36\\\">36%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"37\\\">37%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"38\\\">38%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"39\\\">39%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"40\\\">40%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"41\\\">41%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"42\\\">42%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"43\\\">43%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"44\\\">44%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"45\\\">45%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"46\\\">46%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"47\\\">47%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"48\\\">47%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"49\\\">49%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"50\\\">50%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"51\\\">51%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"52\\\">52%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"53\\\">53%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"54\\\">54%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"55\\\">55%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"56\\\">56%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"57\\\">57%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"58\\\">58%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"59\\\">59%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"60\\\">60%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"61\\\">61%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"62\\\">62%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"63\\\">63%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"64\\\">64%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"65\\\">65%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"66\\\">66%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"67\\\">67%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"68\\\">68%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"69\\\">69%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"70\\\">70%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"71\\\">71%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"72\\\">72%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"73\\\">73%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"74\\\">74%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"75\\\">75%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"76\\\">76%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"77\\\">77%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"78\\\">78%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"79\\\">79%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"80\\\">80%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"81\\\">81%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"82\\\">82%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"83\\\">83%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"84\\\">84%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"85\\\">85%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"86\\\">86%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"87\\\">87%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"88\\\">88%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"89\\\">89%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"90\\\">90%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"91\\\">91%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"92\\\">92%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"93\\\">93%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"94\\\">94%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"95\\\">95%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"96\\\">96%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"97\\\">97%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"98\\\">98%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"99\\\">99%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"100\\\">100%</option>\\r\\n\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\t\\r\\n\\t\\t\\r\\n\\t\\t<p-dialog header=\\\"Title\\\" [(visible)]=\\\"display\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t\\t\\t<h4 class=\\\"modal-title\\\">History of Taxrate</h4>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>TID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>TaxType</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>previousValue</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>newValue</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{audit.updatedDate}}</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t</div>-->\\r\\n\\r\\n\\t\\t</p-dialog>\\r\\n\\t\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Taxrate</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>TID</th>\\r\\n                        <th>TaxType</th>\\r\\n                        <th>previousValue</th>\\r\\n                        <th>newValue</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">TaxRate Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>TaxRate Name: </b></span><span class=\\\"value\\\">{{taxRate_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>TaxRate: </b></span><span class=\\\"value\\\">{{ taxRate}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/tax-rate/tax-rate.component.html\n// module id = 1764\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./tax-rate.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/tax-rate/tax-rate.component.scss\n// module id = 1765\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/tax-rate/tax-rate.component.scss\n// module id = 1766\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">UnitOf Measure</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n\\r\\n                <h4 class=\\\"page-heading clr-green\\\">UnitOf Measure</h4>\\r\\n\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n                <p-table #dt [value]=\\\"allUnitOfMeasureinfo\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Unit of Measure\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Delete Contact Modal -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Unit Of Mearsure</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Unit Of Mearsure</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Unit Of Measure<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<p-autoComplete [(ngModel)]=\\\"unitName\\\" (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterUnitOfMeasures($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-unitName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{unitName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"shortName\\\" class=\\\"control-label\\\">Short Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"shortName\\\" class=\\\"form-control\\\" #shortName=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.shortName\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"shortName.dirty && shortName.errors?.required && shortName.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tShort Name required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"shortName.dirty && shortName.errors?.minlength && shortName.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tShort Name must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"standard\\\" class=\\\"control-label\\\">Standard<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"standard\\\" class=\\\"form-control\\\" #standard=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.standard\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"standard.dirty && standard.errors?.required && standard.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tStandard required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"standard.dirty && standard.errors?.minlength && standard.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tStandard must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Unit of Measurre</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>UMID</th>\\r\\n                        <th>Description</th>\\r\\n                        <th>previousValue</th>\\r\\n                        <th>newValue</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<!--<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">UnitOfMeasure Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>UnitOfMeasure Name: </b></span><span class=\\\"value\\\">{{ unitofmeasure_Name}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>ShortName: </b></span><span class=\\\"value\\\">{{ shortName}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Standard: </b></span><span class=\\\"value\\\">{{ standard}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n</ng-template>-->\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">UnitOfMeasure Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>UnitOfMeasure Name: </b></span><span class=\\\"value\\\">{{ unitofmeasure_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>ShortName: </b></span><span class=\\\"value\\\">{{ shortName}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Standard: </b></span><span class=\\\"value\\\">{{ standard}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <!--<p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>-->\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/unit-of-measure/unit-of-measure.component.html\n// module id = 1767\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./unit-of-measure.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/unit-of-measure/unit-of-measure.component.scss\n// module id = 1768\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/unit-of-measure/unit-of-measure.component.scss\n// module id = 1769\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class WorkPerformed {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, workPerformedId?: number, isActive?: boolean, description?: string, workPerformedCode?: string, memo?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string) {\r\n\r\n        this.workPerformedId = workPerformedId;\r\n        this.description = description; \r\n        this.memo = memo; \r\n        this.masterCompanyId = masterCompanyId;\r\n        this.workPerformedCode = workPerformedCode;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n\t\tthis.isActive = isActive;\r\n    }\r\n\r\n    public workPerformedId: number;\r\n    public description: string;\r\n    public memo: string;\r\n    public isActive?: boolean;\r\n    public masterCompany: MasterCompany;\r\n    public workPerformedCode: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/workperformed.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">WorkPerformed</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Work Performed</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n                <p-table #dt [value]=\\\"allWorkPerformedInfo\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"ExportAll Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Work Performed\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Delete Contact Modal -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Work Performed</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Work Performed</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Work Performed Id<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\">\\r\\n\\r\\n\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"workPerformed\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterWorkPerformed($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-workPerformed pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{workPerformed}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Work Performed Description<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.required && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tWork Performed Description required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.minlength && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tDescription must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"memo\\\" class=\\\"control-label\\\">Memo<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"memo\\\" class=\\\"form-control\\\" #memo=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.memo\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tMemo required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Work Performed</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>WPID</th>\\r\\n                        <th>Work Performed Code</th>\\r\\n                        <th>previousValue</th>\\r\\n                        <th>newValue</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">WorkPerFormed Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>WorkperFormed Name: </b></span><span class=\\\"value\\\">{{ workperformed_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Description: </b></span><span class=\\\"value\\\">{{ description}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-performed/work-performed.component.html\n// module id = 1771\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./work-performed.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-performed/work-performed.component.scss\n// module id = 1772\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/work-performed/work-performed.component.scss\n// module id = 1773\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class WorkScope {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, workScopeId?: number, description?: string, workScopeCode?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean\r\n\t\t, memo?: string) {\r\n\r\n        this.workScopeId = workScopeId;\r\n        this.description = description;\r\n        this.workScopeCode = workScopeCode;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public workScopeId: number;\r\n    public description: string;\r\n    public workScopeCode: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/workscope.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">WorkScope</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n\\r\\n                <h4 class=\\\"page-heading clr-green\\\">WorkScope</h4>\\r\\n\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n                <p-table #dt [value]=\\\"allWorkScopeinfo\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Work Scope\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Delete Contact Modal -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Work Scope</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Work Scope</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"workScopeCode\\\" class=\\\"control-label\\\">Work Scope Code<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"workScopeCode\\\" class=\\\"form-control\\\" #workScopeCode=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.workScopeCode\\\">\\r\\n\\r\\n\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete [(ngModel)]=\\\"workScopeName\\\" (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterWorkscopes($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-workScopeName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{workScopeName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Work Scope Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.required && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tWork Scope Description required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.minlength && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tWork Scope Description must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of 'Receive' WorkScope</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>WSID</th>\\r\\n                        <th>Work Scope</th>\\r\\n                        <th>previousValue</th>\\r\\n                        <th>newValue</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">WorkScope Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>WorkScope Name: </b></span><span class=\\\"value\\\">{{ workScope_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Description: </b></span><span class=\\\"value\\\">{{ description}}</span></p>\\r\\n              \\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-scope/work-scope.component.html\n// module id = 1775\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./work-scope.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-scope/work-scope.component.scss\n// module id = 1776\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/work-scope/work-scope.component.scss\n// module id = 1777\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Action Attribute Mapping</li>\\r\\n\\t\\t\\t\\t\\t</ol>\\r\\n\\t\\t\\t\\t</nav>-->\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Action Attribute Mapping</h4>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/action-attribute-mapping/action-attribute-mapping.component.html\n// module id = 1778\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./action-attribute-mapping.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/action-attribute-mapping/action-attribute-mapping.component.scss\n// module id = 1779\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/action-attribute-mapping/action-attribute-mapping.component.scss\n// module id = 1780\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class ATASubChapter {\r\n    ataChapterCode: any;\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(ataChapterId?: number, masterCompany?: MasterCompany, ataSubChapterId?: number, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n\t\tthis.ataSubChapterId = ataSubChapterId;\r\n\t\tthis.description = description;\r\n\t\tthis.ataChapterId = ataChapterId,\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n\r\n\t}\r\n\r\n\tpublic ataSubChapterId: number;\r\n\tpublic ataChapterId: number;\r\n\tpublic description: string;\r\n\tpublic ataSubChapter1Id: number;\r\n\tpublic masterCompanyId: number;\r\n\tpublic createdBy: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/atasubchapter.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">ATA</li>\\r\\n\\t\\t\\t\\t\\t</ol>\\r\\n\\t\\t\\t\\t</nav>-->\\r\\n\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">ATA Sub Chapter</h4>\\r\\n\\r\\n\\t\\t\\t\\t<span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allATAMaininfo\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add ATA Sub Chapter1\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<!-- Delete Contact Modal -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit ATA Sub Chapter</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add ATA Sub Chapter</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\r\\n\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"ataChapterName\\\" class=\\\"control-label\\\">ATA Name <span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"ataChapterName\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" required minlength=\\\"5\\\" #ataChapterName=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.ataChapterName\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"ataChapterName\\\" class=\\\"control-label\\\">ATA Name <span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"ataChapterName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterAtamains($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t[minLength]=\\\"2\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t<ng-template let-ataChapterName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{ataChapterName}}</div>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</p-autoComplete>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"ataChapterCategory\\\" class=\\\"control-label\\\">ATA Chapter Category<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"ataChapterCategory\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" required #ataChapterCategory=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.ataChapterCategory\\\" minlength=\\\"2\\\" [minLength]=\\\"2\\\">\\r\\n\\t\\t\\t<div *ngIf=\\\"ataChapterCategory.dirty && ataChapterCategory.errors?.required && ataChapterCategory.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tATA Chapter category required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"ataChapterCategory.dirty && ataChapterCategory.errors?.minlength && ataChapterCategory.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tATA Chapter category must be at least 2 characters long.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t<!--<select class=\\\"form-control\\\" id=\\\"\\\" name=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceStockLine.conditionId\\\">\\r\\n\\t\\t<option *ngFor=\\\"let condition of allATAMainInfo\\\" [ngValue]=\\\"condition.conditionId\\\">{{condition.description}}</option>\\r\\n\\r\\n\\t</select>-->\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\r\\n\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">ATA Chapter </label>\\r\\n\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t<select [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.ataChapterId\\\">\\r\\n                        <option *ngFor=\\\"let ataName of allATAMaininfo1\\\" [ngValue]=\\\"ataName.ataChapterId\\\">{{ataName.ataChapterCode}}-{{ataName.ataChapterName}}</option>\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<a href=\\\"#\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addCustomerClass\\\" class=\\\"add-icon\\\" (click)=\\\"openatachapter(modelEdits)\\\"></a>-->\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"ataChapterCategory\\\" class=\\\"control-label\\\">Description<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"sourceAction.description\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterActionAttributes($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-description pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{description}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Entry Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<!--<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"ataChapterCategory\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" required #ataChapterCategory=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.ataSubChapter1Id\\\" minlength=\\\"2\\\" [minLength]=\\\"2\\\">\\r\\n\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"ataChapterCategory\\\" class=\\\"control-label\\\">ATA Chapter Code<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.ataSubChapterCode\\\">\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t<input placeholder=\\\"Memo\\\" name=\\\"description\\\" #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\" required minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\tMemo is required.\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t<\\r\\n\\t\\t</form>\\r\\n\\t</div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of ATASubChapter1</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th>AID</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>ATA Main Description</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>New Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">ATA Sub Chapter1</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t<!--<p><span class=\\\"label\\\"><b>ATAChapter Name: </b></span><span class=\\\"value\\\">{{ ataChapter_Name}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>ATAChapter Category: </b></span><span class=\\\"value\\\">{{ ataChapterCategory}}</span></p>-->\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t<p>Sample Point 1 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 2 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 3 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 4 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 5 about Page Description</p>\\r\\n\\t\\t\\t<hr />\\r\\n\\t\\t\\t<p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/ata-sub-chapter1/ata-sub-chapter1.component.html\n// module id = 1782\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./ata-sub-chapter1.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/ata-sub-chapter1/ata-sub-chapter1.component.scss\n// module id = 1783\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/ata-sub-chapter1/ata-sub-chapter1.component.scss\n// module id = 1784\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class ATASubChapter2 {\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, /*actionId?: number,*/ /*description?: string, */masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n\t\t//this.actionId = actionId;\r\n\t\t//this.description = description;\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n\r\n\t}\r\n\r\n\t//public actionId: number;\r\n\t//public description: string;\r\n\tpublic ataSubChapter2Id: number;\r\n\tpublic masterCompanyId: number;\r\n\tpublic createdBy: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/atasubchapter2.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">ATA</li>\\r\\n\\t\\t\\t\\t\\t</ol>\\r\\n\\t\\t\\t\\t</nav>-->\\r\\n\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">ATA Sub Chapter 2</h4>\\r\\n\\r\\n\\t\\t\\t\\t<span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allATAMaininfo\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"ExportAll Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<!-- Delete Contact Modal -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit ATA Sub Chapter2</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add ATA Sub Chapter2</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"ataChapterName\\\" class=\\\"control-label\\\">ATA Name <span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"ataChapterName\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" required minlength=\\\"5\\\" #ataChapterName=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.ataChapterName\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"ataChapterName\\\" class=\\\"control-label\\\">ATA Name <span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"ataChapterName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterAtamains($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t[minLength]=\\\"2\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t<ng-template let-ataChapterName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{ataChapterName}}</div>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</p-autoComplete>\\r\\n\\t</div>-->\\r\\n\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\r\\n\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">ATA Chapter </label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<select [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.ataMainId\\\">\\r\\n\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let ataName of allATAMaininfo1\\\" [ngValue]=\\\"ataName.ataMainId\\\">{{ataName.ataChapterName}}</option>\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<a href=\\\"#\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addCustomerClass\\\" class=\\\"add-icon\\\" (click)=\\\"openatachapter(modelEdits)\\\"></a>-->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"ataChapterCategory\\\" class=\\\"control-label\\\">ATA SubChapter2<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"ataChapterCategory\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" required #ataChapterCategory=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.ataSubChapter2Id\\\" minlength=\\\"2\\\" [minLength]=\\\"2\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t<input placeholder=\\\"Memo\\\" name=\\\"description\\\" #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\" required minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\tMemo is required.\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</form>\\r\\n\\t</div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of ATASubChapter2</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th>AID</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>ATA Main Description</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>New Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">ATA Sub Chapter2</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t<!--<p><span class=\\\"label\\\"><b>ATAChapter Name: </b></span><span class=\\\"value\\\">{{ ataChapter_Name}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>ATAChapter Category: </b></span><span class=\\\"value\\\">{{ ataChapterCategory}}</span></p>-->\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t<p>Sample Point 1 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 2 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 3 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 4 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 5 about Page Description</p>\\r\\n\\t\\t\\t<hr />\\r\\n\\t\\t\\t<p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/ata-sub-chapter2/ata-sub-chapter2.component.html\n// module id = 1786\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./ata-sub-chapter2.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/ata-sub-chapter2/ata-sub-chapter2.component.scss\n// module id = 1787\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/ata-sub-chapter2/ata-sub-chapter2.component.scss\n// module id = 1788\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Location {\r\n    siteID(siteID: any): any {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, locationId?: number,/*actionId?: number,*/ /*description?: string, */masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n\t\t//this.actionId = actionId;\r\n\t\t//this.description = description;\r\n\t\tthis.locationId = locationId;\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n\r\n\t}\r\n\r\n\tpublic locationId: number;\r\n\tpublic name: string;\r\n\tpublic masterCompanyId: number;\r\n\tpublic createdBy: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/location.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Location</h4>\\r\\n\\t\\t\\t\\t<span class=\\\"help-icon\\\"  data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allLocations\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [metaKeySelection]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\" [scrollable]=\\\"true\\\" scrollHeight=\\\"450px\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--Filter Global Search do-->\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Location\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<app-company></app-company>-->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<colgroup>\\r\\n\\t\\t\\t\\t\\t\\t\\t<col *ngFor=\\\"let col of columns\\\" style=\\\"width:130px\\\">\\r\\n\\t\\t\\t\\t\\t\\t</colgroup>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width:200px\\\"></th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width:200px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"Edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"Delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"History\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Location</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Location</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-sm-12 input-icon1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">Site Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceLocation.siteId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"siteValueChange($event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let site of allSites\\\" [ngValue]=\\\"site.siteId\\\">{{site.name}}</option><!--(onchange)=\\\"siteValueChange(site.siteName)\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-sm-12 input-icon1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">Warehouse Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceLocation.warehouseId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"wareHouseValueChange(sourceLocation.warehouseId)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--[(ngModel)]=\\\"sourceWarehouse.siteID\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let site of allWareHouses\\\" [ngValue]=\\\"site.warehouseId\\\">{{site.warehouseName}}</option><!--(onchange)=\\\"siteValueChange(site.siteName)\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"actionname\\\" class=\\\"control-label\\\">Location Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"Manufacturerdescription($event)\\\" (onKeyUp)=ManufacturerHandler($event) (completeMethod)=\\\"filtermanufacturer($event)\\\" [(ngModel)]=\\\"name\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"2\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSaveManufacturer\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showAddress\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 1</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Address Line 2\\\" minlength=\\\"2\\\" required value={{address1}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 2</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Address Line 2\\\" minlength=\\\"2\\\" required value={{address2}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 3</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Address Line 3\\\" minlength=\\\"2\\\" required value={{address3}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"City\\\" minlength=\\\"2\\\" required value={{city}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"State\\\" minlength=\\\"2\\\" required value={{stateOrProvince}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Country</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Country\\\" minlength=\\\"2\\\" required value={{country}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Zip Code</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Zip Code\\\" minlength=\\\"2\\\" required value={{postalCode}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceLocation.memo\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"showManagement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-treeTable [value]=\\\"gridData\\\" [columns]=\\\"cols1\\\" [(selection)]=\\\"selectedNodeTest\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-treeTableToggler [rowNode]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\"></p-treeTableToggler>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-treeTableCheckbox [value]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\" (click)=\\\"managementStructureClick(rowData)\\\"></p-treeTableCheckbox>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!--<ng-template pTemplate=\\\"summary\\\">\\r\\n\\t\\t\\t\\t<div style=\\\"text-align: left\\\">\\r\\n\\t\\t\\t\\t\\tSelected Nodes: <span *ngIf=\\\"!selectedNodeTest || selectedNodeTest.length === 0\\\" style=\\\"font-weight: normal\\\">none</span>\\r\\n\\t\\t\\t\\t\\t<ul *ngIf=\\\"selectedNodeTest && selectedNodeTest.length\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let node of selectedNodeTest\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span style=\\\"font-weight: normal\\\">{{'Management Id:'+node.data.managementStructureId + '  Code:' + node.data.code + '  Legal Entity ID:' + node.data.legalEntityId}}</span>\\r\\n\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</ng-template>-->\\r\\n\\t\\t\\t\\t\\t\\t\\t</p-treeTable>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSaveManufacturer\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- Delete -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<!-- History -->\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of Credit Terms</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<th>warehouseId</th>\\r\\n\\t\\t\\t\\t\\t<th>siteId</th>\\r\\n\\t\\t\\t\\t\\t<th>Description</th>\\r\\n\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t<th>New Value</th>\\r\\n\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</thead>\\r\\n\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t</table>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- View -->\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Location Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Location Name : </b></span><span class=\\\"value\\\">{{location_Name}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Warehouse Name : </b></span><span class=\\\"value\\\">{{warehouseName}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Site Name : </b></span><span class=\\\"value\\\">{{siteName}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address1: </b></span><span class=\\\"value\\\">{{address1}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address2: </b></span><span class=\\\"value\\\">{{address2}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address3: </b></span><span class=\\\"value\\\">{{address3}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> City: </b></span><span class=\\\"value\\\">{{city}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> State: </b></span><span class=\\\"value\\\">{{stateOrProvince}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Country: </b></span><span class=\\\"value\\\">{{country}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> ZipCode: </b></span><span class=\\\"value\\\">{{postalCode}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/location/location.component.html\n// module id = 1790\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./location.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/location/location.component.scss\n// module id = 1791\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/location/location.component.scss\n// module id = 1792\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Shelf {\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, shelfId?: number,/*actionId?: number,*/ /*description?: string, */masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n\t\t//this.actionId = actionId;\r\n\t\t//this.description = description;\r\n\t\tthis.shelfId = shelfId;\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n\r\n\t}\r\n\r\n\t//public actionId: number;\r\n\t//public description: string;\r\n\t//public ataSubChapter1Id: number;\r\n\tpublic shelfId: number;\r\n\tpublic name: string;\r\n\tpublic masterCompanyId: number;\r\n\tpublic createdBy: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/shelf.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Shelf</h4>\\r\\n\\t\\t\\t\\t<span class=\\\"help-icon\\\"  data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allSelfs\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [metaKeySelection]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\" [scrollable]=\\\"true\\\" scrollHeight=\\\"450px\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--Filter Global Search do-->\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Shelf\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<app-company></app-company>-->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<colgroup>\\r\\n\\t\\t\\t\\t\\t\\t\\t<col *ngFor=\\\"let col of columns\\\" style=\\\"width:130px\\\">\\r\\n\\t\\t\\t\\t\\t\\t</colgroup>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width:200px\\\"></th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width:200px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"Edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"Delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"History\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Shelf</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Shelf</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-sm-12 input-icon1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">Site Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceShelf.siteId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"siteValueChange($event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let site of allSites\\\" [ngValue]=\\\"site.siteId\\\">{{site.name}}</option><!--(onchange)=\\\"siteValueChange(site.siteName)\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-sm-12 input-icon1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">Warehouse Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceShelf.warehouseId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"wareHouseValueChange($event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--[(ngModel)]=\\\"sourceWarehouse.siteID\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let site of allWareHouses\\\" [ngValue]=\\\"site.warehouseId\\\">{{site.warehouseName}}</option><!--(onchange)=\\\"siteValueChange(site.siteName)\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-sm-12 input-icon1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">Location Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceShelf.locationId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"locationValueChange(sourceShelf.locationId)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--[(ngModel)]=\\\"sourceWarehouse.siteID\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let site of allLocations\\\" [ngValue]=\\\"site.locationId\\\">{{site.name}}</option><!--(onchange)=\\\"siteValueChange(site.siteName)\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"actionname\\\" class=\\\"control-label\\\">Shelf Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"Manufacturerdescription($event)\\\" (onKeyUp)=ManufacturerHandler($event) (completeMethod)=\\\"filtermanufacturer($event)\\\" [(ngModel)]=\\\"name\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"2\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSaveManufacturer\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showAddress\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 1</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Address Line 1\\\" id=\\\"memo\\\" minlength=\\\"2\\\" required value={{address1}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 2</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Address Line 2\\\" minlength=\\\"2\\\" required value={{address2}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 3</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Address Line 3\\\" minlength=\\\"2\\\" required value={{address3}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"City\\\" minlength=\\\"2\\\" required value={{city}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"State\\\" minlength=\\\"2\\\" required value={{stateOrProvince}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Country</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Country\\\" minlength=\\\"2\\\" required value={{country}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Zip Code</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Zip Code\\\" minlength=\\\"2\\\" required value={{postalCode}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceShelf.memo\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\" *ngIf=\\\"showManagement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-treeTable [value]=\\\"gridData\\\" [columns]=\\\"cols1\\\" [(selection)]=\\\"selectedNodeTest\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-treeTableToggler [rowNode]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\"></p-treeTableToggler>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-treeTableCheckbox [value]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\" (click)=\\\"managementStructureClick(rowData)\\\"></p-treeTableCheckbox>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--<ng-template pTemplate=\\\"summary\\\">\\r\\n\\t\\t\\t\\t<div style=\\\"text-align: left\\\">\\r\\n\\t\\t\\t\\t\\tSelected Nodes: <span *ngIf=\\\"!selectedNodeTest || selectedNodeTest.length === 0\\\" style=\\\"font-weight: normal\\\">none</span>\\r\\n\\t\\t\\t\\t\\t<ul *ngIf=\\\"selectedNodeTest && selectedNodeTest.length\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let node of selectedNodeTest\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span style=\\\"font-weight: normal\\\">{{'Management Id:'+node.data.managementStructureId + '  Code:' + node.data.code + '  Legal Entity ID:' + node.data.legalEntityId}}</span>\\r\\n\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</ng-template>-->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</p-treeTable>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSaveManufacturer\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n        \\r\\n          \\r\\n        \\r\\n\\t</div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<!-- Delete -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<!-- History -->\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of Credit Terms</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<th>warehouseId</th>\\r\\n\\t\\t\\t\\t\\t<th>siteId</th>\\r\\n\\t\\t\\t\\t\\t<th>Description</th>\\r\\n\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t<th>New Value</th>\\r\\n\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</thead>\\r\\n\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t</table>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- View -->\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Shelf Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Shelf Name : </b></span><span class=\\\"value\\\">{{shelf_Name}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Location Name : </b></span><span class=\\\"value\\\">{{location_Name}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Warehouse Name : </b></span><span class=\\\"value\\\">{{warehouseName}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Site Name : </b></span><span class=\\\"value\\\">{{siteName}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address1: </b></span><span class=\\\"value\\\">{{address1}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address2: </b></span><span class=\\\"value\\\">{{address2}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address3: </b></span><span class=\\\"value\\\">{{address3}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> City: </b></span><span class=\\\"value\\\">{{city}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> State: </b></span><span class=\\\"value\\\">{{stateOrProvince}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Country: </b></span><span class=\\\"value\\\">{{country}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> ZipCode: </b></span><span class=\\\"value\\\">{{postalCode}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/shelf/shelf.component.html\n// module id = 1794\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./shelf.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/shelf/shelf.component.scss\n// module id = 1795\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/shelf/shelf.component.scss\n// module id = 1796\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Bin {\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, binId?: number,/*actionId?: number,*/ /*description?: string, */masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n\t\t//this.actionId = actionId;\r\n\t\t//this.description = description;\r\n\t\tthis.binId = binId;\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n\r\n\t}\r\n\r\n\t//public actionId: number;\r\n\t//public description: string;\r\n\t//public ataSubChapter1Id: number;\r\n\tpublic binId: number;\r\n\tpublic name: string;\r\n\tpublic masterCompanyId: number;\r\n\tpublic createdBy: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/bin.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Bin</h4>\\r\\n\\t\\t\\t\\t<span class=\\\"help-icon\\\"  data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allBins\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [metaKeySelection]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\" [scrollable]=\\\"true\\\" scrollHeight=\\\"450px\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--Filter Global Search do-->\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Bin\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<app-company></app-company>-->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<colgroup>\\r\\n\\t\\t\\t\\t\\t\\t\\t<col *ngFor=\\\"let col of columns\\\" style=\\\"width:130px\\\">\\r\\n\\t\\t\\t\\t\\t\\t</colgroup>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width:200px\\\"></th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width:200px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"Edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"Delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"History\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Bin</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Bin</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-sm-12 input-icon1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">Site Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceBin.siteId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"siteValueChange($event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let site of allSites\\\" [ngValue]=\\\"site.siteId\\\">{{site.name}}</option><!--(onchange)=\\\"siteValueChange(site.siteName)\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-sm-12 input-icon1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">Warehouse Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceBin.warehouseId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"wareHouseValueChange($event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--[(ngModel)]=\\\"sourceWarehouse.siteID\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let site of allWareHouses\\\" [ngValue]=\\\"site.warehouseId\\\">{{site.warehouseName}}</option><!--(onchange)=\\\"siteValueChange(site.siteName)\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-sm-12 input-icon1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">Location Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceBin.locationId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"locationValueChange($event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--[(ngModel)]=\\\"sourceWarehouse.siteID\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let site of allLocations\\\" [ngValue]=\\\"site.locationId\\\">{{site.name}}</option><!--(onchange)=\\\"siteValueChange(site.siteName)\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-sm-12 input-icon1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">Shelf Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceBin.shelfId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"shelfValueChange(sourceBin.shelfId)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--[(ngModel)]=\\\"sourceWarehouse.siteID\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let site of allShelfs\\\" [ngValue]=\\\"site.shelfId\\\">{{site.name}}</option><!--(onchange)=\\\"siteValueChange(site.siteName)\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\" class=\\\"control-label\\\">Bin Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"Manufacturerdescription($event)\\\" (onKeyUp)=ManufacturerHandler($event) (completeMethod)=\\\"filtermanufacturer($event)\\\" [(ngModel)]=\\\"name\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"2\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template let-name pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{name}}</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSaveManufacturer\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showAddress\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 1</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Address Line 2\\\" minlength=\\\"2\\\" required value={{address1}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 2</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Address Line 2\\\" minlength=\\\"2\\\" required value={{address2}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 3</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Address Line 3\\\" minlength=\\\"2\\\" required value={{address3}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"City\\\" minlength=\\\"2\\\" required value={{city}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"State\\\" minlength=\\\"2\\\" required value={{stateOrProvince}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Country</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Country\\\" minlength=\\\"2\\\" required value={{country}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Zip Code</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Zip Code\\\" minlength=\\\"2\\\" required value={{postalCode}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceBin.memo\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\" *ngIf=\\\"showManagement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<p-tree [value]=\\\"gridData\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedNodeTest\\\"></p-tree>-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-treeTable [value]=\\\"gridData\\\" [columns]=\\\"cols1\\\" [(selection)]=\\\"selectedNodeTest\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-treeTableToggler [rowNode]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\"></p-treeTableToggler>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-treeTableCheckbox [value]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\" (click)=\\\"managementStructureClick(rowData)\\\"></p-treeTableCheckbox>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!--<ng-template pTemplate=\\\"summary\\\">\\r\\n\\t\\t\\t\\t<div style=\\\"text-align: left\\\">\\r\\n\\t\\t\\t\\t\\tSelected Nodes: <span *ngIf=\\\"!selectedNodeTest || selectedNodeTest.length === 0\\\" style=\\\"font-weight: normal\\\">none</span>\\r\\n\\t\\t\\t\\t\\t<ul *ngIf=\\\"selectedNodeTest && selectedNodeTest.length\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let node of selectedNodeTest\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span style=\\\"font-weight: normal\\\">{{'Management Id:'+node.data.managementStructureId + '  Code:' + node.data.code + '  Legal Entity ID:' + node.data.legalEntityId}}</span>\\r\\n\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</ng-template>-->\\r\\n\\t\\t\\t\\t\\t\\t\\t</p-treeTable>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSaveManufacturer\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t</div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<!-- Delete -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<!-- History -->\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of Credit Terms</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<th>warehouseId</th>\\r\\n\\t\\t\\t\\t\\t<th>siteId</th>\\r\\n\\t\\t\\t\\t\\t<th>Description</th>\\r\\n\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t<th>New Value</th>\\r\\n\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</thead>\\r\\n\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t</table>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- View -->\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Bin Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Bin Name : </b></span><span class=\\\"value\\\">{{binName}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Shelf Name : </b></span><span class=\\\"value\\\">{{shelfName}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Location Name : </b></span><span class=\\\"value\\\">{{locationName}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Warehouse Name : </b></span><span class=\\\"value\\\">{{warehouseName}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Site Name : </b></span><span class=\\\"value\\\">{{siteName}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address1: </b></span><span class=\\\"value\\\">{{address1}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address2: </b></span><span class=\\\"value\\\">{{address2}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address3: </b></span><span class=\\\"value\\\">{{address3}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> City: </b></span><span class=\\\"value\\\">{{city}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> State: </b></span><span class=\\\"value\\\">{{stateOrProvince}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Country: </b></span><span class=\\\"value\\\">{{country}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> ZipCode: </b></span><span class=\\\"value\\\">{{postalCode}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/bin/bin.component.html\n// module id = 1798\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./bin.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/bin/bin.component.scss\n// module id = 1799\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/bin/bin.component.scss\n// module id = 1800\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Capabilities</li>\\r\\n\\t\\t\\t\\t\\t</ol>\\r\\n\\t\\t\\t\\t</nav>-->\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Capabilities</h4>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/capabilities/capabilities.component.html\n// module id = 1801\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./capabilities.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/capabilities/capabilities.component.scss\n// module id = 1802\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/capabilities/capabilities.component.scss\n// module id = 1803\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Financial Statement Mapping</li>\\r\\n\\t\\t\\t\\t\\t</ol>\\r\\n\\t\\t\\t\\t</nav>-->\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Financial Statement Mapping</h4>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/financial-statement-mapping/financial-statement-mapping.component.html\n// module id = 1804\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./financial-statement-mapping.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/financial-statement-mapping/financial-statement-mapping.component.scss\n// module id = 1805\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/financial-statement-mapping/financial-statement-mapping.component.scss\n// module id = 1806\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class GLAccountClass {\r\n    glaccountclassname: string;\r\n   \r\n  \r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, GLAccountClassId?: number, GLCID?: number, GLAccountClassName?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n\t\tthis.GLAccountClassId = GLAccountClassId;\r\n\t\tthis.GLCID = GLCID;\r\n\t\tthis.GLAccountClassName = GLAccountClassName;\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n\r\n\t}\r\n\r\n\tpublic GLAccountClassId: number;\r\n\tpublic GLCID: number;\r\n\tpublic  GLAccountClassName: string;\r\n\tpublic masterCompanyId: number;\r\n\tpublic createdBy: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/glaccountclass.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\"> GL Account Class</li>\\r\\n\\t\\t\\t\\t\\t</ol>\\r\\n\\t\\t\\t\\t</nav>-->\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\"> GL Account Class Type</h4>\\r\\n\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allGLAccountClass\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[10,20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add  GL Account Class\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit GL Account Class</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add  GL Account Class</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"netdays\\\" class=\\\"control-label\\\">GL Account Type Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"sourceglaccountclass.glAccountClassName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterGlAccountclass($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-glAccountClassName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{glAccountClassName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disablesave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">GLCID</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input id=\\\"glcid\\\" #GLCID=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceglaccountclass.glcid\\\" minlength=\\\"2\\\" required>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disablesave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<p-dialog header=\\\"Alert\\\" [(visible)]=\\\"display\\\" [modal]=\\\"true\\\" [dismissableMask]=\\\"true\\\" maximizedLeft=\\\"140px\\\" maximizedTop=\\\"140px\\\"\\r\\n\\t\\t  [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [responsive]=\\\"true\\\"\\r\\n\\t\\t  [minY]=\\\"1050\\\" [baseZIndex]=\\\"1100000\\\">\\r\\n\\r\\n\\r\\n\\t<h5 [ngStyle]=\\\"{'color':'red'}\\\">\\r\\n\\t\\tPlease Enter (*) Mandatory Fields\\r\\n\\t</h5>\\r\\n\\t<p-footer>\\r\\n\\t\\t<button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"display=false\\\" label=\\\"Close\\\"></button>\\r\\n\\t</p-footer>\\r\\n\\r\\n</p-dialog>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">GL Account Type  Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>GL Account Type: </b></span><span class=\\\"value\\\">{{glclassViewFileds.capabilityName }}</span></p>\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>ID: </b></span><span class=\\\"value\\\">{{glclassViewFileds.glcid }}</span></p>\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of  GL Account Class</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th>GL Account Class Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Field Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>After Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedDate| date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/gl-account-class/gl-account-class.component.html\n// module id = 1808\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./gl-account-class.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/gl-account-class/gl-account-class.component.scss\n// module id = 1809\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/gl-account-class/gl-account-class.component.scss\n// module id = 1810\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class GlCashFlowClassification {\r\n\r\n\r\n\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, GlCashFlowClassificationId?: number, GLCID?: number, GLClassFlowClassificationName?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean) {\r\n\r\n\t\tthis.GlCashFlowClassificationId = GlCashFlowClassificationId;\r\n\t\t\r\n\t\tthis.GLCID = GLCID;\r\n\t\tthis.GLClassFlowClassificationName = GLClassFlowClassificationName,\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\t\r\n\r\n\t}\r\n\r\n\tpublic GlCashFlowClassificationId: number;\r\n\tpublic GLCID: number;\r\n\tpublic GLClassFlowClassificationName: string;\r\n\tpublic masterCompanyId: number;\r\n\tpublic createdBy: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\t\r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/glcashflowclassification.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\"> GL Cahs Flow Classification</h4>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allGlCashflow\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[10,20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add  GL Cash Flow Classification\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit GL Cahs Flow Classification</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add  GL Cahs Flow Classification</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"netdays\\\" class=\\\"control-label\\\">Gl Cahs Flow Classification Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"sourceglcashflowclassification.glClassFlowClassificationName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterGlAccountclass($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-glClassFlowClassificationName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{glClassFlowClassificationName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">GLCID</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #GLCID=\\\"ngModel\\\" id=\\\"GLCID\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceglcashflowclassification.glcid\\\" minlength=\\\"2\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"GLCID.dirty && GLCID.errors?.required && GLCID.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo is required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"GLCID.dirty && GLCID.errors?.minlength && GLCID.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tGLCID category must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Gl Cash Flow Classification Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>GL Cash Flows Classification Name: </b></span><span class=\\\"value\\\">{{cashflowViewFileds.glClassFlowClassificationName}}</span></p>\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>ID: </b></span><span class=\\\"value\\\">{{cashflowViewFileds.glcid }}</span></p>\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of  GL Account Class</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th>GL Account Class Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Field Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>After Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedDate| date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/gl-cash-flow-classification/gl-cash-flow-classification.component.html\n// module id = 1812\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./gl-cash-flow-classification.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/gl-cash-flow-classification/gl-cash-flow-classification.component.scss\n// module id = 1813\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/gl-cash-flow-classification/gl-cash-flow-classification.component.scss\n// module id = 1814\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">GL Financial Statement</li>\\r\\n\\t\\t\\t\\t\\t</ol>\\r\\n\\t\\t\\t\\t</nav>-->\\r\\n\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">GL Financial Statement</h4>\\r\\n\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/gl-financial-statement/gl-financial-statement.component.html\n// module id = 1815\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./gl-financial-statement.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/gl-financial-statement/gl-financial-statement.component.scss\n// module id = 1816\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/gl-financial-statement/gl-financial-statement.component.scss\n// module id = 1817\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Journal Approvals</li>\\r\\n\\t\\t\\t\\t\\t</ol>\\r\\n\\t\\t\\t\\t</nav>-->\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Journal Approvals</h4>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/journal-approvals/journal-approvals.component.html\n// module id = 1818\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./journal-approvals.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/journal-approvals/journal-approvals.component.scss\n// module id = 1819\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/journal-approvals/journal-approvals.component.scss\n// module id = 1820\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">RFQ Engine</li>\\r\\n\\t\\t\\t\\t\\t</ol>\\r\\n\\t\\t\\t\\t</nav>-->\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">RFQ Engine</h4>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/rfq-engine/rfq-engine.component.html\n// module id = 1821\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./rfq-engine.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/rfq-engine/rfq-engine.component.scss\n// module id = 1822\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/rfq-engine/rfq-engine.component.scss\n// module id = 1823\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\" >\\r\\n \\r\\n        <form [formGroup]=\\\"employeeForm\\\" [fxLayoutGap]=\\\"'1em'\\\" autocomplete=\\\"off\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\r\\n                <mat-form-field  fxFlex>\\r\\n                    <mat-label>Action Name</mat-label>\\r\\n                    <input matInput formControlName=\\\"name\\\" />\\r\\n\\r\\n                    <mat-error *ngIf=\\\"name.hasError('required')\\\">\\r\\n                        Action Name is required\\r\\n                    </mat-error>\\r\\n                </mat-form-field>\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Gender</mat-label>\\r\\n\\r\\n                    <mat-select placeholder=\\\"Select\\\" class=\\\"form-control\\\" data-val=\\\"true\\\" formControlName=\\\"gender\\\">\\r\\n                        <mat-option value=\\\"\\\">-- Select Gender --</mat-option>\\r\\n                        <mat-option value=\\\"Male\\\">Male</mat-option>\\r\\n                        <mat-option value=\\\"Female\\\">Female</mat-option>\\r\\n                    </mat-select>\\r\\n\\r\\n                    <mat-error *ngIf=\\\"gender.hasError('required')\\\">\\r\\n                        Gender required\\r\\n                    </mat-error>\\r\\n                </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\r\\n\\r\\n                <div>\\r\\n                    <button mat-button   color=\\\"accent\\\">Save</button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/actions/actions-editor.component.html\n// module id = 1824\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Charge {\r\n    ManagementStructureId: any;\r\n    \r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n    constructor(masterCompany?: MasterCompany, chargeId?: number, isActive?: boolean, chargeName?: string, quantity?: number, markUp?: number, currencyId?: number, purchaseOrderId?: number, vendorId?: number, integrationPortalId?: number, generalLedgerId?: number, functionalCurrencyId ?: number, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, memo?: string) {\r\n\r\n        this.chargeId = chargeId;\r\n        this.currencyId = currencyId;\r\n        this.purchaseOrderId = purchaseOrderId;\r\n        this.vendorId = vendorId;\r\n        this.integrationPortalId = integrationPortalId;\r\n        this.generalLedgerId = generalLedgerId;\r\n        this.functionalCurrencyId = functionalCurrencyId;\r\n        this.markUp = markUp;\r\n        this.chargeName = chargeName;\r\n        this.quantity = quantity;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.isActive = isActive;\r\n        this.memo = memo;\r\n    }\r\n\r\n    public chargeId: number;\r\n    public currencyId: number;\r\n    public purchaseOrderId: number;\r\n    public vendorId: number;\r\n    public integrationPortalId: number;\r\n    public generalLedgerId: number;\r\n    public functionalCurrencyId: number;\r\n    public markUp: number;\r\n    public chargeName: string;\r\n    public quantity: number;\r\n    public isActive?: boolean;\r\n    public masterCompany: MasterCompany;\r\n\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/charge.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Charges</li>\\r\\n\\t\\t\\t\\t\\t</ol>\\r\\n\\t\\t\\t\\t</nav>-->\\r\\n\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Charges</h4>\\r\\n\\r\\n\\t\\t\\t\\t<span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allChargeinfo\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\" [scrollable]=\\\"true\\\" scrollHeight=\\\"450px\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Charges\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<colgroup>\\r\\n\\t\\t\\t\\t\\t\\t\\t<col *ngFor=\\\"let col of columns\\\" style=\\\"width:130px\\\">\\r\\n\\t\\t\\t\\t\\t\\t</colgroup>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width:200px\\\"></th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width:200px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<!-- Delete Contact Modal -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Charges</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Charges</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<div class=\\\"col-md-6\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"chargeName\\\" class=\\\"control-label\\\">Charges <span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"chargeName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterCharges($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template let-chargeName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{chargeName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" style=\\\"color:red\\\">Already Exist</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"quantity\\\" class=\\\"control-label\\\">QTY</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input name=\\\"quantity\\\" #quantity=\\\"ngModel\\\" id=\\\"quantity\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.quantity\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Description</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input name=\\\"description\\\" #description=\\\"ngModel\\\" id=\\\"description\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.description\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">Currency</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceAction.currencyId\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let currency of allCurrencyinfo\\\" [ngValue]=\\\"currency.currencyId\\\">{{currency.symbol}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"cost\\\" class=\\\"control-label\\\">Cost</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input name=\\\"cost\\\" #cost=\\\"ngModel\\\" id=\\\"cost\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.cost\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!-- It will Be drop Down -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"markUp\\\" class=\\\"control-label\\\">Mark Up</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<input name=\\\"markUp\\\" #markUp=\\\"ngModel\\\" id=\\\"markUp\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.markUp\\\">-->\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.markUp\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\">0%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"11\\\">11%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"12\\\">12%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"13\\\">13%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"14\\\">14%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"15\\\">15%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"16\\\">16%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"17\\\">17%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"18\\\">18%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"19\\\">19%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"20\\\">20%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"21\\\">21%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"22\\\">22%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"23\\\">23%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"24\\\">24%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"25\\\">25%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"26\\\">26%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"27\\\">27%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"28\\\">28%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"29\\\">29%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"30\\\">30%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"31\\\">31%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"32\\\">32%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"33\\\">33%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"34\\\">34%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"35\\\">35%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"36\\\">36%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"37\\\">37%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"38\\\">38%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"39\\\">39%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"40\\\">40%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"41\\\">41%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"42\\\">42%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"43\\\">43%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"44\\\">44%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"45\\\">45%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"46\\\">46%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"47\\\">47%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"48\\\">47%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"49\\\">49%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"50\\\">50%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"51\\\">51%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"52\\\">52%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"53\\\">53%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"54\\\">54%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"55\\\">55%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"56\\\">56%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"57\\\">57%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"58\\\">58%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"59\\\">59%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"60\\\">60%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"61\\\">61%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"62\\\">62%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"63\\\">63%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"64\\\">64%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"65\\\">65%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"66\\\">66%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"67\\\">67%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"68\\\">68%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"69\\\">69%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"70\\\">70%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"71\\\">71%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"72\\\">72%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"73\\\">73%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"74\\\">74%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"75\\\">75%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"76\\\">76%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"77\\\">77%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"78\\\">78%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"79\\\">79%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"80\\\">80%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"81\\\">81%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"82\\\">82%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"83\\\">83%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"84\\\">84%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"85\\\">85%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"86\\\">86%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"87\\\">87%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"88\\\">88%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"89\\\">89%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"90\\\">90%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"91\\\">91%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"92\\\">92%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"93\\\">93%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"94\\\">94%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"95\\\">95%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"96\\\">96%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"97\\\">97%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"98\\\">98%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"99\\\">99%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"100\\\">100%</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"cost\\\" class=\\\"control-label\\\">Billable Amount:</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input name=\\\"cost\\\" #cost=\\\"ngModel\\\" id=\\\"cost\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.billableAmount\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"purchaseOrderId\\\" class=\\\"control-label\\\">PO</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceAction.purchaseOrderId\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let po of allPOinfo\\\" [ngValue]=\\\"po.purchaseOrderId\\\">{{po.purchaseOrderNumber}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<input name=\\\"purchaseOrderId\\\" #purchaseOrderId=\\\"ngModel\\\" id=\\\"purchaseOrderId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.purchaseOrderId\\\">-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"vendorId\\\" class=\\\"control-label\\\">Vendor Name</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceAction.vendorId\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let vendor of allVendorinfo\\\" [ngValue]=\\\"vendor.vendorId\\\">{{vendor.vendorName}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<input name=\\\"vendorId\\\" #vendorId=\\\"ngModel\\\" id=\\\"vendorId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.vendorId\\\">-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"integrationPortalId\\\" class=\\\"control-label\\\">Integration</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceAction.integrationPortalId\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let integration of copyOfAllIntegrationInfo\\\" [ngValue]=\\\"integration.integrationPortalId\\\">{{integration.description}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<input name=\\\"integrationPortalId\\\" #integrationPortalId=\\\"ngModel\\\" id=\\\"integrationPortalId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.integrationPortalId\\\">-->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"generalLedgerId\\\" class=\\\"control-label\\\">GL Acct</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input name=\\\"generalLedgerId\\\" #generalLedgerId=\\\"ngModel\\\" id=\\\"generalLedgerId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.generalLedgerId\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input name=\\\"description\\\" #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">Management Structure</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-7\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceAction.managementStructureId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"getBUList(sourceAction.managementStructureId)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let ataName of copyOfAllManagemtninfo\\\" [ngValue]=\\\"ataName.managementStructureId\\\">{{ataName.code}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"col-md-6\\\">\\r\\n\\t\\t\\t\\t<div  class=\\\"form-group col-sm-12\\\" *ngIf=\\\"showManagement\\\">\\r\\n\\t\\t\\t\\t\\t<p-treeTable [value]=\\\"gridData\\\" [columns]=\\\"cols1\\\" [metaKeySelection]=\\\"true\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedNode\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr [ttSelectableRow]=\\\"rowNode\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-treeTableToggler [rowNode]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\"></p-treeTableToggler>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!--<td>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t<a (click)=\\\"openEdit(contentEdit,rowNode)\\\" matTooltip=\\\"Add Child\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openContentEdit(contentEdit,rowData)\\\" matTooltip=\\\"Edit Entity\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"Delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t</td>-->\\r\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-treeTable>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"functionalCurrencyId\\\" class=\\\"control-label\\\">FCI</label>\\r\\n\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input name=\\\"functionalCurrencyId\\\" #functionalCurrencyId=\\\"ngModel\\\" id=\\\"functionalCurrencyId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.functionalCurrencyId\\\" required minlength=\\\"2\\\">\\r\\n\\t\\t\\t<div *ngIf=\\\"functionalCurrencyId.dirty && functionalCurrencyId.errors?.required && functionalCurrencyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo is required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"functionalCurrencyId.dirty && functionalCurrencyId.errors?.minlength && functionalCurrencyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tvendorId must be at least 2 characters long.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</form>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of Charges</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th>AID</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Charges Description</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>New Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade\\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Charges Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-6\\\">\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Charge Name: </b></span><span class=\\\"value\\\">{{charge_Name}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Quantity: </b></span><span class=\\\"value\\\">{{quantity}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Description: </b></span><span class=\\\"value\\\">{{description}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Currency: </b></span><span class=\\\"value\\\">{{currencySymbol}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Cost: </b></span><span class=\\\"value\\\">{{cost}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Mark Up (%): </b></span><span class=\\\"value\\\">{{markUp}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Billable Amount: </b></span><span class=\\\"value\\\">{{billableAmount}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>PO : </b></span><span class=\\\"value\\\">{{purchaseOrderNumber}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Vendor Name: </b></span><span class=\\\"value\\\">{{vendorName}}</span></p>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-6\\\">\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>IntegrationPortalId: </b></span><span class=\\\"value\\\">{{integrationPortalDescription}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>GeneralLedger Account: </b></span><span class=\\\"value\\\">{{generalLedgerId}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Status: </b></span><span class=\\\"value\\\">{{isActive}}</span></p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t<p>Sample Point 1 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 2 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 3 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 4 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 5 about Page Description</p>\\r\\n\\r\\n\\t\\t\\t<p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/charges/charges.component.html\n// module id = 1826\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./charges.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/charges/charges.component.scss\n// module id = 1827\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/charges/charges.component.scss\n// module id = 1828\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class DefaultMessage {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, defaultMessageId?: number, defaultMessageCode?: string, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n        this.defaultMessageId = defaultMessageId;\r\n        this.defaultMessageCode = defaultMessageCode;\r\n        this.description = description;\r\n        this.memo = memo;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public defaultMessageId: number;\r\n    public defaultMessageCode: string;\r\n    public description: string;\r\n    public memo: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/defaultmessage.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Default Message</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n\\r\\n\\r\\n                <h4 class=\\\"page-heading clr-green\\\">DefaultMessage</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n                <p-table #dt [value]=\\\"allDefaultMessageInfo\\\" [rows]=\\\"5\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[5,10,20]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Default Message\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <!--<div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>-->\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit DefaultMessage</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add DefaultMessage</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"defaultMessageCode\\\" class=\\\"control-label\\\">DefaultMessage Code<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"defaultMessageCode\\\" class=\\\"form-control\\\" required #defaultMessageCode=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.defaultMessageCode\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"defaultMessageCode\\\" class=\\\"control-label\\\">Default Message Code<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"messageName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterMessageName($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-messageName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{messageName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Default Message Description<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" required #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\" minlength=\\\"2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"description.dirty && description.errors?.required && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tDescription required.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"description.dirty && description.errors?.minlength && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tDescription must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"memo\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Default Message</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>DMID</th>\\r\\n                        <th>DefaultMessage Code</th>\\r\\n                        <th>Previous Value</th>\\r\\n                        <th>New Value</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">DefaultMessage Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>DefaultMessage Name: </b></span><span class=\\\"value\\\">{{ defaultMessage_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Description: </b></span><span class=\\\"value\\\">{{ description}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/default-message/default-message.component.html\n// module id = 1830\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./default-message.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/default-message/default-message.component.scss\n// module id = 1831\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/default-message/default-message.component.scss\n// module id = 1832\n// module chunks = 0","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class TaxType {\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, taxTypeId?: number, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string,\r\n\t\tisActive?: boolean, memo?: string) {\r\n\r\n\t\tthis.taxTypeId = taxTypeId;\r\n\t\tthis.description = description;\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n\r\n\t}\r\n\r\n\tpublic taxTypeId: number;\r\n\tpublic description: string;\r\n\tpublic masterCompanyId: number;\r\n\tpublic createdBy: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/taxtype.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Tax Type</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Tax Type</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\r\\n\\r\\n                <p-table #dt [value]=\\\"allTaxTypes\\\" [rows]=\\\"20\\\" [metaKeySelection]=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Tax Type\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n\\r\\n                            <th></th>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n                                <button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete 'Receive' Action ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Action</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Tax Type</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Tax Type Description<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<!--<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input type=\\\"text\\\" name=\\\"description\\\" class=\\\"form-control\\\" required minlength=\\\"5\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.description\\\">\\r\\n\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.required && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tName required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.minlength && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tName must be at least 5 characters long.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t<p-autoComplete [(ngModel)]=\\\"taxTypeName\\\" (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=\\\"eventHandler($event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterTaxTypes($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-taxTypeName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{taxTypeName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" style=\\\"color:red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Action</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>AID</th>\\r\\n                        <th>Colum Name</th>\\r\\n                        <th>Previous Value</th>\\r\\n                        <th>New Value</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">TaxType Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>TaxType Name: </b></span><span class=\\\"value\\\">{{ taxType_Name}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/tax-type/tax-type.component.html\n// module id = 1834\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./tax-type.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/tax-type/tax-type.component.scss\n// module id = 1835\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/tax-type/tax-type.component.scss\n// module id = 1836\n// module chunks = 0","\r\nimport { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Condition {\r\n    // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, conditionId?: number, description?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n        this.conditionId = conditionId;\r\n        this.description = description;\r\n        this.masterCompanyId = masterCompanyId;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.updatedDate = updatedDate;\r\n        this.updatedBy = updatedBy;\r\n        this.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n    }\r\n\r\n    public conditionId: number;\r\n    public description: string;\r\n    public masterCompanyId: number;\r\n    public createdBy: string;\r\n    public updatedBy: string;\r\n    public createdDate: Date;\r\n    public updatedDate: Date;\r\n    public masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/condition.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Condition</li>\\r\\n                    </ol>\\r\\n                </nav>-->\\r\\n                <h4 class=\\\"page-heading clr-green\\\">Condition</h4>\\r\\n                <span class=\\\"help-icon\\\" (click)=\\\"openHelpText(helpText)\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n                <p-table #dt [value]=\\\"allConditionInfo\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: right\\\">\\r\\n                            <p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n                                           selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n                            <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                <i class=\\\"fa fa-search\\\"></i>\\r\\n                                <input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n                            <button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n                            <a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Conditions\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n                            <!--<div class=\\\"excel-upload\\\">\\r\\n                                <input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                                <label for=\\\"upload\\\">\\r\\n                                    <span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n                                </label>\\r\\n                            </div>-->\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                            <th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n                                {{col.header}}\\r\\n                                <p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n                            </th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n                                {{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n                                <span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" matTooltip=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n                                <button mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n                                    <mat-icon>edit</mat-icon>\\r\\n                                </button>\\r\\n                                <button mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n                                <button mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n                                    <mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </ng-template>\\r\\n                </p-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Condition</h4>\\r\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Condition</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n        <label for=\\\"ataChapterName\\\" class=\\\"control-label\\\">Condition Name <span class=\\\"clr-red\\\">*</span></label>\\r\\n        <div class=\\\"control-data\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"ataChapterName\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" required minlength=\\\"5\\\" #ataChapterName=\\\"ngModel\\\" [(ngModel)]=\\\"sourceAction.ataChapterName\\\">\\r\\n        </div>\\r\\n        <div class=\\\"clear\\\"></div>\\r\\n    </div>-->\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"ataChapterName\\\" class=\\\"control-label\\\">Condition Name <span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"description\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterconditions($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template let-conditionName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{conditionName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" style=\\\"color:red\\\">Already exist</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"masterCompanyId\\\" class=\\\"control-label\\\">Company</label>\\r\\n\\t\\t<div class=\\\"\\\">\\r\\n\\t\\t\\t<select name=\\\"masterCompanyId\\\" class=\\\"form-control form-control-lg w150\\\" required #masterCompanyId=\\\"ngModel\\\" id=\\\"masterCompanyId\\\" [(ngModel)]=\\\"sourceAction.masterCompanyId\\\">\\r\\n\\t\\t\\t\\t<option *ngFor=\\\"let pow of allComapnies\\\" [value]=\\\"pow.masterCompanyId\\\">{{pow.companyName}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"masterCompanyId.dirty && masterCompanyId.errors?.required && masterCompanyId.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\tMaster company required.\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Description</label>\\r\\n\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input placeholder=\\\"description\\\" #description=\\\"ngModel\\\" id=\\\"description\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.description\\\" minlength=\\\"2\\\" required>\\r\\n\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.required && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"description.dirty && description.errors?.minlength && description.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #memo=\\\"ngModel\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceAction.memo\\\" />\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.required && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo required.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t\\t<!--<div *ngIf=\\\"memo.dirty && memo.errors?.minlength && memo.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo must be at least 2 characters long.\\r\\n\\t\\t\\t</div>-->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceAction.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\">History of Condition</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>CID</th>\\r\\n                        <th>Condition Description</th>\\r\\n                        <th>Previous Value</th>\\r\\n                        <th>New Value</th>\\r\\n                        <th>Last Updated By</th>\\r\\n                        <th>Last Updated Time</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n                    <td>{{audit.auditHistoryId}}</td>\\r\\n                    <td>{{audit.columnName}}</td>\\r\\n                    <td>{{audit.previousValue}}</td>\\r\\n                    <td>{{audit.newValue}}</td>\\r\\n                    <td>{{audit.updatedBy}}</td>\\r\\n                    <td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Condition Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body viewform\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <p><span class=\\\"label\\\"><b>Condition Name: </b></span><span class=\\\"value\\\">{{condition_Name}}</span></p>              \\r\\n                <p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n                <p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"clear\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>Sample Point 1 about Page Description</p>\\r\\n            <p>Sample Point 2 about Page Description</p>\\r\\n            <p>Sample Point 3 about Page Description</p>\\r\\n            <p>Sample Point 4 about Page Description</p>\\r\\n            <p>Sample Point 5 about Page Description</p>\\r\\n            <hr />\\r\\n            <p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/conditions/conditions.component.html\n// module id = 1838\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./conditions.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/conditions/conditions.component.scss\n// module id = 1839\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/conditions/conditions.component.scss\n// module id = 1840\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Site {\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, siteId?: number,/*actionId?: number,*/ /*description?: string, */masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n\t\t//this.actionId = actionId;\r\n\t\t//this.description = description;\r\n\t\tthis.siteId = siteId;\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n\r\n\t}\r\n\r\n\t//public actionId: number;\r\n\t//public description: string;\r\n\t//public ataSubChapter1Id: number;\r\n\tpublic siteId: number;\r\n\tpublic name: string;\r\n\tpublic masterCompanyId: number;\r\n\tpublic createdBy: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/site.model.ts","module.exports = \"\\r\\n<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Sites</h4>\\r\\n\\t\\t\\t\\t<span class=\\\"help-icon\\\" data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allSites\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [metaKeySelection]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\" [scrollable]=\\\"true\\\" scrollHeight=\\\"450px\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--Filter Global Search do-->\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Site\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<app-company></app-company>-->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<colgroup>\\r\\n\\t\\t\\t\\t\\t\\t\\t<col *ngFor=\\\"let col of columns\\\" style=\\\"width:130px\\\">\\r\\n\\t\\t\\t\\t\\t\\t</colgroup>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width:200px\\\"></th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width:200px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"Edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"Delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"History\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Site</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Site</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"actionname\\\" class=\\\"control-label\\\">Site Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"Manufacturerdescription($event)\\\" (onKeyUp)=ManufacturerHandler($event) (completeMethod)=\\\"filtermanufacturer($event)\\\" [(ngModel)]=\\\"name\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"2\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-template let-name pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{name}}</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSaveManufacturer\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 1</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input placeholder=\\\"Address Line 1\\\" id=\\\"memo\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceSite.address1\\\" minlength=\\\"2\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 2</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input placeholder=\\\"Address Line 2\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceSite.address2\\\" minlength=\\\"2\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 3</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input placeholder=\\\"Address Line 3\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceSite.address3\\\" minlength=\\\"2\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input placeholder=\\\"City\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceSite.city\\\" minlength=\\\"2\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input placeholder=\\\"State\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceSite.stateOrProvince\\\" minlength=\\\"2\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Country</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input placeholder=\\\"Country\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceSite.country\\\" minlength=\\\"2\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Zip Code</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input placeholder=\\\"Zip Code\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceSite.postalCode\\\" minlength=\\\"2\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceSite.memo\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n<div class=\\\"col-6\\\">\\r\\n\\t<!-- Check Box Management Data -->\\r\\n\\r\\n\\t<p-treeTable [value]=\\\"gridData\\\" [columns]=\\\"cols1\\\" [(selection)]=\\\"selectedNodeTest\\\" selectionMode=\\\"checkbox\\\">\\r\\n\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\">\\r\\n\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t</ng-template>\\r\\n\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td *ngFor=\\\"let col of columns; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t<p-treeTableToggler [rowNode]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\"></p-treeTableToggler>\\r\\n\\t\\t\\t\\t\\t<p-treeTableCheckbox [value]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\" (click)=\\\"managementStructureClick(rowData)\\\"></p-treeTableCheckbox>\\r\\n\\t\\t\\t\\t\\t{{rowData[col.field]}}\\r\\n\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t</ng-template>\\r\\n\\t\\t<!--<ng-template pTemplate=\\\"summary\\\">\\r\\n\\t\\t\\t<div style=\\\"text-align: left\\\">\\r\\n\\t\\t\\t\\tSelected Nodes: <span *ngIf=\\\"!selectedNodeTest || selectedNodeTest.length === 0\\\" style=\\\"font-weight: normal\\\">none</span>\\r\\n\\t\\t\\t\\t<ul *ngIf=\\\"selectedNodeTest && selectedNodeTest.length\\\">\\r\\n\\t\\t\\t\\t\\t<li *ngFor=\\\"let node of selectedNodeTest\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span style=\\\"font-weight: normal\\\">{{'Management Id:'+node.managementStructureId }}</span>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</ng-template>-->\\r\\n\\t</p-treeTable>\\r\\n\\t<!-- Check box Management Date End -->\\r\\n</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSaveManufacturer\\\">Submit</button>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n</div>\\r\\n\\t\\t</form>\\r\\n\\t</div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<!-- Delete -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<!-- History -->\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of Credit Terms</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<th>siteId</th>\\r\\n\\t\\t\\t\\t\\t<th>Description</th>\\r\\n\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t<th>New Value</th>\\r\\n\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</thead>\\r\\n\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t</table>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- View -->\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Site Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Site Name : </b></span><span class=\\\"value\\\">{{name}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address1: </b></span><span class=\\\"value\\\">{{address1}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address2: </b></span><span class=\\\"value\\\">{{address2}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address3: </b></span><span class=\\\"value\\\">{{address3}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> City: </b></span><span class=\\\"value\\\">{{city}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> State: </b></span><span class=\\\"value\\\">{{stateOrProvince}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Country: </b></span><span class=\\\"value\\\">{{country}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> ZipCode: </b></span><span class=\\\"value\\\">{{postalCode}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/site/site.component.html\n// module id = 1842\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./site.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/site/site.component.scss\n// module id = 1843\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/site/site.component.scss\n// module id = 1844\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Warehouse {\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, warehouseId?: number,/*actionId?: number,*/ /*description?: string, */masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n\t\t//this.actionId = actionId;\r\n\t\t//this.description = description;\r\n\t\tthis.warehouseId = warehouseId;\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n\r\n\t}\r\n\r\n\t//public actionId: number;\r\n\t//public description: string;\r\n\t//public ataSubChapter1Id: number;\r\n\tpublic warehouseId: number;\r\n\tpublic name: string;\r\n\tpublic masterCompanyId: number;\r\n\tpublic createdBy: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/warehouse.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Ware House</h4>\\r\\n\\t\\t\\t\\t<span class=\\\"help-icon\\\"  data-original-title=\\\"Help\\\" data-toggle=\\\"tooltip\\\"><i class=\\\"fa fa-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#help-popup\\\"></i></span>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allWareHouses\\\" [rows]=\\\"20\\\" [paginator]=\\\"true\\\" [metaKeySelection]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\" [scrollable]=\\\"true\\\" scrollHeight=\\\"450px\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--Filter Global Search do-->\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Warehouse\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--<app-company></app-company>-->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<colgroup>\\r\\n\\t\\t\\t\\t\\t\\t\\t<col *ngFor=\\\"let col of columns\\\" style=\\\"width:130px\\\">\\r\\n\\t\\t\\t\\t\\t\\t</colgroup>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width:200px\\\"></th>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width:200px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"Edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"Delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"History\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit WareHouse</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add WareHouse</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group input-icon1\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"control-label col-sm-4\\\">Site Name</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon autosuggesions-add inline-block\\\">\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"sourceWarehouse.siteId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"siteValueChange($event.target.value)\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let site of allSites\\\" [ngValue]=\\\"site.siteId\\\">{{site.name}}</option><!--(onchange)=\\\"siteValueChange(site.siteName)\\\"-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"actionname\\\" class=\\\"control-label\\\">WareHouse Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"Manufacturerdescription($event)\\\" (onKeyUp)=ManufacturerHandler($event) (completeMethod)=\\\"filtermanufacturer($event)\\\" [(ngModel)]=\\\"name\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"2\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSaveManufacturer\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showAddress\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 1</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Address Line 1\\\" id=\\\"memo\\\" minlength=\\\"2\\\" required value={{address1}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 2</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Address Line 2\\\" minlength=\\\"2\\\" required value={{address2}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Address Line 3</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Address Line 3\\\" minlength=\\\"2\\\" required value={{address3}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"City\\\" minlength=\\\"2\\\" required value={{city}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"State\\\" minlength=\\\"2\\\" required value={{stateOrProvince}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Country</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Country\\\" minlength=\\\"2\\\" required value={{country}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Zip Code</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input disabled placeholder=\\\"Zip Code\\\" minlength=\\\"2\\\" required value={{postalCode}}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Memo</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceWarehouse.memo\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n                <div class=\\\"col-sm-6\\\" *ngIf=\\\"showManagement\\\">\\r\\n                    <!-- Check Box Management Data -->\\r\\n                    <p-treeTable [value]=\\\"gridData\\\" [columns]=\\\"cols1\\\" [(selection)]=\\\"selectedNodeTest\\\">\\r\\n                        <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                            <tr>\\r\\n                                <th *ngFor=\\\"let col of columns\\\">\\r\\n                                    {{col.header}}\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                        </ng-template>\\r\\n                        <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n                            <tr>\\r\\n                                <td *ngFor=\\\"let col of columns; let i = index\\\">\\r\\n                                    <p-treeTableToggler [rowNode]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\"></p-treeTableToggler>\\r\\n                                    <p-treeTableCheckbox [value]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\"></p-treeTableCheckbox>\\r\\n                                    {{rowData[col.field]}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </ng-template>\\r\\n                        <!--<ng-template pTemplate=\\\"summary\\\">\\r\\n                            <div style=\\\"text-align: left\\\">\\r\\n                                Selected Nodes: <span *ngIf=\\\"!selectedNodeTest || selectedNodeTest.length === 0\\\" style=\\\"font-weight: normal\\\">none</span>\\r\\n                                <ul *ngIf=\\\"selectedNodeTest && selectedNodeTest.length\\\">\\r\\n                                    <li *ngFor=\\\"let node of selectedNodeTest\\\">\\r\\n                                        <span style=\\\"font-weight: normal\\\">{{'Management Id:'+node.data.managementStructureId + '  Code:' + node.data.code + '  Legal Entity ID:' + node.data.legalEntityId}}</span>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                        </ng-template>-->\\r\\n                    </p-treeTable>\\r\\n                    <!-- Check box Management Date End -->\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSaveManufacturer\\\">Submit</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</form>\\r\\n\\t</div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<!-- Delete -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete ?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<!-- History -->\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of Credit Terms</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<th>siteId</th>\\r\\n\\t\\t\\t\\t\\t<th>Description</th>\\r\\n\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t<th>New Value</th>\\r\\n\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</thead>\\r\\n\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t<td>{{audit.updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t</table>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- View -->\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">WareHouse Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> WareHouse Name : </b></span><span class=\\\"value\\\">{{warehouse_Name}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Site Name : </b></span><span class=\\\"value\\\">{{siteName}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address1: </b></span><span class=\\\"value\\\">{{address1}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address2: </b></span><span class=\\\"value\\\">{{address2}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Address3: </b></span><span class=\\\"value\\\">{{address3}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> City: </b></span><span class=\\\"value\\\">{{city}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> State: </b></span><span class=\\\"value\\\">{{stateOrProvince}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> Country: </b></span><span class=\\\"value\\\">{{country}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b> ZipCode: </b></span><span class=\\\"value\\\">{{postalCode}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Memo: </b></span><span class=\\\"value\\\">{{memo}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/warehouse/warehouse.component.html\n// module id = 1846\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./warehouse.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/warehouse/warehouse.component.scss\n// module id = 1847\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/warehouse/warehouse.component.scss\n// module id = 1848\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">GL Account Categories</li>\\r\\n\\r\\n\\t\\t\\t\\t\\t</ol>\\r\\n\\t\\t\\t\\t</nav>-->\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Expenditure Type</h4>\\r\\n\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allGLAccountCategory\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[10,20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Expenditure Type\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Expenditure Type</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Expenditure Type</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"GLAccountName\\\" class=\\\"control-label\\\">Expenditure Type<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"glAccountCategoryName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterGLAccountCategory ($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-glAccountCategoryName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{glAccountCategoryName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disablecategory\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--<div class=\\\"form-group\\\">\\r\\n\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">EXID</label>\\r\\n\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t<input placeholder=\\\"GLCID\\\" #GLCID=\\\"ngModel\\\" id=\\\"GLCID\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceGLAccountCatrgory.glcid\\\" minlength=\\\"2\\\" required>\\r\\n\\t\\t\\t<div *ngIf=\\\"GLCID.dirty && GLCID.errors?.required && GLCID.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tMemo is required.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"GLCID.dirty && GLCID.errors?.minlength && GLCID.errors\\\" class=\\\"invalid-form-error-message\\\">\\r\\n\\t\\t\\t\\tGLCID category must be at least 2 characters long.\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t</div>-->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"isActive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"isActive\\\" #isActive=\\\"ngModel\\\" class=\\\"form-check-input\\\" checked id=\\\"isActive\\\" [(ngModel)]=\\\"sourceGLAccountCatrgory.isActive\\\"> Active\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of GL Account Category</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th>GLAccountCategoryName</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>GLCID</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>After Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.glClassFlowClassificationName}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedDate| date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n<!--<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">GLAccountCategory Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<div class=\\\"col-sm-6\\\">\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>GLAccountCategoryName: </b></span><span class=\\\"value\\\">{{ GLAccountCategoryName}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>GLCID: </b></span><span class=\\\"value\\\">{{GLCID}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created By: </b></span><span class=\\\"value\\\">{{createdBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Created Date: </b></span><span class=\\\"value\\\">{{createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated By: </b></span><span class=\\\"value\\\">{{updatedBy}}</span></p>\\r\\n\\t\\t\\t\\t<p><span class=\\\"label\\\"><b>Updated Date: </b></span><span class=\\\"value\\\">{{updatedDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span></p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>-->\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Expenditure Type Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>Expenditure Type: </b></span><span class=\\\"value\\\">{{categoryViewFileds.glAccountCategoryName}}</span></p>\\r\\n\\t\\t\\t<!--<p><span class=\\\"label\\\"><b>EXID: </b></span><span class=\\\"value\\\">{{categoryViewFileds.glcid }}</span></p>-->\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #helpText class=\\\"modal fade\\\" id=\\\"help-popup\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Help text about the page</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t<p>Sample Point 1 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 2 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 3 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 4 about Page Description</p>\\r\\n\\t\\t\\t<p>Sample Point 5 about Page Description</p>\\r\\n\\t\\t\\t<hr />\\r\\n\\t\\t\\t<p><b>Excell format to upload the Data - <a href=\\\"documents/action-table-format.xlsx\\\" class=\\\"clr-red\\\">Download</a></b></p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/gl-account-categories/gl-account-categories.component.html\n// module id = 1849\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./gl-account-categories.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/gl-account-categories/gl-account-categories.component.scss\n// module id = 1850\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/gl-account-categories/gl-account-categories.component.scss\n// module id = 1851\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Manufacturer {\r\n\tglaccountclassname: string;\r\n\r\n\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, ManufacturerId?: number, Comments?: string, Name?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n\t\tthis.ManufacturerId = ManufacturerId;\r\n\t\tthis.Name = Name;\r\n\t\tthis.Comments = Comments;\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n\r\n\t}\r\n\r\n\tpublic ManufacturerId: number;\t\r\n\tpublic Name: string;\r\n\tpublic masterCompanyId: number;\r\n\tpublic Comments: string;\r\n\tpublic createdBy: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/manufacturer.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\"> Manufacturer</h4>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allManufacturerInfo\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[10,20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Manufacturer\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Manufacturer</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add  Manufacturer</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"netdays\\\" class=\\\"control-label\\\">Manufacturer Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"Manufacturerdescription($event)\\\" (onKeyUp)=ManufacturerHandler($event) [(ngModel)]=\\\"sourcemanufacturer.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filtermanufacturer($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-name pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{name}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\">Comments</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input #GLCID=\\\"ngModel\\\" id=\\\"comments\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourcemanufacturer.comments\\\" minlength=\\\"2\\\" required>\\r\\n\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSave\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Manufacturer Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>Manufacturer Name: </b></span><span class=\\\"value\\\">{{manufactureViewField.name}}</span></p>\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>Comments: </b></span><span class=\\\"value\\\">{{manufactureViewField.comments}}</span></p>\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of  Manufacturer</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th>Manufacturer Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Field Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>After Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.name}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedDate| date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/manufacturer/manufacturer.component.html\n// module id = 1853\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./manufacturer.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/manufacturer/manufacturer.component.scss\n// module id = 1854\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/manufacturer/manufacturer.component.scss\n// module id = 1855\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class VendorCapabilities {\r\n\tglaccountclassname: string;\r\n\r\n\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, VendorCapabilityId?: number, CapabilityId?: number, CapabilityName?: string, masterCompanyId?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, isDelete?: boolean, memo?: string) {\r\n\r\n\t\tthis.VendorCapabilityId = VendorCapabilityId;\r\n\t\tthis.CapabilityId = CapabilityId;\r\n\t\tthis.CapabilityName = CapabilityName;\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.isDelete = isDelete;\r\n\t\tthis.memo = memo;\r\n\r\n\t}\r\n\r\n\tpublic VendorCapabilityId: number;\r\n\tpublic CapabilityId: number;\r\n\tpublic masterCompanyId: number;\r\n\tpublic CapabilityName: string;\r\n\tpublic createdBy: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic isDelete: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/vendorcapabilities.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\"> Vendor Capabilities</h4>\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allvendorcapabilities\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[10,20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Vendor Capability\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Vendor capabilities</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add  Vendor capabilities</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"control-label\\\"> VCID </label>\\r\\n\\t\\t\\t\\t<div class=\\\"control-data\\\">\\r\\n\\t\\t\\t\\t\\t<input #GLCID=\\\"ngModel\\\" id=\\\"capabilityId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourcevendorcapabilities.capabilityId\\\" minlength=\\\"2\\\" required>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"netdays\\\" class=\\\"control-label\\\">Capability Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"Vendorcapabilitiesdescription($event)\\\" (onKeyUp)=VendorcapabilitiesHandler($event) [(ngModel)]=\\\"sourcevendorcapabilities.capabilityName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filtervendor($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-capabilityName pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{capabilityName}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disableSavevendorcapabilities\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disableSavevendorcapabilities\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n</form>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Vendor setup Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>Capability Name: </b></span><span class=\\\"value\\\">{{capabilityViewfield.capabilityName}}</span></p>\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>VCID: </b></span><span class=\\\"value\\\">{{capabilityViewfield.capabilityId}}</span></p>\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of Vendor Capabilities</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th>Capability Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Field Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>After Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedDate| date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/vendorcapabilities/vendorcapabilities.component.html\n// module id = 1857\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./vendorcapabilities.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/vendorcapabilities/vendorcapabilities.component.scss\n// module id = 1858\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/vendorcapabilities/vendorcapabilities.component.scss\n// module id = 1859\n// module chunks = 0","import { MasterCompany } from './mastercompany.model';\r\n\r\nexport class Laborandoverheadcostsetup {\r\n\tglaccountclassname: string;\r\n\r\n\r\n\t// Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n\tconstructor(masterCompany?: MasterCompany, LaborOverloadCostId?: number, AVERAGERATEOFALLTECHNICIANMECHANIC?: string, UseIndTechLaborRate?: boolean, AsPercentOFTECHNICIANMECHANICHOURLYRATE?: string, UseAvgRateOfAllTech?: boolean, FlatAmtPerHour?: boolean, FLATAMOUNTPERWORKORDER?: string, FLATAMOUNTPERHOUR?: string, FlatAmtPerWO?: boolean, masterCompanyId?: number, AssignHoursBySpecificAction?: boolean, AssignTotalHoursToWO?: boolean, AsPercentOfTechHourlyRate?: number, createdBy?: string, createdDate?: Date, updatedDate?: Date, updatedBy?: string, isActive?: boolean, memo?: string) {\r\n\r\n\t\tthis.LaborOverloadCostId = LaborOverloadCostId;\r\n\t\tthis.UseIndTechLaborRate = UseIndTechLaborRate;\r\n\t\tthis.UseAvgRateOfAllTech = UseAvgRateOfAllTech;\r\n\t\tthis.AssignHoursBySpecificAction = AssignHoursBySpecificAction;\r\n\t\tthis.AssignTotalHoursToWO = AssignTotalHoursToWO;\r\n\t\tthis.AsPercentOfTechHourlyRate = AsPercentOfTechHourlyRate;\r\n\t\tthis.FlatAmtPerHour = FlatAmtPerHour;\r\n\t\tthis.FlatAmtPerWO = FlatAmtPerWO;\r\n\t\tthis.masterCompanyId = masterCompanyId;\r\n\t\tthis.FLATAMOUNTPERWORKORDER = FLATAMOUNTPERWORKORDER;\r\n\t\tthis.FLATAMOUNTPERHOUR = FLATAMOUNTPERHOUR;\r\n\t\tthis.AsPercentOFTECHNICIANMECHANICHOURLYRATE = AsPercentOFTECHNICIANMECHANICHOURLYRATE;\r\n\t\tthis.AVERAGERATEOFALLTECHNICIANMECHANIC = AVERAGERATEOFALLTECHNICIANMECHANIC;\r\n\t\tthis.createdBy = createdBy;\r\n\t\tthis.createdDate = createdDate;\r\n\t\tthis.updatedDate = updatedDate;\r\n\t\tthis.updatedBy = updatedBy;\r\n\t\tthis.masterCompany = masterCompany;\r\n\t\tthis.isActive = isActive;\r\n\t\tthis.memo = memo;\r\n\r\n\t}\r\n\r\n\tpublic LaborOverloadCostId: number;\r\n\tpublic UseIndTechLaborRate: boolean;\r\n\tpublic masterCompanyId: number;\r\n\tpublic UseAvgRateOfAllTech: boolean;\r\n\tpublic AssignHoursBySpecificAction: boolean;\r\n\tpublic AssignTotalHoursToWO: boolean;\r\n\tpublic AsPercentOfTechHourlyRate: number;\r\n\tpublic FlatAmtPerHour: boolean;\r\n\tpublic FlatAmtPerWO: boolean;\r\n\tpublic FLATAMOUNTPERWORKORDER: string;\r\n\tpublic AsPercentOFTECHNICIANMECHANICHOURLYRATE: string;\r\n\tpublic AVERAGERATEOFALLTECHNICIANMECHANIC: string;\r\n\tpublic createdBy: string;\r\n\tpublic FLATAMOUNTPERHOUR: string;\r\n\tpublic updatedBy: string;\r\n\tpublic createdDate: Date;\r\n\tpublic updatedDate: Date;\r\n\tpublic masterCompany?: MasterCompany;\r\n\tpublic isActive: boolean;\r\n\tpublic memo: string;\r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/laborandoverheadcostsetup.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<h4 class=\\\"page-heading clr-green\\\"> Labor And Overhead Cost Setup </h4>-->\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allLaberOverheadCost\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[10,20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Labor And Overhead Cost Setup\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Labor And Overhead Cost Setup </h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add  Labor And Overhead Cost Setup</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"x_content\\\">\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"clear\\\"></div>\\r\\n\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t<div class=\\\"col-sm-7\\\">\\r\\n\\t\\t\\t<label style=\\\"background:#dadada; width:450px;text-align: left;margin-top: 30px;\\\">\\r\\n\\t\\t\\t\\t<h6>Direct Labor (Technician/Mechanic)</h6>\\r\\n\\t\\t\\t</label><br />\\r\\n\\t\\t\\t<p style=\\\"color:red ; float:left;margin-top: 20px;\\\">What Labor Rate to use on Work Orders?</p><br />\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\r\\n\\t\\t\\t<label style=\\\"text-align:right; width:410px; float:left\\\">USE INDIVIDUAL TECHNICIAN/MECHANIC LABOR RATE</label>\\r\\n\\r\\n\\t\\t\\t<input type=\\\"radio\\\" class=\\\"md-radiobtn\\\" name=\\\"mode\\\"  [value]=\\\"true\\\" id=\\\"useindividual\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceLaborOverheadCost.useIndTechLaborRate\\\" (click)=\\\"enableinputs('UseIndTechLaborRate')\\\">\\r\\n\\r\\n\\t\\t\\t<br />\\r\\n\\t\\t\\t<label style=\\\"text-align:right; width:410px; float:left\\\">USE AVERAGE RATE OF ALL TECHNICIAN/MECHANIC</label>\\r\\n\\t\\t\\t<input class=”md-radiobtn” type=\\\"radio\\\" name=\\\"mode\\\" [value]=\\\"false\\\" id=\\\"userateofalltechnican\\\" (click)=\\\"enableinputs('UseAvgRateOfAllTech')\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceLaborOverheadCost.useIndTechLaborRate\\\">\\r\\n\\t\\t\\t<div style=\\\"text-align:right;display:inline-block\\\"><input type=\\\"text\\\" style=\\\"width:85px\\\" *ngIf=\\\"!sourceLaborOverheadCost.useIndTechLaborRate\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceLaborOverheadCost.averagerateofalltechnicianmechanic\\\" /></div>\\r\\n\\t\\t\\t<br />\\r\\n\\t\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t\\t\\t<p style=\\\"color:red ; float:left;margin-top: 20px;\\\">How to Apply Hours to Work Orders?</p><br />\\r\\n\\t\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\r\\n\\t\\t\\t\\t<label style=\\\"text-align:right; width:410px; float:left\\\">ASSIGN HOURS BY SPECIFIC ACTIONS</label>\\r\\n\\t\\t\\t\\t<input type=\\\"radio\\\" name=\\\"optional\\\" [value]=\\\"true\\\" id=\\\"asignhours\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceLaborOverheadCost.assignHoursBySpecificAction\\\" (click)=\\\"applyHours('AssignHoursBySpecificAction')\\\">\\r\\n\\r\\n\\t\\t\\t\\t<br />\\r\\n\\r\\n\\t\\t\\t\\t<label style=\\\"text-align:right; width:410px; float:left\\\">ASSIGN TOTAL HOURS TO WORK ORDER</label>\\r\\n\\t\\t\\t\\t<input type=\\\"radio\\\" name=\\\"optional\\\" [value]=\\\"false\\\"   [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceLaborOverheadCost.assignHoursBySpecificAction\\\"  id=\\\"useavg\\\" (click)=\\\"applyHours('AssignTotalHoursToWO')\\\" >\\r\\n\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"float:left;margin-bottom:20px\\\" [disabled]=\\\"disableSave \\\" (click)=\\\"editItemAndCloseModel()\\\">Submit</button>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-sm-5\\\">\\r\\n\\r\\n\\t\\t\\t<label style=\\\"background:#dadada; width:350px;text-align: left;margin-top: 30px;padding:\\\">\\r\\n\\t\\t\\t\\t<h6>\\r\\n\\t\\t\\t\\t\\tOverhead Burden Rate\\r\\n\\t\\t\\t\\t</h6>\\r\\n\\t\\t\\t</label><br /><div class=\\\"form-group col-sm-12\\\">\\r\\n\\t\\t\\t\\t<label class=\\\"control-label col-sm-6\\\" style=\\\"text-align:right; width:260px; float:left;\\\">AS A % OF TECHNICIAN/MECHANIC HOURLY RATE</label>\\r\\n\\t\\t\\t\\t<input type=\\\"radio\\\" [value]=\\\"true\\\"  name=\\\"optional1\\\" id=\\\"asa%oftech\\\" (click)=\\\"showinputs('AsPercentOfTechHourlyRate')\\\" >\\r\\n\\t\\t\\t\\t<div style=\\\"text-align:right;display:inline-block\\\" *ngIf=\\\"showAsPercentOfTechHourlyRate\\\">\\r\\n\\t\\t\\t\\t\\t<select class=\\\"overhead-block1 w90\\\" style=\\\"width:85px\\\"   [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceLaborOverheadCost.asPercentOFTECHNICIANMECHANICHOURLYRATE\\\" >\\r\\n\\t\\t\\t\\t\\t\\t<option>1%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option>2%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option>3%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option>4%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option>5%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option>6%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option>7%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option>8%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option>9%</option>\\r\\n\\t\\t\\t\\t\\t\\t<option>10%</option>\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<br />\\r\\n\\t\\t\\t<label style=\\\"text-align:right; width:200px; float:left\\\">FLAT AMOUNT PER HOUR</label>\\r\\n\\t\\t\\t<input type=\\\"radio\\\" name=\\\"optional1\\\" [value]=\\\"true\\\"  id=\\\"userateofalltechnican\\\" (click)=\\\"showinputs('FlatAmtPerHour')\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceLaborOverheadCost.flatAmtPerHour\\\"><br />\\r\\n\\t\\t\\t<div style=\\\"text-align:right\\\"><input type=\\\"text\\\" style=\\\"width:85px;display: inline-block;\\\" size=\\\"30\\\" *ngIf=\\\"sourceLaborOverheadCost.flatAmtPerHour\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceLaborOverheadCost.flatamountperhour\\\" /></div>\\r\\n\\t\\t\\t<label style=\\\"text-align:right; width:200px; float:left\\\">FLAT AMOUNT PER WORK ORDER</label>\\r\\n\\t\\t\\t<input type=\\\"radio\\\" name=\\\"optional1\\\" [value]=\\\"false\\\"  id=\\\"flatamountperwork\\\" (click)=\\\"showinputs('FlatAmtPerWO')\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceLaborOverheadCost.flatAmtPerHour\\\">\\r\\n\\t\\t\\t<div style=\\\"text-align:right;display:inline-block\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"text\\\" size=\\\"30\\\" style=\\\"width:85px\\\" *ngIf=\\\"!sourceLaborOverheadCost.flatAmtPerHour\\\"    [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"sourceLaborOverheadCost.flatamountperworkorder\\\"  />\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<br />\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"clear\\\"></div>\\r\\n\\r\\n\\t<div class=\\\"pull-right\\\" style=\\\"float:right\\\"> © 2018 <a href=\\\"#\\\">PAS</a> </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\t\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/laber-and-overhead-cost-setup/laber-and-overhead-cost-setup.component.html\n// module id = 1861\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./laber-and-overhead-cost-setup.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/laber-and-overhead-cost-setup/laber-and-overhead-cost-setup.component.scss\n// module id = 1862\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/laber-and-overhead-cost-setup/laber-and-overhead-cost-setup.component.scss\n// module id = 1863\n// module chunks = 0","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n\\t\\t<div class=\\\"x_panel\\\">\\r\\n\\t\\t\\t<div class=\\\"x_content\\\">\\r\\n\\t\\t\\t\\t<!--<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Dashboard</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\"> GL Account Class</li>\\r\\n\\t\\t\\t\\t\\t</ol>\\r\\n\\t\\t\\t\\t</nav>-->\\r\\n\\t\\t\\t\\t<h4 class=\\\"page-heading clr-green\\\">Certification Type</h4>\\r\\n\\r\\n\\t\\t\\t\\t<p-table #dt [value]=\\\"allCertification\\\" [metaKeySelection]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[10,20,50,100]\\\" [columns]=\\\"selectedColumns\\\" selectionMode=\\\"multiple\\\" [(selection)]=\\\"selectedColumn\\\" [resizableColumns]=\\\"true\\\" [reorderableColumns]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"caption\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-multiSelect [options]=\\\"cols\\\" [(ngModel)]=\\\"selectedColumns\\\" optionLabel=\\\"header\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   selectedItemsLabel=\\\"{0} columns selected\\\" [style]=\\\"{minWidth: '200px'}\\\" defaultLabel=\\\"Choose Columns\\\" style=\\\"float:left\\\"></p-multiSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" pInputText size=\\\"50\\\" class=\\\"form-control ui-autocomplete-input\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Global Filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export All Data\\\" (click)=\\\"dt.exportCSV()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-download\\\" iconPos=\\\"left\\\" label=\\\"Export Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=\\\"open(contentEdit)\\\" matTooltip=\\\"Add Certification Type\\\" class=\\\"btn btn-success nobg\\\"><span><i class=\\\"fa fa-plus\\\"></i></span></a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"excel-upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" name=\\\"upload[]\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"upload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span matTooltip=\\\"Upload Data (Excel)\\\"><i class=\\\"fa fa-upload\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th *ngFor=\\\"let col of columns\\\" pResizableColumn pReorderableColumn [pSortableColumn]=\\\"col.field\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.header}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-sortIcon [field]=\\\"col.field\\\"></p-sortIcon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t<ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr [pSelectableRow]=\\\"rowData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\" pReorderableRowHandle>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{col.field == 'createdDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field] && col.field == 'updatedDate'?  (rowData[col.field] | date: 'MM/dd/yyyy h:mm:ss a'):rowData[col.field]}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p-inputSwitch *ngIf=\\\"rowData['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"handleChange(rowData,$event)\\\" [(ngModel)]=\\\"rowData['isActive']\\\"></p-inputSwitch>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-toggle=\\\"modal\\\" data-target=\\\"#view\\\"> <a class=\\\"btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"openView(view,rowData)\\\" title=\\\"View\\\"><i class=\\\"fa fa-eye\\\"></i></a> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-edit\\\" mat-icon-button (click)=\\\"openEdit(contentEdit,rowData)\\\" matTooltip=\\\"edit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-delete\\\" mat-icon-button matTooltip=\\\"delete\\\" (click)=\\\"openDelete(content,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn-history\\\" mat-icon-button matTooltip=\\\"history\\\" (click)=\\\"openHist(contentHist,rowData)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon color=\\\"green\\\">history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</p-table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteItemAndCloseModel()\\\">Yes</button>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentEdit let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"isEditMode\\\">Edit Certification</h4>\\r\\n\\t\\t<h4 class=\\\"modal-title\\\" *ngIf=\\\"!isEditMode\\\">Add Certification</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t<form #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"editItemAndCloseModel()\\\">\\r\\n\\r\\n\\t\\t\\t<div class=\\\"form-group col-sm-12\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"netdays\\\" class=\\\"control-label\\\">Certification Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n\\t\\t\\t\\t<div class=\\\"inner-addon right-addon inline-block\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<p-autoComplete (onSelect)=\\\"partnmId($event)\\\" (onKeyUp)=eventHandler($event) [(ngModel)]=\\\"sourcecertificationtype.description\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"localCollection\\\" (completeMethod)=\\\"filterGlAccountclass($event)\\\" [size]=\\\"30\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[minLength]=\\\"1\\\" [dropdown]=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-description pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">{{description}}</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</p-autoComplete>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"disablesave\\\" class=\\\"clr-red\\\">Already Exists</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [disabled]=\\\"disablesave\\\">Submit</button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</form>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<p-dialog header=\\\"Alert\\\" [(visible)]=\\\"display\\\" [modal]=\\\"true\\\" [dismissableMask]=\\\"true\\\" maximizedLeft=\\\"140px\\\" maximizedTop=\\\"140px\\\"\\r\\n\\t\\t  [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [responsive]=\\\"true\\\"\\r\\n\\t\\t  [minY]=\\\"1050\\\" [baseZIndex]=\\\"1100000\\\">\\r\\n\\r\\n\\r\\n\\t<h5 [ngStyle]=\\\"{'color':'red'}\\\">\\r\\n\\t\\tPlease Enter (*) Mandatory Fields\\r\\n\\t</h5>\\r\\n\\t<p-footer>\\r\\n\\t\\t<button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"display=false\\\" label=\\\"Close\\\"></button>\\r\\n\\t</p-footer>\\r\\n\\r\\n</p-dialog>\\r\\n\\r\\n<ng-template #view class=\\\"modal fade \\\" id=\\\"view\\\" role=\\\"dialog\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\">×</button>\\r\\n\\t\\t\\t<h4 class=\\\"modal-title\\\">Certification Type  Details</h4>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body viewform\\\">\\r\\n\\t\\t\\t<p><span class=\\\"label\\\"><b>Certification Type: </b></span><span class=\\\"value\\\">{{certificationViewFileds.capabilityName }}</span></p>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<div class=\\\"clear\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" id=\\\"\\\" name=\\\"\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #contentHist let-c=\\\"close\\\" let-d=\\\"dismiss\\\" style=\\\"width:auto\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\r\\n\\t\\t<h4 class=\\\"modal-title\\\">History of  Certification Type</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\r\\n\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-bordered\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th>GL Account Class Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Field Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Previous Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>After Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated By</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Last Updated Time</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let audit of auditHisory\\\">\\r\\n\\t\\t\\t\\t\\t<td>{{audit.auditHistoryId}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.columnName}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.previousValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.newValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedBy}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{audit.updatedDate| date: 'MM/dd/yyyy h:mm:ss a'}}</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">Close</button>\\r\\n\\t</div>\\r\\n</ng-template>\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/certification-type/certification-type.component.html\n// module id = 1864\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./certification-type.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/certification-type/certification-type.component.scss\n// module id = 1865\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/certification-type/certification-type.component.scss\n// module id = 1866\n// module chunks = 0","export class AssetStatus {\r\n\tid: number;\r\n    identification: string;\r\n    name: string;\r\n    memo: string;\r\n    createdBy: string;\r\n    updatedBy: string;\r\n    createdDate: Date;\r\n    updatedDate: Date;\r\n    isDeleted: boolean;\r\n    isActive: boolean;\r\n    assetsStatusList: AssetStatus[];\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/asset-status.model.ts","export class SingleScreenAuditDetails {\r\n    SubModuleName: string;\r\n    ChangesOverview: string;\r\n    LastUpdatedBy: string;\r\n    LastUpdatedTime: string;\r\n    AuditChanges: AuditChanges[];\r\n    Visible: Boolean;\r\n}\r\n\r\nexport class AuditChanges {\r\n    FieldFriendlyname: string;\r\n    NewValue: string;\r\n    OldValue: string;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/single-screen-audit-details.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management</li>\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management Maintanance</li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Asset Status</li>\\r\\n                    </ol>\\r\\n                </nav>\\r\\n                <h4 class=\\\"page-heading\\\">Asset Status</h4>\\r\\n                <div class=\\\"col-sm-12 form-bg\\\">\\r\\n                    <div class=\\\"form-group add-inputs\\\">\\r\\n                        <!--<form id=\\\"\\\" name=\\\"\\\" method=\\\"post\\\">-->\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">ID<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentAssetStatus.identification\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentAssetStatus.name\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Memo<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7\\\">\\r\\n                                <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"currentAssetStatus.memo\\\"></textarea>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-2\\\">\\r\\n                            <button type=\\\"button\\\" id=\\\"btnFilterAssetStatus\\\" name=\\\"\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Filter\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnAddAssetStatus\\\" (click)=\\\"addAssetStatus()\\\" name=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Add\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"excel-upload mtop0\\\">\\r\\n                            <input type=\\\"file\\\" name=\\\"upload[]\\\" multiple=\\\"\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                            <label for=\\\"upload\\\"> <span data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Excel Upload (table rows)\\\"><i class=\\\"fa fa-file-excel-o\\\"></i></span> </label>\\r\\n                        </div>\\r\\n                        <!--</form>-->\\r\\n                    </div>\\r\\n                    <!--Add claffication End -->\\r\\n                    <!--Uplad Doc-->\\r\\n                    <!--End-->\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-bordered table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>ID</th>\\r\\n                                    <th>Name</th>\\r\\n                                    <th>Memo</th>\\r\\n                                    <th>&nbsp;</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let assetStatus of assetStatusList\\\">\\r\\n                                    <td>{{assetStatus.identification}}</td>\\r\\n                                    <td>{{assetStatus.name}}</td>\\r\\n                                    <td>{{assetStatus.memo}}</td>\\r\\n                                    <td>\\r\\n                                        <!--<div (click)=\\\"toggleIsActive(assetStatus.id)\\\" data-toggle=\\\"tooltip\\\" class=\\\"status\\\" title=\\\"\\\" data-placement=\\\"right\\\" data-original-title=\\\"Active\\\">-->\\r\\n                                        <!--<div class=\\\"toggle btn btn-success\\\" data-toggle=\\\"toggle\\\" style=\\\"width: 30px; height: 19px;\\\">\\r\\n                                                <input type=\\\"checkbox\\\" checked=\\\"\\\" data-toggle=\\\"toggle\\\" data-width=\\\"30\\\" id=\\\"toggle-one\\\" data-on=\\\"<i class='fa fa-check'></i>\\\" data-off=\\\"<i class='fa fa-times'></i>\\\" data-onstyle=\\\"success\\\" data-offstyle=\\\"danger\\\">\\r\\n                                                <div class=\\\"toggle-group\\\">\\r\\n                                                    <label class=\\\"btn btn-success toggle-on\\\">\\r\\n                                                        <i class=\\\"fa fa-check\\\"></i>\\r\\n                                                    </label>\\r\\n                                                    <label class=\\\"btn btn-danger active toggle-off\\\">\\r\\n                                                        <i class=\\\"fa fa-times\\\"></i>\\r\\n                                                    </label>\\r\\n                                                    <span class=\\\"toggle-handle btn btn-default\\\"></span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>-->\\r\\n                                        <p-inputSwitch *ngIf=\\\"assetStatus.isActive\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(assetStatus,$event)\\\" [(ngModel)]=\\\"assetStatus.isActive\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"assetStatus.isActive == false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(assetStatus,$event)\\\" [(ngModel)]=\\\"assetStatus.isActive\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"assetStatus.isActive == null\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(assetStatus,$event)\\\" [(ngModel)]=\\\"assetStatus.isActive\\\"></p-inputSwitch>\\r\\n                                        <span (click)=\\\"setAssetStatusToUpdate(editAssetStatus,assetStatus.id)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#edit\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-primary nobg\\\" data-original-title=\\\"\\\" edit=\\\"\\\">\\r\\n                                                <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span (click)=\\\"showAuditPopup(auditContent,assetStatus.id)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#history\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-original-title=\\\"History\\\">\\r\\n                                                <i class=\\\"fa fa-history\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span (click)=\\\"confirmDelete(content,assetStatus.id)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#data\\\">\\r\\n                                            <a class=\\\"btn btn-danger nobg\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Delete\\\">\\r\\n                                                <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <!--<div class=\\\"padding5\\\">\\r\\n                        <ul class=\\\"pagination\\\">\\r\\n                            <li class=\\\"arrows disabled\\\"><a href=\\\"#\\\"> <i class=\\\"fa fa-angle-left\\\"></i> </a></li>\\r\\n                            <li class=\\\"active\\\"><a href=\\\"#\\\">1</a></li>\\r\\n                            <li><a href=\\\"#\\\">2</a></li>\\r\\n                            <li><a href=\\\"#\\\">3</a></li>\\r\\n                            <li class=\\\"arrows\\\"><a href=\\\"#\\\"> <i class=\\\"fa fa-angle-right\\\"></i> </a></li>\\r\\n                        </ul>\\r\\n                        <div class=\\\"pull-right\\\"> © <span class=\\\"currentyear\\\">2019</span> <a href=\\\"#\\\">PAS</a> </div>\\r\\n                    </div>-->\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n<ng-template #auditContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\"> History of Asset Status</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table table-bordered\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style=\\\"width:30%;\\\">Last Updated By</th>\\r\\n                            <th style=\\\"width:35%;\\\">Last Updated Time</th>\\r\\n                            <th style=\\\"width:35%;\\\">&nbsp;</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let audit of AuditDetails\\\">\\r\\n                            <td colspan=\\\"3\\\" style=\\\"width:100%\\\">\\r\\n                                <table class=\\\"table table-bordered\\\">\\r\\n\\r\\n                                    <tr>\\r\\n                                        <td style=\\\"width:30%;\\\">{{audit.LastUpdatedBy}}</td>\\r\\n                                        <td style=\\\"width:35%;\\\">{{audit.LastUpdatedTime}}</td>\\r\\n                                        <td style=\\\"width:35%;\\\">\\r\\n                                            <span>\\r\\n                                                <a (click)=\\\"ToggleChangedPropertiesSection(audit)\\\" class=\\\"sd-history-btn btn btn-info boxed-float-btn nobg\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"View\\\">\\r\\n                                                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                                                </a>\\r\\n                                            </span>\\r\\n                                        </td>\\r\\n\\r\\n                                    </tr>\\r\\n                                    <tbody [hidden]=\\\"!audit.Visible\\\">\\r\\n                                        <tr style=\\\"height:5px;\\\"><td colspan=\\\"3\\\"></td></tr>\\r\\n                                        <tr style=\\\"background:#007bff;\\\">\\r\\n                                            <th style=\\\"width:30%;color:white\\\">Field Name</th>\\r\\n                                            <th style=\\\"width:35%;color:white\\\">New Value</th>\\r\\n                                            <th style=\\\"width:35%;color:white\\\">Old Value</th>\\r\\n                                        </tr>\\r\\n                                        <tr *ngFor=\\\"let auditChange of audit.AuditChanges\\\" style=\\\"background:#ececec;\\\">\\r\\n                                            <td>{{auditChange.FieldFriendlyname}}</td>\\r\\n                                            <td>{{auditChange.NewValue}}</td>\\r\\n                                            <td>{{auditChange.OldValue}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr style=\\\"height:5px;\\\"><td colspan=\\\"3\\\"></td></tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are you sure you want to delete Asset Status {{assetStatusToRemove.identification}}?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"removeAssetStatus()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #editAssetStatus let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"dismissModel()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\"> Edit {{assetStatusToUpdate.identification}} Asset Status</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>ID: </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"assetStatusToUpdate.identification\\\" class=\\\"form-control\\\">\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>Name: </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"assetStatusToUpdate.name\\\" class=\\\"form-control\\\">\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>Memo: </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <textarea [(ngModel)]=\\\"assetStatusToUpdate.memo\\\" class=\\\"form-control\\\"></textarea>\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p><span class=\\\"col-sm-3\\\"><b>Created by: </b></span> <span class=\\\"col-sm-9\\\">{{assetStatusToUpdate.createdBy}}</span></p>\\r\\n            <hr>\\r\\n            <p><span class=\\\"col-sm-3\\\"><b>Last update by: </b></span> <span class=\\\"col-sm-9\\\">{{assetStatusToUpdate.updatedBy}}</span></p>\\r\\n            <hr>\\r\\n            <p><span class=\\\"col-sm-3\\\"><b>Created Time: </b></span> <span class=\\\"col-sm-9\\\">{{assetStatusToUpdate.createdDate}}</span></p>\\r\\n            <hr>\\r\\n            <p><span class=\\\"col-sm-3\\\"><b>Last Updated: </b></span> <span class=\\\"col-sm-9\\\">{{assetStatusToUpdate.updatedDate}}</span></p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"updateAssetStatus()\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\">Update</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<p-dialog header=\\\"Alert\\\" [(visible)]=\\\"display\\\" [modal]=\\\"true\\\" [dismissableMask]=\\\"true\\\" maximizedLeft=\\\"140px\\\" maximizedTop=\\\"140px\\\"\\r\\n          [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [responsive]=\\\"true\\\"\\r\\n          [minY]=\\\"1050\\\" [baseZIndex]=\\\"1100000\\\">\\r\\n    <h5 [ngStyle]=\\\"{'color':'red'}\\\">\\r\\n        Please Enter (*) Mandatory Fields\\r\\n    </h5>\\r\\n    <p-footer>\\r\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"display=false\\\" label=\\\"Close\\\"></button>\\r\\n    </p-footer>\\r\\n\\r\\n</p-dialog>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/AssetStatus/asset-status.component.html\n// module id = 1869\n// module chunks = 0","export class DepriciationMethod {\r\n    assetDepreciationMethodId: number;\r\n    assetDepreciationMethodName: string;\r\n    assetDepreciationBasis: string;\r\n    assetDepreciationMemo: string;\r\n    masterCompanyId: number;\r\n    createdBy: string;\r\n    updatedBy: string;\r\n    createdDate: Date;\r\n    updatedDate: Date;\r\n    isDelete: boolean;\r\n    isActive: boolean;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/depriciation-method.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management</li>\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management Maintanance</li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Depreciation Method</li>\\r\\n                    </ol>\\r\\n                </nav>\\r\\n                <h4 class=\\\"page-heading\\\">Depreciation Method</h4>\\r\\n                <div class=\\\"col-sm-12 form-bg\\\">\\r\\n                    <div class=\\\"form-group add-inputs\\\">\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">ID</label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentDepriciationmethod.assetDepreciationId\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentDepriciationmethod.assetDepreciationMethodName\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Depreciation Basis<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7\\\">\\r\\n                                <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"currentDepriciationmethod.assetDepreciationBasis\\\"></textarea>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Memo<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7\\\">\\r\\n                                <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"currentDepriciationmethod.assetDepreciationMemo\\\"></textarea>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-2\\\">\\r\\n                            <button type=\\\"button\\\" id=\\\"btnFilterdepriciationMethod\\\" name=\\\"\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Filter\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnAdddepriciationMethod\\\" *ngIf=\\\"!this.updateMode\\\" (click)=\\\"adddepriciationmethod()\\\" name=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Add\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnUpdatedepriciationMethod\\\" *ngIf=\\\"this.updateMode\\\" (click)=\\\"updatedepriciationmethod()\\\" name=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Update\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnResetdepriciationMethod\\\" *ngIf=\\\"this.updateMode\\\" (click)=\\\"resetdepriciationmethod()\\\" name=\\\"\\\" class=\\\"btn btn-default nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Reset\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"excel-upload mtop0\\\">\\r\\n                            <input type=\\\"file\\\" name=\\\"upload[]\\\" multiple=\\\"\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                            <label for=\\\"upload\\\"> <span data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Excel Upload (table rows)\\\"><i class=\\\"fa fa-file-excel-o\\\"></i></span> </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-bordered table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>ID</th>\\r\\n                                    <th>Name</th>\\r\\n                                    <th>Depriciation Basis</th>\\r\\n                                    <th>Memo</th>\\r\\n                                    <th>Actions</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let depriciationMethod of depriciationMethodList\\\">\\r\\n                                    <td>{{depriciationMethod.assetDepreciationId}}</td>\\r\\n                                    <td>{{depriciationMethod.assetDepreciationMethodName}}</td>\\r\\n                                    <td>{{depriciationMethod.assetDepreciationBasis}}</td>\\r\\n                                    <td>{{depriciationMethod.assetDepreciationMemo}}</td>\\r\\n                                    <td>\\r\\n                                        <p-inputSwitch *ngIf=\\\"depriciationMethod['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(depriciationMethod,$event)\\\" [(ngModel)]=\\\"depriciationMethod['isActive']\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"depriciationMethod['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(depriciationMethod,$event)\\\" [(ngModel)]=\\\"depriciationMethod['isActive']\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"depriciationMethod['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(depriciationMethod,$event)\\\" [(ngModel)]=\\\"depriciationMethod['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n                                        <span (click)=\\\"setdepriciationmethodToUpdate(editAssetTypes,depriciationMethod.assetDepreciationMethodId)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#edit\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-primary nobg\\\" data-original-title=\\\"\\\" edit=\\\"\\\">\\r\\n                                                <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span data-toggle=\\\"modal\\\" data-target=\\\"#history\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-original-title=\\\"History\\\">\\r\\n                                                <i class=\\\"fa fa-history\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span (click)=\\\"openDelete(content,depriciationMethod)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#data\\\">\\r\\n                                            <a class=\\\"btn btn-danger nobg\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Delete\\\">\\r\\n                                                <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <br>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"removedepriciationmethod()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #editAssetTypes let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"dismissModel()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\"> Edit {{depriciationToUpdate.assetDepreciationId}} Depriciation </h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>ID: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"depriciationToUpdate.assetDepreciationId\\\" class=\\\"form-control\\\">\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>Name: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"depriciationToUpdate.assetDepreciationMethodName\\\" class=\\\"form-control\\\">\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>Basis: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"depriciationToUpdate.assetDepreciationBasis\\\" class=\\\"form-control\\\">\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>Memo: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <textarea [(ngModel)]=\\\"depriciationToUpdate.assetDepreciationMemo\\\" class=\\\"form-control\\\"></textarea>\\r\\n                </span>\\r\\n            </p>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"updatedepriciationmethod()\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\">Update</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<p-dialog header=\\\"Alert\\\" [(visible)]=\\\"display\\\" [modal]=\\\"true\\\" [dismissableMask]=\\\"true\\\" maximizedLeft=\\\"140px\\\" maximizedTop=\\\"140px\\\"\\r\\n          [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [responsive]=\\\"true\\\"\\r\\n          [minY]=\\\"1050\\\" [baseZIndex]=\\\"1100000\\\">\\r\\n    <h5 [ngStyle]=\\\"{'color':'red'}\\\">\\r\\n        Please Enter (*) Mandatory Fields\\r\\n    </h5>\\r\\n    <p-footer>\\r\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"display=false\\\" label=\\\"Close\\\"></button>\\r\\n    </p-footer>\\r\\n\\r\\n</p-dialog>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/depriciation-method/depriciation-method.component.html\n// module id = 1871\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./depriciation-method.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/depriciation-method/depriciation-method.component.scss\n// module id = 1872\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/depriciation-method/depriciation-method.component.scss\n// module id = 1873\n// module chunks = 0","export class DisposalType {\r\n    assetDisposalTypeId: number;\r\n    assetDispoalId: string;\r\n    assetDisposalName: string;\r\n    assetDisposalMemo: string;\r\n    createdBy: string;\r\n    updatedBy: string;\r\n    createdDate: Date;\r\n    updatedDate: Date;\r\n    isDelete: boolean;\r\n    isActive: boolean;\r\n    disposaltypeList: DisposalType[];\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/disposal-type.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management</li>\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management Maintanance</li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Disposal Type</li>\\r\\n                    </ol>\\r\\n                </nav>\\r\\n                <h4 class=\\\"page-heading\\\">Disposal Type</h4>\\r\\n                <div class=\\\"col-sm-12 form-bg\\\">\\r\\n                    <div class=\\\"form-group add-inputs\\\">\\r\\n                        <!--<form id=\\\"\\\" name=\\\"\\\" method=\\\"post\\\">-->\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">ID<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentdisposalType.assetDisposalId\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentdisposalType.assetDisposalName\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Memo<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7\\\">\\r\\n                                <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"currentdisposalType.assetDisposalMemo\\\"></textarea>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-2\\\">\\r\\n                            <button type=\\\"button\\\" id=\\\"btnFilterdisposalType\\\" name=\\\"\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Filter\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnAdddisposalType\\\" *ngIf=\\\"!this.updateMode\\\" (click)=\\\"adddisposalType()\\\" name=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Add\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnUpdatedisposalType\\\" *ngIf=\\\"this.updateMode\\\" (click)=\\\"updatedisposalType()\\\" name=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Update\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnResetdisposalType\\\" *ngIf=\\\"this.updateMode\\\" (click)=\\\"resetdisposalType()\\\" name=\\\"\\\" class=\\\"btn btn-default nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Reset\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"excel-upload mtop0\\\">\\r\\n                            <input type=\\\"file\\\" name=\\\"upload[]\\\" multiple=\\\"\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                            <label for=\\\"upload\\\"> <span data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Excel Upload (table rows)\\\"><i class=\\\"fa fa-file-excel-o\\\"></i></span> </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-bordered table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>ID</th>\\r\\n                                    <th>Name</th>\\r\\n                                    <th>Memo</th>\\r\\n                                    <th>Actions</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let disposalType of disposalTypeList\\\">\\r\\n                                    <td>{{disposalType.assetDisposalId}}</td>\\r\\n                                    <td>{{disposalType.assetDisposalName}}</td>\\r\\n                                    <td>{{disposalType.assetDisposalMemo}}</td>\\r\\n                                    <td>\\r\\n                                        <p-inputSwitch *ngIf=\\\"disposalType['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(disposalType,$event)\\\" [(ngModel)]=\\\"disposalType['isActive']\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"disposalType['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(disposalType,$event)\\\" [(ngModel)]=\\\"disposalType['isActive']\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"disposalType['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(disposalType,$event)\\\" [(ngModel)]=\\\"disposalType['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n                                        <span (click)=\\\"setdisposalTypeToUpdate(editpopup,disposalType.assetDisposalTypeId)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#edit\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-primary nobg\\\" data-original-title=\\\"\\\" edit=\\\"\\\">\\r\\n                                                <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span data-toggle=\\\"modal\\\" data-target=\\\"#history\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-original-title=\\\"History\\\">\\r\\n                                                <i class=\\\"fa fa-history\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span (click)=\\\"openDelete(content,disposalType)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#data\\\">\\r\\n                                            <a class=\\\"btn btn-danger nobg\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Delete\\\">\\r\\n                                                <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"removedisposalType()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #editpopup let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"dismissModel()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\"> Edit {{assetDisposalToUpdate.assetDisposalId}} Disposal Type</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>ID:<span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"assetDisposalToUpdate.assetDisposalId\\\" class=\\\"form-control\\\">\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>Name: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"assetDisposalToUpdate.assetDisposalName\\\" class=\\\"form-control\\\">\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>Memo: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <textarea [(ngModel)]=\\\"assetDisposalToUpdate.assetDisposalMemo\\\" class=\\\"form-control\\\"></textarea>\\r\\n                </span>\\r\\n            </p>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"updatedisposalType()\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\">Update</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<p-dialog header=\\\"Alert\\\" [(visible)]=\\\"display\\\" [modal]=\\\"true\\\" [dismissableMask]=\\\"true\\\" maximizedLeft=\\\"140px\\\" maximizedTop=\\\"140px\\\"\\r\\n          [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [responsive]=\\\"true\\\"\\r\\n          [minY]=\\\"1050\\\" [baseZIndex]=\\\"1100000\\\">\\r\\n    <h5 [ngStyle]=\\\"{'color':'red'}\\\">\\r\\n        Please Enter (*) Mandatory Fields\\r\\n    </h5>\\r\\n    <p-footer>\\r\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"display=false\\\" label=\\\"Close\\\"></button>\\r\\n    </p-footer>\\r\\n\\r\\n</p-dialog>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/disposal-type/disposal-type.component.html\n// module id = 1875\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./disposal-type.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/disposal-type/disposal-type.component.scss\n// module id = 1876\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/disposal-type/disposal-type.component.scss\n// module id = 1877\n// module chunks = 0","export class AssetDepConventionType {\r\n    assetDepConventionTypeId: number;\r\n    assetDepConventionId: string;\r\n    assetDepConventionName: string;\r\n    assetDepConventionMemo: string;\r\n    createdBy: string;\r\n    updatedBy: string;\r\n    createdDate: Date;\r\n    updatedDate: Date;\r\n    isDelete: boolean;\r\n    isActive: boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/assetDepConventionType.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management</li>\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management Maintanance</li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Depreciation Convension</li>\\r\\n                    </ol>\\r\\n                </nav>\\r\\n                <h4 class=\\\"page-heading\\\">Asset Status</h4>\\r\\n                <div class=\\\"col-sm-12 form-bg\\\">\\r\\n                    <div class=\\\"form-group add-inputs\\\">\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">ID</label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentAssetDep.assetDepConventionId\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Name</label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentAssetDep.assetDepConventionName\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Memo</label>\\r\\n                            <div class=\\\"col-sm-7\\\">\\r\\n                                <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"currentAssetDep.assetDepConventionMemo\\\"></textarea>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-2\\\">\\r\\n                            <button type=\\\"button\\\" id=\\\"btnFilterAssetStatus\\\" name=\\\"\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Filter\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnAddAssetDep\\\" *ngIf=\\\"!this.updateMode\\\" (click)=\\\"addAssetDepConventionType()\\\" name=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Add\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnUpdateAssetDep\\\" *ngIf=\\\"this.updateMode\\\" (click)=\\\"updateAssetDepConventionType()\\\" name=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Update\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnResetAssetDep\\\" *ngIf=\\\"this.updateMode\\\" (click)=\\\"resetAssetDepConventionType()\\\" name=\\\"\\\" class=\\\"btn btn-default nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Reset\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"excel-upload mtop0\\\">\\r\\n                            <input type=\\\"file\\\" name=\\\"upload[]\\\" multiple=\\\"\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                            <label for=\\\"upload\\\"> <span data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Excel Upload (table rows)\\\"><i class=\\\"fa fa-file-excel-o\\\"></i></span> </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-bordered table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>ID</th>\\r\\n                                    <th>Name</th>\\r\\n                                    <th>Memo</th>\\r\\n                                    <th>Actions</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let assetDep of assetDepList\\\">\\r\\n                                    <td>{{assetDep.assetDepConventionId}}</td>\\r\\n                                    <td>{{assetDep.assetDepConventionName}}</td>\\r\\n                                    <td>{{assetDep.assetDepConventionMemo}}</td>\\r\\n                                    <td>\\r\\n\\r\\n                                        <p-inputSwitch *ngIf=\\\"assetDep['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(assetDep,$event)\\\" [(ngModel)]=\\\"assetDep['isActive']\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"assetDep['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(assetDep,$event)\\\" [(ngModel)]=\\\"assetDep['isActive']\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"assetDep['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(assetDep,$event)\\\" [(ngModel)]=\\\"assetDep['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n                                        <span (click)=\\\"setAssetDepConventionTypeToUpdate(editpopup,assetDep.assetDepConventionTypeId)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#edit\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-primary nobg\\\" data-original-title=\\\"\\\" edit=\\\"\\\">\\r\\n                                                <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span data-toggle=\\\"modal\\\" data-target=\\\"#history\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-original-title=\\\"History\\\">\\r\\n                                                <i class=\\\"fa fa-history\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span (click)=\\\"openDelete(content,assetDep)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#data\\\">\\r\\n                                            <a class=\\\"btn btn-danger nobg\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Delete\\\">\\r\\n                                                <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<!--Confirmation for Delete-->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"removeAssetDepConventionType()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #editpopup let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"dismissModel()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\"> Edit {{assetDepConventionToUpdate.assetDepConventionId}} Asset Type</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>ID: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"assetDepConventionToUpdate.assetDepConventionId\\\" class=\\\"form-control\\\">\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>Name: <span style=\\\"color:red\\\">*</span></b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"assetDepConventionToUpdate.assetDepConventionName\\\" class=\\\"form-control\\\">\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>Memo: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <textarea [(ngModel)]=\\\"assetDepConventionToUpdate.assetDepConventionMemo\\\" class=\\\"form-control\\\"></textarea>\\r\\n                </span>\\r\\n            </p>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"updateAssetDepConventionType()\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\">Update</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<p-dialog header=\\\"Alert\\\" [(visible)]=\\\"display\\\" [modal]=\\\"true\\\" [dismissableMask]=\\\"true\\\" maximizedLeft=\\\"140px\\\" maximizedTop=\\\"140px\\\"\\r\\n          [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [responsive]=\\\"true\\\"\\r\\n          [minY]=\\\"1050\\\" [baseZIndex]=\\\"1100000\\\">\\r\\n    <h5 [ngStyle]=\\\"{'color':'red'}\\\">\\r\\n        Please Enter (*) Mandatory Fields\\r\\n    </h5>\\r\\n    <p-footer>\\r\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"display=false\\\" label=\\\"Close\\\"></button>\\r\\n    </p-footer>\\r\\n\\r\\n</p-dialog>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/asset-dep-convention-type/asset-dep-convention-type.component.html\n// module id = 1879\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./asset-dep-convention-type.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/asset-dep-convention-type/asset-dep-convention-type.component.scss\n// module id = 1880\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/asset-dep-convention-type/asset-dep-convention-type.component.scss\n// module id = 1881\n// module chunks = 0","export class DepreciationIntervals {\r\n    assetDepreciationIntervalTypeId: number;\r\n    assetDepreciationIntervalId: string;\r\n    assetDepreciationIntervalName: string;\r\n    assetDepreciationIntervalMemo: string;\r\n    createdBy: string;\r\n    updatedBy: string;\r\n    createdDate: Date;\r\n    updatedDate: Date;\r\n    isDelete: boolean;\r\n    isActive: boolean;\r\n    masterCompanyId: number;\r\n    depreciationIntervalsList: DepreciationIntervals[];\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/depriciationIntervals.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management</li>\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management Maintanance</li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Depreciation Intervals</li>\\r\\n                    </ol>\\r\\n                </nav>\\r\\n                <h4 class=\\\"page-heading\\\">Depreciation Intervals</h4>\\r\\n                <div class=\\\"col-sm-12 form-bg\\\">\\r\\n                    <div class=\\\"form-group add-inputs\\\">\\r\\n                        <!--<form id=\\\"\\\" name=\\\"\\\" method=\\\"post\\\">-->\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">ID<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentDepreciationIntervals.assetDepreciationIntervalId\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentDepreciationIntervals.assetDepreciationIntervalName\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Memo<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7\\\">\\r\\n                                <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"currentDepreciationIntervals.assetDepreciationIntervalMemo\\\"></textarea>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-2\\\">\\r\\n                            <button type=\\\"button\\\" id=\\\"btnFilterDepreciationIntervals\\\" name=\\\"\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Filter\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnAddDepreciationIntervals\\\" *ngIf=\\\"!this.updateMode\\\" (click)=\\\"adddepreciationIntervals()\\\" name=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Add\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnUpdateDepreciationIntervals\\\" *ngIf=\\\"this.updateMode\\\" (click)=\\\"updatedepreciationIntervals()\\\" name=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Update\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnResetDepreciationIntervals\\\" *ngIf=\\\"this.updateMode\\\" (click)=\\\"resetdepreciationIntervals()\\\" name=\\\"\\\" class=\\\"btn btn-default nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Reset\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"excel-upload mtop0\\\">\\r\\n                            <input type=\\\"file\\\" name=\\\"upload[]\\\" multiple=\\\"\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                            <label for=\\\"upload\\\"> <span data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Excel Upload (table rows)\\\"><i class=\\\"fa fa-file-excel-o\\\"></i></span> </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-bordered table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>ID</th>\\r\\n                                    <th>Name</th>\\r\\n                                    <th>Memo</th>\\r\\n                                    <th>Actions</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let depreciationIntervals of depreciationIntervalsList\\\">\\r\\n                                    <td>{{depreciationIntervals.assetDepreciationIntervalId}}</td>\\r\\n                                    <td>{{depreciationIntervals.assetDepreciationIntervalName}}</td>\\r\\n                                    <td>{{depreciationIntervals.assetDepreciationIntervalMemo}}</td>\\r\\n                                    <td>\\r\\n                                        <p-inputSwitch *ngIf=\\\"depreciationIntervals['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(depreciationIntervals,$event)\\\" [(ngModel)]=\\\"depreciationIntervals['isActive']\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"depreciationIntervals['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(depreciationIntervals,$event)\\\" [(ngModel)]=\\\"depreciationIntervals['isActive']\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"depreciationIntervals['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(depreciationIntervals,$event)\\\" [(ngModel)]=\\\"depreciationIntervals['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n                                        <span (click)=\\\"setdepreciationIntervalsToUpdate(editpopup,depreciationIntervals.assetDepreciationIntervalTypeId)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#edit\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-primary nobg\\\" data-original-title=\\\"\\\" edit=\\\"\\\">\\r\\n                                                <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span data-toggle=\\\"modal\\\" data-target=\\\"#history\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-original-title=\\\"History\\\">\\r\\n                                                <i class=\\\"fa fa-history\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span (click)=\\\"openDelete(content,depreciationIntervals)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#data\\\">\\r\\n                                            <a class=\\\"btn btn-danger nobg\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Delete\\\">\\r\\n                                                <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"removedepreciationIntervals()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #editpopup let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"dismissModel()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\"> Edit {{depriciationIntervalsToUpdate.assetDepreciationIntervalId}} Asset Depreciation Intervals</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>ID: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"depriciationIntervalsToUpdate.assetDepreciationIntervalId\\\" class=\\\"form-control\\\">\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>Name: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"depriciationIntervalsToUpdate.assetDepreciationIntervalName\\\" class=\\\"form-control\\\">\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>Memo: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <textarea [(ngModel)]=\\\"depriciationIntervalsToUpdate.assetDepreciationIntervalMemo\\\" class=\\\"form-control\\\"></textarea>\\r\\n                </span>\\r\\n            </p>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"updatedepreciationIntervals()\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\">Update</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<p-dialog header=\\\"Alert\\\" [(visible)]=\\\"display\\\" [modal]=\\\"true\\\" [dismissableMask]=\\\"true\\\" maximizedLeft=\\\"140px\\\" maximizedTop=\\\"140px\\\"\\r\\n          [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [responsive]=\\\"true\\\"\\r\\n          [minY]=\\\"1050\\\" [baseZIndex]=\\\"1100000\\\">\\r\\n    <h5 [ngStyle]=\\\"{'color':'red'}\\\">\\r\\n        Please Enter (*) Mandatory Fields\\r\\n    </h5>\\r\\n    <p-footer>\\r\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"display=false\\\" label=\\\"Close\\\"></button>\\r\\n    </p-footer>\\r\\n\\r\\n</p-dialog>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/depreciation-intervals/depreciation-intervals.component.html\n// module id = 1883\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./depreciation-intervals.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/depreciation-intervals/depreciation-intervals.component.scss\n// module id = 1884\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/depreciation-intervals/depreciation-intervals.component.scss\n// module id = 1885\n// module chunks = 0","export class AssetIntangibleTypeSingleScreen {\r\n    assetIntangibleTypeSingleId: number;\r\n    assetIntangibleSingleId: string;\r\n    assetIntangibleName: string;\r\n    assetIntangibleMemo: string;\r\n    createdBy: string;\r\n    updatedBy: string;\r\n    createdDate: Date;\r\n    updatedDate: Date;\r\n    isDelete: boolean;\r\n    isActive: boolean;\r\n    assetsStatusList: AssetIntangibleTypeSingleScreen[];\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/assetIntangibleTypeSingleScreen.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management</li>\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management Maintanance</li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Intangible Type</li>\\r\\n                    </ol>\\r\\n                </nav>\\r\\n                <h4 class=\\\"page-heading\\\">Asset Status</h4>\\r\\n                <div class=\\\"col-sm-12 form-bg\\\">\\r\\n                    <div class=\\\"form-group add-inputs\\\">\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">ID<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentAssetIntangible.assetIntangibleSingleId\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentAssetIntangible.assetIntangibleName\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Memo<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7\\\">\\r\\n                                <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"currentAssetIntangible.assetIntangibleMemo\\\"></textarea>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-2\\\">\\r\\n                            <button type=\\\"button\\\" id=\\\"btnFilterassetIntangible\\\" name=\\\"\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Filter\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnAddassetIntangible\\\" *ngIf=\\\"!this.updateMode\\\" (click)=\\\"addAssetIntangible()\\\" name=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Add\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnUpdateassetIntangible\\\" *ngIf=\\\"this.updateMode\\\" (click)=\\\"updateAssetIntangible()\\\" name=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Update\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnResetassetIntangible\\\" *ngIf=\\\"this.updateMode\\\" (click)=\\\"resetAssetIntangible()\\\" name=\\\"\\\" class=\\\"btn btn-default nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Reset\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"excel-upload mtop0\\\">\\r\\n                            <input type=\\\"file\\\" name=\\\"upload[]\\\" multiple=\\\"\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                            <label for=\\\"upload\\\"> <span data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Excel Upload (table rows)\\\"><i class=\\\"fa fa-file-excel-o\\\"></i></span> </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-bordered table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>ID</th>\\r\\n                                    <th>Name</th>\\r\\n                                    <th>Memo</th>\\r\\n                                    <th>Actions</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let assetIntangible of assetIntangibleList\\\">\\r\\n                                    <td>{{assetIntangible.assetIntangibleSingleId}}</td>\\r\\n                                    <td>{{assetIntangible.assetIntangibleName}}</td>\\r\\n                                    <td>{{assetIntangible.assetIntangibleMemo}}</td>\\r\\n                                    <td>\\r\\n                                        <p-inputSwitch *ngIf=\\\"assetIntangible['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(assetIntangible,$event)\\\" [(ngModel)]=\\\"assetIntangible['isActive']\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"assetIntangible['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(assetIntangible,$event)\\\" [(ngModel)]=\\\"assetIntangible['isActive']\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"assetIntangible['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(assetIntangible,$event)\\\" [(ngModel)]=\\\"assetIntangible['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n\\r\\n                                        <span (click)=\\\"setAssetIntangibleToUpdate(editpopup,assetIntangible.assetIntangibleTypeSingleId)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#edit\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-primary nobg\\\" data-original-title=\\\"\\\" edit=\\\"\\\">\\r\\n                                                <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span data-toggle=\\\"modal\\\" data-target=\\\"#history\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-original-title=\\\"History\\\">\\r\\n                                                <i class=\\\"fa fa-history\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span (click)=\\\"openDelete(content,assetIntangible)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#data\\\">\\r\\n                                            <a class=\\\"btn btn-danger nobg\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Delete\\\">\\r\\n                                                <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n<!--Confirmation for Delete-->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"removeAssetIntangible()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #editpopup let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"dismissModel()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">×</button>\\r\\n            <h4 class=\\\"modal-title\\\"> Edit {{assetIntangibleToUpdate.assetIntangibleSingleId}} Intangible Type</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>ID: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"assetIntangibleToUpdate.assetIntangibleSingleId\\\" class=\\\"form-control\\\">\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>Name: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"assetIntangibleToUpdate.assetIntangibleName\\\" class=\\\"form-control\\\">\\r\\n                </span>\\r\\n            </p>\\r\\n            <hr>\\r\\n            <p>\\r\\n                <span class=\\\"col-sm-3\\\"><b>Memo: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                    <textarea [(ngModel)]=\\\"assetIntangibleToUpdate.assetIntangibleMemo\\\" class=\\\"form-control\\\"></textarea>\\r\\n                </span>\\r\\n            </p>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"updateAssetIntangible()\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\">Update</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<p-dialog header=\\\"Alert\\\" [(visible)]=\\\"display\\\" [modal]=\\\"true\\\" [dismissableMask]=\\\"true\\\" maximizedLeft=\\\"140px\\\" maximizedTop=\\\"140px\\\"\\r\\n          [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [responsive]=\\\"true\\\"\\r\\n          [minY]=\\\"1050\\\" [baseZIndex]=\\\"1100000\\\">\\r\\n    <h5 [ngStyle]=\\\"{'color':'red'}\\\">\\r\\n        Please Enter (*) Mandatory Fields\\r\\n    </h5>\\r\\n    <p-footer>\\r\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"display=false\\\" label=\\\"Close\\\"></button>\\r\\n    </p-footer>\\r\\n\\r\\n</p-dialog>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/asset-intangible-type-single-screen/asset-intangible-type-single-screen.component.html\n// module id = 1887\n// module chunks = 0","export class AssetTypeSingleScreen {\r\n    assetTypeSingleScreenId: number;\r\n    assetTypeSingleId: string;\r\n    assetTypeName: string;\r\n    assetTypeMemo: string;\r\n    createdBy: string;\r\n    updatedBy: string;\r\n    createdDate: Date;\r\n    updatedDate: Date;\r\n    isDelete: boolean;\r\n    isActive: boolean;\r\n    assetTypeList: AssetTypeSingleScreen[];\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular2-router-loader/src!./ClientApp/app/models/assettypesinglescreen.model.ts","module.exports = \"<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n    <div class=\\\"right_col\\\" role=\\\"main\\\">\\r\\n        <div class=\\\"x_panel\\\">\\r\\n            <div class=\\\"x_content\\\">\\r\\n                <nav aria-label=\\\"breadcrumb\\\">\\r\\n                    <ol class=\\\"breadcrumb\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management</li>\\r\\n                        <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\">Asset Management Maintanance</li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Asset Type</li>\\r\\n                    </ol>\\r\\n                </nav>\\r\\n                <h4 class=\\\"page-heading\\\">Asset Status</h4>\\r\\n                <div class=\\\"col-sm-12 form-bg\\\">\\r\\n                    <div class=\\\"form-group add-inputs\\\">\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">ID<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentAssetTypeetStatus.assetTypeSingleId\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Name<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7 cust-name\\\">\\r\\n                                <div class=\\\"inner-addon right-addon w200 inline-block\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"currentAssetTypeetStatus.assetTypeName\\\" class=\\\"form-control ui-autocomplete-input\\\" id=\\\"cmname\\\" name=\\\"\\\" autocomplete=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-4 w250\\\">\\r\\n                            <label class=\\\"control-label col-sm-4\\\">Memo<span class=\\\"clr-red\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-7\\\">\\r\\n                                <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"currentAssetTypeetStatus.assetTypeMemo\\\"></textarea>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-sm-2\\\">\\r\\n                            <button type=\\\"button\\\" id=\\\"btnFilterassetTypes\\\" name=\\\"\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Filter\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnAddassetTypes\\\" *ngIf=\\\"!this.updateMode\\\" (click)=\\\"addAssetType()\\\" name=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Add\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnUpdateassetTypes\\\" *ngIf=\\\"this.updateMode\\\" (click)=\\\"updateAssetType()\\\" name=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Update\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\r\\n                            <button type=\\\"button\\\" id=\\\"btnResetassetTypes\\\" *ngIf=\\\"this.updateMode\\\" (click)=\\\"resetAssetType()\\\" name=\\\"\\\" class=\\\"btn btn-default nobg\\\" data-toggle=\\\"tooltip\\\" data-original-title=\\\"Reset\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"excel-upload mtop0\\\">\\r\\n                            <input type=\\\"file\\\" name=\\\"upload[]\\\" multiple=\\\"\\\" id=\\\"upload\\\" class=\\\"uploaddoc upload-file\\\" data-multiple-caption=\\\"{count} files selected\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\">\\r\\n                            <label for=\\\"upload\\\"> <span data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Excel Upload (table rows)\\\"><i class=\\\"fa fa-file-excel-o\\\"></i></span> </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-bordered table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>ID</th>\\r\\n                                    <th>Name</th>\\r\\n                                    <th>Memo</th>\\r\\n                                    <th>Actions</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let assetTypes of assetTypeList\\\">\\r\\n                                    <td>{{assetTypes.assetTypeSingleId}}</td>\\r\\n                                    <td>{{assetTypes.assetTypeName}}</td>\\r\\n                                    <td>{{assetTypes.assetTypeMemo}}</td>\\r\\n                                    <td>\\r\\n\\r\\n                                        <p-inputSwitch *ngIf=\\\"assetTypes['isActive']==true\\\" matTooltip=\\\"Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(assetTypes,$event)\\\" [(ngModel)]=\\\"assetTypes['isActive']\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"assetTypes['isActive']==false\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(assetTypes,$event)\\\" [(ngModel)]=\\\"assetTypes['isActive']\\\"></p-inputSwitch>\\r\\n                                        <p-inputSwitch *ngIf=\\\"assetTypes['isActive']==null\\\" matTooltip=\\\"In Active\\\" onLabel=\\\"on\\\" offLabel=\\\"off\\\" (onChange)=\\\"toggleIsActive(assetTypes,$event)\\\" [(ngModel)]=\\\"assetTypes['isActive']\\\"></p-inputSwitch>\\r\\n\\r\\n                                        <span (click)=\\\"setAssetTypeToUpdate(editAssetTypes,assetTypes.assetTypeSingleScreenId)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#edit\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-primary nobg\\\" data-original-title=\\\"\\\" edit=\\\"\\\">\\r\\n                                                <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span data-toggle=\\\"modal\\\" data-target=\\\"#history\\\">\\r\\n                                            <a data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-success nobg\\\" data-original-title=\\\"History\\\">\\r\\n                                                <i class=\\\"fa fa-history\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span (click)=\\\"openDelete(content,assetTypes)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#data\\\">\\r\\n                                            <a class=\\\"btn btn-danger nobg\\\" data-toggle=\\\"tooltip\\\" title=\\\"\\\" data-original-title=\\\"Delete\\\">\\r\\n                                                <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Are You Sure Want to Delete?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissModel()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"removeAssetType()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\">No</button>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #editAssetTypes let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button type=\\\"button\\\" (click)=\\\"dismissModel()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">×</button>\\r\\n                    <h4 class=\\\"modal-title\\\"> Edit {{assetTypeToUpdate.assetTypeSingleId}} Asset Type</h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <p>\\r\\n                        <span class=\\\"col-sm-3\\\"><b>ID: <span style=\\\"color:red\\\">*</span> </b></span> <span class=\\\"col-sm-6\\\">\\r\\n                            <input type=\\\"text\\\"  [(ngModel)]=\\\"assetTypeToUpdate.assetTypeSingleId\\\" class=\\\"form-control\\\">\\r\\n                        </span>\\r\\n                    </p>\\r\\n                    <hr>\\r\\n                    <p>\\r\\n                        <span class=\\\"col-sm-3\\\"><b>Name: <span style=\\\"color:red\\\">*</span></b></span> <span class=\\\"col-sm-6\\\">\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"assetTypeToUpdate.assetTypeName\\\" class=\\\"form-control\\\" >\\r\\n                        </span>\\r\\n                    </p>\\r\\n                    <hr>\\r\\n                    <p>\\r\\n                        <span class=\\\"col-sm-3\\\"><b>Memo:  <span style=\\\"color:red\\\">*</span></b></span> <span class=\\\"col-sm-6\\\">\\r\\n                            <textarea [(ngModel)]=\\\"assetTypeToUpdate.assetTypeMemo\\\" class=\\\"form-control\\\"></textarea>\\r\\n                        </span>\\r\\n                    </p>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" (click)=\\\"updateAssetType()\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\">Update</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"dismissModel()\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                </div>\\r\\n            </div>\\r\\n       \\r\\n</ng-template>\\r\\n\\r\\n<p-dialog header=\\\"Alert\\\" [(visible)]=\\\"display\\\" [modal]=\\\"true\\\" [dismissableMask]=\\\"true\\\" maximizedLeft=\\\"140px\\\" maximizedTop=\\\"140px\\\"\\r\\n          [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [responsive]=\\\"true\\\"\\r\\n          [minY]=\\\"1050\\\" [baseZIndex]=\\\"1100000\\\">\\r\\n    <h5 [ngStyle]=\\\"{'color':'red'}\\\">\\r\\n        Please Enter (*) Mandatory Fields\\r\\n    </h5>\\r\\n    <p-footer>\\r\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"dismissModel()\\\" label=\\\"Close\\\"></button>\\r\\n    </p-footer>\\r\\n\\r\\n</p-dialog>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/asset-type-single-screen/asset-type-single-screen.component.html\n// module id = 1889\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./asset-type-single-screen.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/asset-type-single-screen/asset-type-single-screen.component.scss\n// module id = 1890\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/components/asset-type-single-screen/asset-type-single-screen.component.scss\n// module id = 1891\n// module chunks = 0"],"sourceRoot":""}